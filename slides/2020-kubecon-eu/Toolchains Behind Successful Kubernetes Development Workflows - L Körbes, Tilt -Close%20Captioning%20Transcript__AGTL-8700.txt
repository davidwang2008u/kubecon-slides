Toolchains Behind Successful Kubernetes Development Workflows: AGTL-8700 - events@cncf.io - Wednesday, August 19, 2020 6:52 AM - 56 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:01:41 [W] Hello everyone.
00:01:43 [W] Welcome to successful Cube.
00:02:16 [W] Hello, everyone. Welcome to successful kubenetes development work flows. I'm Al I'll stay here in the corner before we start talking about kubenetes development workflow side like us to take a quick detour and talk about
00:07:22 [W] For a second.
00:07:33 [W] So assume most of you are familiar with IDs you learn to code using one or you didn't put you learn about them afterwards either way, you know kind of what IDs are now what ideas do is that they address a bunch of problems that
00:07:39 [W] Wanted solutions for so they provide you with syntax highlighting code completion bunch of stuff like that.
00:07:52 [W] And these things are basically so the eye and ID e stands for integrated and an ID is basically a collection of solutions for a problem sets that is common among developers when they're trying to
00:08:00 [W] And ID is basically a collection of solutions for a problem sets.
00:08:01 [W] That is common among developers when they're trying to code.
00:08:01 [W] Now mean particularly. I have an interesting relationship with IDs and that's because I didn't know they existed for the longest time.
00:08:16 [W] So for many many years my ID was this and I wrote rootkits and see using notepad.
00:08:18 [W] I wrote my own WordPress before WordPress came along and PHP also using notepad and I didn't know because I learned to code basically from books and I lived in a small City.
00:08:29 [W] didn't have any friends so it took many many years for me, too.
00:08:34 [W] Really learned that IDs existed but I mean it was fine. I could get the job done.
00:08:44 [W] It was just a lot less convenient than it could have been otherwise, so let's tie this back into kubernative.
00:08:47 [W] So lots of us here watching the stock it Cube Khan, I would bet that the good bunch of you watching here.
00:08:59 [W] I would bet that a good amount of you can write kubernative CMO by hand from memory and it would run.
00:09:02 [W] I bet a good chunk of you know, everything there is to know that is relevant about containers and kubenetes and so many other Technologies like that.
00:09:16 [W] Basically we are the people coming to keep con. We know the stuff some of you even know what this is and if you don't don't Google it because you're going to have nightmares, but if you do know this stuff, you know what I'm talking
00:09:27 [W] That the good bunch of you watching here.
00:09:28 [W] I would bet that a good amount of you can write keep your not easy Mo by hand from memory and it would run.
00:09:28 [W] I bet a good chunk of you know, everything there is to know that is relevant about containers and kubenetes and so many other Technologies like that.
00:09:29 [W] Basically we are the people coming to Cuba con. We know the stuff some of you even know what this is.
00:09:30 [W] And if you don't don't Google it because you're gonna have nightmares, but if you do know this stuff, you know what I'm talking about.
00:09:35 [W] And the thing is we learn to code using the equivalent of notepad. We learn to do things by hand because when we started we had no choice, but that's not the case anymore nowadays.
00:09:42 [W] There are many solutions not packaged up in an ID Farm, but there are many solutions that fixed lots of the inconveniences of developing for kubectl.
00:09:51 [W] Not ease and what I'm trying to say here is that we should give people good tools because even though doing things on notepad worked for us like it works for me.
00:10:02 [W] We shouldn't expect that. Everyone else is going to learn in the same way if it's not the most convenient.
00:10:08 [W] So containers if you were nineties are incredible, but except for the development workflow, which has problems and everyone complains about these if you're on Twitter you recognize you're going to recognize everything.
00:10:24 [W] I'm going to talk about. So what I'm going to do here is I'm going to tell you I'm going to tell you the most common problems. So I'm going to give you the problem set and I'm going to tell you how many different companies teams and projects solve those problems.
00:10:38 [W] Going to talk about so what I'm going to do here is I'm going to tell you I'm going to tell you the most common problems. So I'm going to give you the problem set and I'm going to tell you how many different companies teams and projects solve those
00:10:39 [W] The eye and IDE get it's not all integrated.
00:10:44 [W] So I'm going to give you a bunch of solutions and you're going to pick them yourself.
00:10:47 [W] So let's let's get to it.
00:10:49 [W] I'm Al if you want to see that picture.
00:10:52 [W] There you go.
00:10:56 [W] I work at tilt previously work the garden.
00:10:57 [W] They're both companies focused on the development experience side of kubenetes.
00:11:03 [W] And that means that half my job is listening to developers complaining about their development workflows working to solve them and the other half of my job is basically coredns.
00:11:10 [W] Coming here and sharing those findings with you.
00:11:18 [W] I'm going to repeat this slide again at the end. If you want to get all the contact information now, what are the problems the problems are one development clusters to managing both load of config files three
00:11:28 [W] After you write your code for sharing cluster context and I'm going to explain what this is when you get there and Extras, you know, this word. That means extras. Okay protagonists.
00:11:44 [W] I'm going to tell you about how these groups fixed those problems. They are one is datadog cloud monitoring SAS provider.
00:11:51 [W] I'm sure most of you know datadog their engineering team has about 800 developers.
00:11:57 [W] I'm going to talk about Luna which is small.
00:11:59 [W] Sure, but not tiny company.
00:12:04 [W] So there are a manufacturer of electric scooters in Berlin.
00:12:06 [W] There's Cooter's have internet.
00:12:08 [W] I don't know how that works.
00:12:09 [W] But yeah, their team is about 25 gonna talk about mindspace their Creative Learning and gamification agency.
00:12:19 [W] Very tiny. Their development team is far people.
00:12:20 [W] So here we have examples of three different magnitudes of problems and solutions and we also have
00:12:28 [W] Closer API and we have probably a bunch of friends from cluster API presenting a cube town right now and with cluster API, basically you can have a management cluster that you use to create and manage other clusters.
00:12:42 [W] So you have your management clusters that you use to create a cluster on Google and Amazon and Microsoft and it's like you manage clusters the way you manage kubernative resources. That's basically the idea their workflow is very
00:12:55 [W] The typical app Dev workflow and that's very interesting.
00:13:03 [W] They have about 230 contributors.
00:13:06 [W] It's an open source project.
00:13:09 [W] So people come and go but I think that's the number I got from the repo.
00:13:17 [W] This is a funny joke my friend made when working on cluster API and the point is that you can write your app.
00:13:19 [W] You can run your app in a container. You can run your app in a container in a VM and then you can run your app in a container in a VM and that app is going to create other containers if you
00:13:26 [W] is that runs apps and yeah plus 3 Pi sometimes take some efforts to understand.
00:13:34 [W] But anyway, let's move on development clusters.
00:13:40 [W] So if you're not using a development clustering are basically develop your notepad because you're writing code that supposed to run in a cluster.
00:13:51 [W] if you're developing it outside the cluster you're going to end up with discrepancies and that's an eye and that's hard to track down and you don't want your developers to have to deal with it. So you should just use a development cluster now there are two
00:13:59 [W] You can use you can use a local cluster. You can use a remote cluster the local one runs on your laptop the remote one runs at Google Amazon Microsoft Etc.
00:14:06 [W] If you want to use a local cluster, the first question you have to ask yourself is does my system fit my laptop's read if it doesn't that's going to be hard to use a local cluster but not impossible.
00:14:21 [W] Cube kind micro Kate's they all have their pros and cons.
00:14:33 [W] So you need to know what you're doing and what they are good at.
00:14:41 [W] So I'm going to when I talk about cluster AP, I'm going to tell you why they're using as the specific type of local cluster that the using the good thing about local clusters is you just double click to install. You don't have to pay a monthly fee as long as you can, you know,
00:14:48 [W] Electricity to run your laptop and the main thing to be concerned about is compute. So your laptop is going to run out of memory or it's not going to have enough processing power.
00:15:02 [W] That's the thing that might be annoying network is not so much of a concern because you don't need to be pushing and pulling things through the internet. So that's not so much of a problem.
00:15:14 [W] It is a problem though, if you're using a remote cluster because if pulling images and pushing
00:15:18 [W] has takes a lot of bandwidth and that means a lot of time depending on how good your connection is so you can we promote cluster you can have like infinite memory and CPU, but network is going to be annoying annoying issue
00:15:33 [W] Workflow, so that's something to pay attention to now a remote cluster.
00:15:42 [W] Like I said, the main advantage is infinite Ram infinite CPU, but of course, it costs Cash Money dollars, which is annoying and you need to pay attention to if you don't want a big surprise, it requires more infrared to set up and
00:15:53 [W] Just double click to install you have to have someone with experience in these things to provision all the infrastructure that you need to maintain it and basically to do better than just fiddling around because if you're if you don't know what you're doing, you're going to end up wasting a lot
00:16:09 [W] So you don't want to do that, right?
00:16:13 [W] So datadog, how did they deal with this issue?
00:16:17 [W] They have 300 plus services. So it won't fit a laptop. They use one huge development cluster in the public Cloud that is self-managed.
00:16:30 [W] So people always ask should every developer have a cluster should every develop should everyone work on one big cluster.
00:16:34 [W] What I always see is everyone develops on one big cluster you split either by teams or by developers where everyone has their own namespace and usually that's how it's
00:16:39 [W] it's done datadog has rapper tools for provisioning. So developers don't have to do any of it by hand and something interesting is that they have like a staging where every service is running in like a
00:16:54 [W] A purse where everyone has their own namespace and usually that's how it's done datadog has repertoires for provisioning.
00:16:55 [W] So developers don't have to do any of it by hand and something interesting is that they have like a staging where every service is running in like a basically the stable form of it the current form of it when you're working on one of them you basically
00:16:59 [W] Sound of it the current form of it when you're working on one of them you basically clone it into your namespace you modify the version that is in your name space, but you don't need to run every surface again in your namespace. Only the one you're working on
00:17:10 [W] You're not working on you can just use the ones that are in staging.
00:17:15 [W] So that's really cool.
00:17:18 [W] It's something I hadn't seen before talking to datadog and it's an interesting pattern.
00:17:25 [W] They also have options where you can inject debugging tools and to the things that you're working on and so on and this is a more common thing in big companies where you basically have a push button and suddenly that container has a ton of debugging tooling and that kind of
00:17:35 [W] Mine space they do micro k8s on Linux, but mostly they use Docker for Mac.
00:17:48 [W] They use Docker compose for tests because just because running kubernative in see I can be a bit fiddly.
00:17:49 [W] So they use composed for that and their local clusters are basically exactly the same as in production as what they run in production except for, you know number of replicas in that kind of a thing and this brings me to an important topic
00:18:03 [W] This kubenetes on the laptop is fine when you do it, right?
00:18:12 [W] So everyone's always joking around.
00:18:13 [W] Okay, we're not he's on the laptop.
00:18:15 [W] It's going to set your laptop on fire.
00:18:16 [W] That's silly Lala know if you know what you're doing and you you're doing things at the right scale pure night is on the laptop works just fine.
00:18:30 [W] So let's stop with, you know, the silly thing of bashing kubenetes and laptop because that's pointless.
00:18:32 [W] I would never tell mine space this company.
00:18:34 [W] To use a remote cluster when they are a hundred percent happy with the local cluster and they don't want or have to deal with the extra complexity of managing a remote cluster.
00:18:45 [W] Moving on.
00:18:48 [W] Oh, no also works also uses doctor for Mac mostly and here we have an interesting case and I just told you that if you're doing things at the right scale a local cluster is fine when you're past a certain scale you need to move on to remote cluster
00:19:02 [W] You and you can still handle things locally because it's convenient.
00:19:08 [W] So, how do you do that? What Mona did is that they split their app into car services and optional Services. The car services are always running the optional Services don't depend on each other.
00:19:22 [W] They depend only on the core services and they are basically flip switches that you can turn on and off so you run all the car services plus that one that you're working on then you turn that one off and you turn the other one on to work on that one and basically
00:19:32 [W] yeah, as long as you're not running everything at the same time, it works fine on your laptop.
00:19:40 [W] I assume at some point.
00:19:46 [W] They're going to grow past it and they're going to have to start using remotes development clusters. But right now this has been working for them.
00:19:52 [W] Even though it's been a long time that they can't run everything on the laptop at once.
00:19:54 [W] They still have a workflow where I can work.
00:19:59 [W] So that's interesting and they are very amazing at bottom ation. And that kind of stuff we're going to get to that in a second cluster API they use
00:20:03 [W] Kind as the local development cluster. The reason for that is because when your business is creating the leading clusters you want to solution that can create and delete clusters fast and kind is very good at that.
00:20:17 [W] So with minikube they would have trouble with micro case.
00:20:21 [W] For the job now closer API, of course, you can use it to create clusters on basically every cloud and so it does use every cloud but for the initial management clusters, they usually recommend kind take away
00:20:47 [W] But it uses local cluster once you can't fit your app on your laptop anymore.
00:20:59 [W] Then you move on to remote cluster, but you need to know that that move is going to be costly because suddenly now you're paying a monthly fee and you're going to need a professional you're going to need the expertise to create to maintain to modify that remote cluster
00:21:08 [W] That's also a consideration now config files config files are a problem, and I'm just going to start off by saying that if you're writing demo by hand, you're developing a notepad.
00:21:21 [W] We don't want to do that developers on like to do that.
00:21:25 [W] It's a great way to make mistakes, which we can simply avoid.
00:21:31 [W] The reason is that even for the simplest kubenetes app, you're going to end up with a ton of the Anvil and basically if you change the name of one thing in one of them, you're going to have to update it on all of them.
00:21:39 [W] And that's hard because we're humans we make mistakes. So what should we do instead datadog uses how so they use Helm templates different values for different environments.
00:21:53 [W] Of course, you don't need a hundred replicas in development.
00:21:54 [W] You just need one and basically you write llamo the first time when you create a service you do the template and all of that on how and everyone else basically it integrates with tilt. No one else has to think about it except the person that right.
00:22:09 [W] The first time I'm going to talk about tilt in a minute.
00:22:13 [W] Mine space same thing how imp templates integrated with tilt what it did what they do that's different.
00:22:23 [W] It mind space is that datadog is huge.
00:22:26 [W] So there is a very broad range of services running if your honor if you're doing something smaller, you can make Services very uniform.
00:22:38 [W] You create a service you do the template and all of that on how and everyone else. Basically it integrates with tilt.
00:22:39 [W] No one else has to think about it except the person that writes it the first time.
00:22:40 [W] I'm going to talk about tilts in a minute mine space same thing Helm templates integrated with tilt what it did what they do that's different it mind space is that datadog is huge. So there is a very broad
00:22:41 [W] The first is not that simple but you get my point.
00:22:44 [W] Oh, no, this is a very similar thing as mine space does but they have some options where you can override things depending on what you're doing.
00:22:54 [W] So, you know, the templating is a bit more complex.
00:22:56 [W] But again same idea cluster API, once again, everything is extremely uniform just like mine space and oh no, so it's very easy to you know, you create a new service you basically control C control V nobl9.
00:23:09 [W] And change some properties closer API uses lots of overlays because they use customized and not how so customized has this concept of overlays which is different. Once again, everything is extremely uniform.
00:23:24 [W] So my I think the big takeaway here is if you can make things are uniform do it because it's going to save you trouble. If you don't know how the templating stuff works basically here. You have the template on one side the generated
00:23:37 [W] You change the templates and it propagates into all the different config files.
00:23:49 [W] So you don't have the risk of updating one config file forgetting to update the other and then they don't mesh well together anymore.
00:23:50 [W] Take away.
00:23:52 [W] Everyone uses a template solution big company.
00:23:56 [W] Sometimes they create their own templating Solutions. I would tell you to not do that unless you absolutely no you have to most people use Helm I think from my experience of from the companies. I've been in touch with and there's
00:24:07 [W] A lot of integration with tools like tilt which is the next category.
00:24:12 [W] We're going to discuss feedback loop automation.
00:24:18 [W] So well, let me tell you a story.
00:24:26 [W] So if every time I make a change to my code, I need to Docker billdocker push and keep cuddle apply to see my change running live if I need to do all of this.
00:24:29 [W] I am closing with notepad.
00:24:30 [W] That's silly.
00:24:31 [W] We don't want to do that and sometimes people say, okay.
00:24:35 [W] Yeah, but I'm saving 30 seconds at a time at the end of the day that maybe 10
00:24:38 [W] It's 10 minutes of developer time that important and the question is you're asking the wrong question.
00:24:46 [W] I don't care about the fact that it takes 10 minutes.
00:24:49 [W] I care about the fact that every time a developer has to do that.
00:24:50 [W] They're moving their focus away from what they actually want to be doing.
00:24:56 [W] So you have a very high cognitive cost to being interrupted all the time.
00:25:04 [W] Closing with notepad.
00:25:07 [W] That's silly we don't want to do that and sometimes people say okay I but I'm saving 30 seconds at a time at the end of the day that maybe 10 minutes is 10 minutes of developer time that important and the question is you're asking the wrong question.
00:25:09 [W] I don't care about the fact that it takes 10 minutes I care about the fact that every time a developer has to do that.
00:25:09 [W] They're moving their focus away from what they actually want to be doing.
00:25:10 [W] So you have a very high cognitive cost tufin.
00:25:11 [W] Being interrupted all the time. If a developer can Simply Save the file blink their eyes and their new code is up and running instantly that is ideal in terms of both being productive and to being happy as a developer because when you have a
00:25:13 [W] Being productive and to being happy as a developer because when you have a ton of boilerplate and between you and getting your job done you few miserable and we don't want that.
00:25:23 [W] So how what can we do? There are plenty of tools.
00:25:27 [W] I'm going to talk about Tails, but there are others like Garden scaffold dragged basically these tools they watch your source code every time you make a change to your source code the conventional workflow is you rebuild that Docker image you ship it around.
00:25:39 [W] Registry you update your development cluster with that and this is all behind the scenes the developer basically just changes a file and wait a couple seconds.
00:25:47 [W] They don't have to do anything by hand the workload that most people are using now is live updates where you make a change to your code and there's a container that is permanently running and you simply update a binary
00:26:00 [W] Around the container you don't restart anything and it's very very fast and snappy now.
00:26:10 [W] I posted this on Twitter.
00:26:15 [W] Basically, how long does it take between changing a line of code and that code being live and running in your development cluster?
00:26:17 [W] A lot of people said 30 minutes, which I find really sad.
00:26:23 [W] I always aim for two seconds. You can get two seconds.
00:26:27 [W] a whole talk about tips and tricks and hacks to achieve this the smallest the time the better you should aim for
00:26:33 [W] feedback loop time being so fast that you don't have time to pick up your phone and look at pictures of cats.
00:26:37 [W] Now datadog, they use tailed currently 40% of developers use toads.
00:26:45 [W] They're rolling it out.
00:26:51 [W] They have so tote is one of those tools that allows for tons of customizations and datadog.
00:26:56 [W] They basically pull their CIA image locally.
00:27:03 [W] And then there's he is images builds things locally, which are then synced into the build cluster into the dive cluster.
00:27:04 [W] So that's cool.
00:27:06 [W] cool. Of course they use
00:27:07 [W] I'm from tilt. So basically when you change a Helm template, you don't have to run Helm tilts going to do that for you.
00:27:18 [W] So for developers, basically, I changed something. I save a file magic.
00:27:19 [W] Tons of customizations and datadog. They basically pulled their CIA image locally and then there's he is images builds things locally which are then synced into the build cluster into the dive cluster.
00:27:32 [W] So that's cool.
00:27:32 [W] Of course, they use Helm from Thoth. So basically when you change ahem template, you don't have to run Helm tilts going to do that for you.
00:27:33 [W] So for developers, basically, I changed something. I save a file magic. It's up and running.
00:27:34 [W] Ting and they create a lot of lots of buttons until it's to help with Discovery.
00:27:35 [W] So that's really cool what this means is if we look at the green things here.
00:27:37 [W] Those are all my services except for the last one.
00:27:37 [W] That one's a custom button.
00:27:39 [W] Of course you have services on one side and logs in the other in this dashboard.
00:27:40 [W] This is what it looks like and when you click that button that button that says flush database it's going to of course flush your database. Sometimes you have a lot of automations in your make file and petabyte-scale.
00:27:49 [W] Don't know about them and does they don't use them and datadog uses all of these buttons to facilitate developers knowing things that they can do.
00:28:01 [W] So, for example, there's a button to get dependencies.
00:28:03 [W] There's a button to do that a base migration.
00:28:08 [W] So mu Nu is also very interesting in this regard.
00:28:09 [W] It's one of my favorite companies.
00:28:12 [W] They automate basically everything that is humanly possible.
00:28:17 [W] The Tilt extensions feature was somewhat inspired by what they were doing and it's really cool.
00:28:19 [W] cool, so they automate setting up internal proxies TLS management volt integration using tracing as a developer tool a bunch of crazy stuff with Mongo that I don't know enough to explain to you basically
00:28:34 [W] And it's really cool.
00:28:34 [W] So they automate setting up internal proxies TLS management volt integration using tracing as a developer tool a bunch of crazy stuff with Mongo that I don't know enough to explain to you basically everything
00:28:36 [W] Automated they do the ultimate things with tilt.
00:28:44 [W] So it's a very smooth workflow where basically a developer doesn't need to worry about anything.
00:28:47 [W] They just get things up and running with one command.
00:28:48 [W] They write their code.
00:28:52 [W] They change the code and everything else in the whole world is automatic and they don't have to think about it.
00:28:57 [W] So a big shout out to David Rubin for all his amazing work there and for writing the first third-party total extension.
00:29:02 [W] Now mine space - space was one of the first users of tilt their usage of it was similar to know but basically so many of the customizations that they wrote for tilt were then turned into knative features that now they basically
00:29:17 [W] So a big shout out to David Rubin for all his amazing work there and for writing the first third-party toast extension.
00:29:19 [W] Now mine space - space was one of the first users of tilt their usage of it was similar to Uno, but basically so many of the customizations that they wrote for tilt where then turned into knative features that now they basically
00:29:20 [W] But there's their setup is somewhat similar to honor now cluster API, they have lots of interesting things.
00:29:30 [W] So they automate a bunch of stuff like certificate management.
00:29:40 [W] Like what I talk about low know they have a bunch of overlays so that there's like this custom automations and then you can overlay certain things on top of the custom automations.
00:29:45 [W] So developers don't have to all have to do the same thing. They can customize some things they used to build binaries in-toto.
00:29:48 [W] Side containers now they built things locally and they live reload binaries into basically a scratch container. It's not scratch, but it's kind of like scratch so that they don't need all the
00:30:03 [W] Containers, so that is cool as well.
00:30:08 [W] Take aways when you have a very uniform structure of services, which we talked about in the previous section.
00:30:18 [W] You can do lots of cool things with Automation and that is really cool.
00:30:25 [W] So that's the stuff that oh, no does the stuff that mindspace used to do this stuff that cluster API does with datadog is a bit more complicated because they're very big and they have things that are very different but they also do tons of automation as well.
00:30:34 [W] So take away is use a tool like totes or Garden or scaffold or draft automate the bejesus out of your system. So that developers can really focus on developing and not on boilerplate cluster contact sharing
00:30:50 [W] Quickly something happened.
00:30:53 [W] You need your friends to look at it.
00:30:54 [W] How do you do that? When your environment is not your computer? Your environment is a cluster and your binary is not a binary.
00:31:01 [W] It's 35 binaries in a cluster.
00:31:10 [W] So if you're copying pasting logs here, there's some give-and-take. I'm not going to shoot.
00:31:16 [W] I'm not going to say to copy and pasting locks is always bad, but it's kind of getting into notepad type notepad territory. So for datadog because they have the big huge.
00:31:20 [W] Open cluster when someone needs to look into what their colleague is doing.
00:31:26 [W] They just switch to their name space. So it's pretty easy.
00:31:33 [W] I've seen also this pattern and others other companies of the scale of datadog.
00:31:35 [W] So this is a very common thing to do.
00:31:43 [W] do. So use a rapper tool don't use Cube cuddle make it easy for your developers and they can just switch around namespaces and see what their colleagues are doing. Pretty easy problem solved.
00:31:46 [W] For mine space and I did this research before Corona. So I don't know what people are doing now, but they were doing things the analog way. So here's my laptop take a look at it.
00:32:02 [W] And you know, what at the certain scale that is better than high tech Solutions. One of was in the same space except it only uses so much automation.
00:32:11 [W] So if anyone has ever had the same problem twice, they just automated out of existence.
00:32:13 [W] so congrats to them and it makes it so that things are easy to use.
00:32:16 [W] Feature of tilt which is basically you have the toast - bar that shows all of your logs all of your alerts everything when you take a snapshot tilt basically packages up all the current state of your application.
00:32:33 [W] You can send that to your friend.
00:32:34 [W] They just click link.
00:32:35 [W] They open it in the browser.
00:32:38 [W] They certainly can see all the logs all the alerts everything that your application is currently doing the current state of it.
00:32:45 [W] And then that makes it easy for your colleagues to help debug what's going on in your cluster takeaways if you're a big company.
00:32:53 [W] Company everyone.
00:32:55 [W] You have a big cluster for everyone a different name space for everyone just look into your colleagues namespace and then you can see what's going on a middle ground is you can use a feature like snapshots and if you're a very small company just use the analog
00:33:07 [W] With extra complexity though. I think like if you're already using tilt you should just use tote snapshots, but that's a separate discussion. Now a couple of extras we are getting close to the end here so datadog and oh, no, they don't use debuggers like,
00:33:22 [W] GDB they don't use those they always output things to logs and then they use tracing as a dip as a debugging tool.
00:33:35 [W] So only uses Jaeger datadog of course uses. It uses datadog.
00:33:36 [W] So datadog dog feeds datadog that was hard to pronounce and a common complaint about tracing is that you have to adjust your code to include tracing.
00:33:48 [W] It doesn't just work on top of what's already there.
00:33:50 [W] You have to put the code there. I asked datadog about this and they said oh, you know what we have
00:33:53 [W] this author instrumentation thing here that for a good chunk of people.
00:33:58 [W] It solves the problem so kudos to them and that's great and I look forward to being able to play around with that myself.
00:34:05 [W] This is what tracing looks like.
00:34:08 [W] So here you have basically one request getting traced through a bunch of services.
00:34:15 [W] You can see the blue thing. There is basically things moving inside one service. Once it changes to Orange. That means that that request is now on another surface and then you can just track as one request goes through
00:34:27 [W] Of your application you can see where it goes and what happened along the way and that is a cool thing to mind space. They use regular normal debuggers.
00:34:43 [W] So they used tell to do the exposing the parts thing and then basically their ID connects to the node remote debugging thing and that does the job
00:34:49 [W] And cluster API is probably the most like analog thing here where basically they don't have a use case where they really want to use an actual debugger.
00:35:04 [W] So they're debugging method is a ton of print lines that then get outputs to the console.
00:35:08 [W] They have a very fast feedback loop, so that works for them.
00:35:16 [W] And if you're going to use this if you're going to do a print line debugging style, I would suggest using a tool like Stern to aggregate all logs. Of course, if you're using something like tilt tilt does
00:35:19 [W] For you, but if you're not Stern is a great way to do this as well.
00:35:25 [W] Take away integration with tracing and debugging tools is kind of rare, but growing especially tracing.
00:35:32 [W] I see a lot of people using it more and more it's easier. I think than debugging debugging.
00:35:39 [W] It's like when your once you're in that mind State it's great.
00:35:42 [W] But until you get there it can look a bit daunting.
00:35:43 [W] So take away notepad.exe is not a development environment.
00:35:49 [W] So let's not do that.
00:35:53 [W] So thanks for coming to this talk and one more thing.
00:36:06 [W] We're creating the my team are totes.
00:36:06 [W] We're creating this website called Ducks. Not Daft.
00:36:13 [W] We're going to have videos articles and livestream about developer experience.
00:36:22 [W] We're basically going to talk about all the things that I talked to your like today is how more customized should I use kind minikube or micro Kate's so we're going to have a ton of content about all of this stuff by the time you're watching this talk.
00:36:26 [W] probably gonna already have something up there right now. It's just a sign-up page.
00:36:28 [W] So do sign up if this is if this floats your boat so that you can learn more as we as we learn more about the subject.
00:36:36 [W] So here's how you can get in touch.
00:36:38 [W] Here's links for all of those companies.
00:36:41 [W] Please do reach out to eat message email and talk to you soon. So thanks for watching this talk and bye. Bye. Have a great rest of the conference.
00:36:49 [W] Hello.
00:36:56 [W] Thanks a bunch everyone for the comments.
00:37:00 [W] I just like to let you know that I will not be able to answer all the questions.
00:37:02 [W] So please join us on Slack.
00:37:04 [W] The channel is to - Cube Khan - app Dev and I'm gonna get to the answers there that I won't have the time to get to a year.
00:37:15 [W] So let me get to some of these.
00:37:17 [W] Someone said call session.
00:37:20 [W] Thank you.
00:37:22 [W] Someone said.
00:37:25 [W] So yes, I did mention Stearns.
00:37:38 [W] So if you're not using something like tilt and you want to keep track of all logs for yourself, you can just make every app that you have outputs to standard out and then you can use turn to check out them and I use certain for years until
00:37:46 [W] Um, and then you can use turn to check out them and I use certain for years until I started using tote which kind of does the same thing depending on how much filtering you want to do is turn this thing still doesn't but generally to does the job for me
00:37:55 [W] Still doesn't but generally to does the job for me.
00:37:56 [W] Someone asked 9 mystery asked could you explain what tilt is so there's this category of tools and we have tilts. We have Garden we have scaffold. We have draft telepresence.
00:38:10 [W] Maybe not really but it's kind of a kind of around there and what these tools do is they watch your source code for changes whenever you change your source code that tool is going to perform a set of tasks. And usually that set of tasks is build another image.
00:38:22 [W] Push the image to the registry update your cluster.
00:38:25 [W] So as a developer.
00:38:27 [W] Sorry, my camera just died a little bit.
00:38:37 [W] So as a developer, all you have to do is write your code save your file wait a couple seconds and your changes are live on your cluster.
00:38:49 [W] So that's what this category of tool is. I work for tilt I'd love for you to use tote. But if you want to use one of the other tools that those can help you as well Tama, but Sarah said great subject and details.
00:38:56 [W] Thank you.
00:38:57 [W] Thanks for watching. Hey karate.
00:39:00 [W] Ask do you know any pros and cons for running your changes within the cluster versus using something like telepresence two routes traffic from the cluster to a locally running instance of the software.
00:39:12 [W] Yeah.
00:39:12 [W] That's a great question.
00:39:25 [W] That's what this category of tool is.
00:39:26 [W] I work for tilt I'd love for you to use tote. But if you want to use one of the other tools that can those can help you as well Tama, but Sarah said great subject and details.
00:39:27 [W] Thank you.
00:39:27 [W] Thanks for watching.
00:39:27 [W] Hey co-wrote a ask.
00:39:28 [W] Do you know any pros and cons for running your changes within the cluster versus using something like telepresence to Route traffic from the cluster to a locally running instance of the software.
00:39:28 [W] Yeah.
00:39:28 [W] That's a great question.
00:39:29 [W] So if you use telepresence, you can basically fiddle with the wiring.
00:39:31 [W] So you run and I put locally but all the network interactions happen as if the app were inside your cluster.
00:39:32 [W] That is great.
00:39:33 [W] For example, if you if you're doing debugging a lot with like a debugger like GDB and you don't want to use tools for remote debugging that's going to be simpler with telepresence.
00:39:42 [W] There are issues because sometimes you're running
00:39:43 [W] Things and they're going to run differently in Docker or they're going to run differently locally or they're going to run differently inside your cluster or you actually need to be inside the cluster.
00:39:58 [W] It's kind of complicated to go into detail. But sometimes there are many differences that in some specific cases.
00:40:04 [W] They are different.
00:40:11 [W] So I prefer to always run it inside the cluster because at the end of the day it's going to run inside the cluster anyway, but the thing is if you're doing
00:40:13 [W] A lot of debugging you're going to have to put to use a tool like squash if you want to look into squash.
00:40:19 [W] You think it's squash that's solo dot IO and it's a tool that basically allows you to just connect a debugger that you're running on.
00:40:30 [W] I don't know your local ID or just running locally and it just connects straight into an app that's running inside the container.
00:40:37 [W] that's a cool way to do remote debugging and the really cool thing about squash is you can connect the two a services at the same time and go line by line as they
00:40:45 [W] Talk to each other and that is really cool.
00:40:51 [W] You can't do that with telepresence though, because telepresence only allows you to plug into one service at once.
00:40:52 [W] Can't do that with telepresence though, because telepresence only allows you to plug into one service at once.
00:40:56 [W] What's everyone is saying here Rich Comer said best topic? You've come so far fantastic.
00:41:01 [W] Thank you. If Alex hot like that is saying go and use Quark has instead of java.
00:41:13 [W] you have amazing life updates and remote debugging hot deployment possibilities. Yeah.
00:41:15 [W] I answered a question some time ago about Java about yes. There is some way to help you load a bit of java code. I didn't remember the
00:41:23 [W] But there are specifics of Alex got this for us.
00:41:28 [W] So a quark is the name of the thing and the name does ring a bell.
00:41:31 [W] So maybe that's the one I heard of before so that is great.
00:41:34 [W] Billy Shamrock, it's asking how would separate that namespaces work if I have to developers working on two different services and they need their services to communicate with each other.
00:41:50 [W] So you would have a stable version of every service running on like a staging namespace and then every developer has their own namespace and they are using a new version of the service. They're working on in the net
00:42:01 [W] Ace but the service says that they are talking to points to the staging namespace. So it's not like you're in progress service is talking to your friends and progress service. Basically, you're in progress service talks to the stable
00:42:16 [W] Staging and your friends and progress service talks to the stable version of the services running on staging that was complicated.
00:42:28 [W] I hope it made sense. Like the English part was a bit hazy.
00:42:31 [W] I think we are practically out of time.
00:42:38 [W] So let's continue the discussion on slack chimey mansouri said the perfect talk so simple organized and clear.
00:42:42 [W] Thank you. All right, so I think I'm gonna have the
00:42:47 [W] The webcast engineering here tell me to turn this off and then we can all move to slack.
