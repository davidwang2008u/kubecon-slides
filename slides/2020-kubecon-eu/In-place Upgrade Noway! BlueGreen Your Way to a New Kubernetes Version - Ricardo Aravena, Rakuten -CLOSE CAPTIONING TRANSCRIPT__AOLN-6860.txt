In-place Upgrade Noway! Blue/Green Your Way to a New Kubernetes Version: AOLN-6860 - events@cncf.io - Wednesday, August 19, 2020 11:36 AM - 1143 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:03:36 [W] Thank you for attending this session.
00:03:39 [W] I'm very excited to be here at Cube con Cloud native con virtually.
00:03:45 [W] And today I'm going to tell you about a different approach to upgrade your kubernative clusters.
00:03:53 [W] Maybe it's different.
00:03:54 [W] Maybe it's new a blue and green approach as opposed to having an In-Place upgrade.
00:04:01 [W] So I'm going to start with a couple of questions. How many of you have had to upgrade a kubernative cluster and the last few years I would imagine quite a few people in the audience.
00:04:17 [W] So what that is is a very popular tool and project it's being used in a lot of different organizations.
00:04:26 [W] probably run into this problem more than once.
00:04:31 [W] Another question is how many of you have had to do these upgrades and have had no issues at all.
00:04:42 [W] I would imagine not that many people.
00:04:46 [W] Kubenetes is a distributed system and has a little bit of a lot of different components.
00:04:53 [W] So it's a complicated system.
00:04:59 [W] So this is what the talk is about.
00:05:00 [W] Work at Rocket tan and I'm a necessary manager there and we run kubernative clusters in several environments.
00:05:15 [W] I'm also co-chair for the cncf Sigrid time and I've been a Kata containers contributor for the last couple of years.
00:05:25 [W] Some of what we'll be talking about today.
00:05:31 [W] Includes the kubernative components for belief briefly talk about the control plane and the data plane.
00:05:40 [W] Then we'll talk about some of these upgrade problems.
00:05:44 [W] Then some solutions to these subgrade problems together with some tools. Then what it might look like in production having all these tools together with the solutions.
00:05:56 [W] What it may look like in terms of the tools.
00:06:00 [W] and approaches
00:06:02 [W] in the future as far as these upgrades are concerned and finally, I'll provide some takeaways.
00:06:11 [W] So the kubernative control plane?
00:06:15 [W] So typically you have either a three main node setup or a five main node setup.
00:06:25 [W] I change the terminology here from Maine from Master domain.
00:06:27 [W] So in every main node, you have all these different components.
00:06:33 [W] You have the API server.
00:06:34 [W] controller manager
00:06:38 [W] so several different components
00:06:40 [W] now when you have a kubernative version, let's say you have 117 all of these components typically have that same version API servers 117 schedule schedulers 117 and so forth.
00:06:59 [W] So that's the recommended way of running kubernative.
00:07:03 [W] It doesn't mean everybody does it that way but that's what you typically have.
00:07:06 [W] Similarly, the data plane also has its components with its own unique versions. So
00:07:18 [W] The data plane consists of your kubernative nodes and each node.
00:07:25 [W] You have your Kube lad you have your Kube proxy you may have other components like you contain a runtime or some other specific things.
00:07:32 [W] And if you have a version there kubernative version 117 that would be also the version of the cube late and you could proxy so you have this matching versions.
00:07:45 [W] So that's the control plane in the data plans for kubernative.
00:07:49 [W] So what are some of the upgrade problems that you can run into?
00:07:55 [W] For you kubernative clusters.
00:07:59 [W] So this is a tweet from last year from Stefan.
00:08:04 [W] I upgraded you came from 113 or to 113.
00:08:11 [W] And he had a co-writing 1.0 and then went over to 1.1.
00:08:17 [W] As soon as it did that components started crashing.
00:08:22 [W] some of the TLs handshake started to timeout
00:08:26 [W] So these are the type of things that you may run into and then he have to start the things in a special order to make it work.
00:08:36 [W] So the problems are
00:08:42 [W] Related to several things you have different kubernative API versions.
00:08:49 [W] The change between different major kubernative versions. So you have the alpha and you have beta in a finally once they release or a resource is promoted becomes stable.
00:09:05 [W] So goes from b 1 beta 1 to be 1 for example
00:09:06 [W] then the cycle goes like this you have an API Group goes from d 1 Alpha 1 and then it keeps upgrading until d 1 Alpha 2 and alpha n and then when the community decides that it's
00:09:25 [W] You know like then it gets promoted to Beta And that becomes beta 1 until beta n and finally when the community decides that it's stable.
00:09:36 [W] It decides to promote it to V1 and then the cycle continues.
00:09:39 [W] For v2. So we to Alpha 1 and B 2 Beta and so forth.
00:09:44 [W] So another problem here describing the release notes for kubernative 1:17.
00:09:52 [W] So you have the are back the 1 Alpha 1 and b 1 beta 1 are deprecated and they will be completely removed and 120.
00:10:07 [W] So in favor of D1, so that means if you have a pi definitions.
00:10:13 [W] resources
00:10:15 [W] Our back Resources with the 1 beta 1 of b 1 Alpha 1 when you upgrade your cluster, some of these resources may not work.
00:10:27 [W] maybe some of your pots may not work.
00:10:27 [W] Some of your users might not be able to login.
00:10:30 [W] So another problem described here.
00:10:33 [W] It's kubernative plugins in this case AWS CBS.
00:10:38 [W] It says that it will be completely removing 121 in favor of CSI containers to reach interface.
00:10:49 [W] When you upgrade your cluster, some of these resources may not work. Maybe some of your pots might not work.
00:10:56 [W] Some of your users may not be able to login.
00:10:56 [W] So another problem described here.
00:10:56 [W] It's kubernative plugins in this case AWS CBS.
00:10:57 [W] It says that it will be completely removing 121 in favor of CSI container storage interface.
00:10:57 [W] So if you have that plug-in with AWS EDS, and maybe you have some volumes like EBS volumes running the in your communities clusters you upgrade to 121.
00:11:03 [W] You will have unpredictable results.
00:11:06 [W] things are not necessarily going to work.
00:11:07 [W] So this is the are back example.
00:11:12 [W] So if you have 117 and let's say you go to 120 when b 1 beta 1 is removed.
00:11:20 [W] So you forget to update that definition to restart your cluster may be users not able to list parts or see the padlocks.
00:11:31 [W] So basically your cluster is not happy some things will crash.
00:11:40 [W] So ideally you want to do this ahead of time right? So you want to
00:11:46 [W] Change the definition.
00:11:49 [W] From B beta beta 1 to be 1 so by the time you do that upgrade.
00:11:56 [W] Everything is great nice and happy you are able to log into your clusters Etc.
00:12:05 [W] So kubernative has several components and each one of these components have several versions just like I described before
00:12:16 [W] So you have maybe kubernative Capi 117 and it also supports certain versions cues.
00:12:23 [W] And team will be able to connect to 117.
00:12:32 [W] We know problems or the way it's supported.
00:12:36 [W] But if you have something like a cube let 114 115 you also have these problems.
00:12:40 [W] So you make more on unpredictability.
00:12:54 [W] So that's why it's recommended to have this versions all together, but some people decide not to do it. But if you do you have to be careful of watching for these versions.
00:12:57 [W] Q's similarly. We keep CTL if you have an older version say you're running to relate its 117. But your Kube CTL is 115 and maybe you're using Cube CTL and your ci/cd system to do tasks to do
00:13:10 [W] And then maybe things will not work because there's it's not compatible right? So there may be some issues there.
00:13:19 [W] Same with the other kubernative components like the controller manager the scheduler Etc.
00:13:26 [W] So what are some of the solutions for these kubernative clusters upgrades?
00:13:33 [W] So first you have that in place upgrade. So this is a control plane and then you have that 117 version like it was described at the beginning.
00:13:47 [W] You have all the components with 117.
00:13:48 [W] So typically you want to do their upgrade gradually, right? So
00:13:55 [W] initially you start with your notes or your map your main notes that are not the leaders.
00:14:04 [W] And so you start with the notes on the left and the right here.
00:14:07 [W] So the leader is still there. So potentially you can still make decisions. If you have a four or five node kubernative control plane. Then you start with the notes that are not the leader you identify which one the leader is.
00:14:23 [W] and then
00:14:25 [W] You have green that leader, but when you upgrade that leader, these components have to be restarted.
00:14:33 [W] So typically you want to do the upgrade gradually, right? So
00:14:41 [W] initially you start with your notes or your map your main notes that are not the leaders.
00:14:42 [W] And so you start with the notes on the left on the right here.
00:14:42 [W] So the leader is still there. So potentially you can still make decisions. If you have a four or five node kubernative control plane. Then you start with the notes that are not the leader you identify which one the leader is.
00:14:45 [W] and then
00:14:47 [W] You have great that leader but when you upgrade that leader, these components have to be restarted.
00:14:48 [W] I'm also not showing at CD here, but also a lot of people run at CD in their control plane. So that component is also restarted.
00:14:50 [W] And when that happens, that's not the leader anymore.
00:14:50 [W] So a new typically a new leader gets elected.
00:14:50 [W] I think so.
00:14:51 [W] Maybe the one on the right becomes a new leader.
00:15:01 [W] So when this happens and you're doing the upgrade you have workloads running and maybe things being scheduled.
00:15:06 [W] So you might run into something like this.
00:15:11 [W] So you have crash look back off and some parts.
00:15:17 [W] you have some containers or pots running it in pending State some of them running with no problems with then.
00:15:22 [W] Some things are not going to work the way you want to.
00:15:25 [W] So another solution having blue and green clusters.
00:15:30 [W] So in this reply Kelsey Hightower last year said for this type of about issues when you upgrade it's better to have more than just one production cluster.
00:15:44 [W] Then your actual only cluster.
00:15:48 [W] So solution is to have a blue and green cluster that ability to switch between different clusters, but you can also do use that for communities upgrades.
00:16:01 [W] Maybe the one on the right becomes a new leader.
00:16:11 [W] And so when this happens and you're doing the upgrade you have workloads running and maybe things being scheduled.
00:16:12 [W] So you might run into something like this.
00:16:12 [W] So you have crash look back off and some parts.
00:16:13 [W] you have some containers or pots running it in pending State some of them run in we know problems with then.
00:16:14 [W] Some things I'm not going to work the way you want to.
00:16:15 [W] So another solution having blue and green clusters.
00:16:15 [W] So in this reply Kelsey Hightower last year said for this type of about issues when you upgrade it's better to have more than just one production cluster.
00:16:17 [W] Then your actual only cluster.
00:16:17 [W] So solution is to have a blue and green cluster that ability to switch between different clusters, but you can also do use that fork with any sub grades.
00:16:19 [W] So the blue and green cluster approach you have your main notes here and the running 117 also with the same components running 17 117 API server and controller manager the scheduler.
00:16:23 [W] And then you have a completely different cluster with all these components again with 118 API servers 118 here.
00:16:30 [W] So a completely separate environment.
00:16:31 [W] So this is your control playing and then you have the two different control planes separately.
00:16:39 [W] and side by side
00:16:43 [W] and you can gradually, you know, if you haven't side-by-side start copying some of the workloads say from 117 to 118.
00:16:55 [W] So you have your deployments your stateful sets the parts your secret whatever you need to run your workloads and then you copy them over to the new cluster.
00:17:08 [W] And then once you're done copying over all these workloads, you can just get rid of the old cluster.
00:17:17 [W] So get rid of your blue cluster and this can happen interchangeably. So now 118 becomes your green and then in the next kubernative release release you you could have a blue cluster. That is 119.
00:17:31 [W] Get rid of your blue cluster and this can happen in a change of ways now 118 becomes your green and then in the next kubernative release release you you could have a blue cluster. That is 119.
00:17:43 [W] You move your workloads from the ones running 2017 or you copy them over to notes running 118.
00:17:50 [W] And then when you're done, you also get rid of the 117 notes and you're done and maybe you can start up a new kubernative cluster if 119. It's out there.
00:18:06 [W] can start a new one to be ready and to for the next upgrade. Of course, you need to keep up to date with the different patches of that 119 version if you want to keep that cluster running for some time.
00:18:14 [W] So other blue and green approaches or tools that you can use for doing green cluster updates, you can use Federation me too right now.
00:18:23 [W] It's in Alpha.
00:18:25 [W] So it allows you to have kubernative clusters in different regions. So you can have a kubernative cluster in California and then kubernative cluster in Oregon and then do that switch over that way.
00:18:39 [W] So you have Federation and then using these tools to help you out migrate some of the workloads.
00:18:44 [W] workloads and do the switch over
00:18:46 [W] Also linkerd e has crossed from mirroring that allows you to have a kubernative cluster service on one region and then make it think that it that Services local when it actually is
00:19:01 [W] Using these tools to help you out migrate some of the workloads and do the switch over.
00:19:02 [W] Also linkerd e has cross term mirroring that allows you to have a kubernative cluster service on one region and they make it think that that Services local when it actually is in
00:19:04 [W] Place so you have Koster in New York and has a service there, but the service actually maybe lives in a cluster in Chicago and obviously tells for API.
00:19:18 [W] Wiley use project from the kubernative community that allows you to manage kubernative clusters using a kubernative cluster so you can manage your whole Fleet using kubernative itself.
00:19:33 [W] So let's talk about some tools that you can use for these upgrades.
00:19:40 [W] So when it comes to upgraded the communities components they add ons.
00:19:47 [W] Use several several of them in your cluster.
00:19:52 [W] You have a customer autoscaler.
00:19:57 [W] You have your monitoring.
00:20:01 [W] You have your log aggregator all these different components.
00:20:03 [W] You can use any language that you like.
00:20:08 [W] I mean you can use bash python go or rust, whatever language sort of your choice.
00:20:19 [W] So you need to find a way to manage this components and in an automated way.
00:20:21 [W] There are other tools for example to provision your clusters.
00:20:26 [W] Or you can use something like you care CTL from weaveworks and you can Define the kubernative cluster in a mo format.
00:20:45 [W] Flux is another tool that allows you to have this kind of gitops approach for applications. But you can also use it for kubernative components once you can use it for your customer autoscaler record DNS.
00:21:02 [W] Your network overlay if you want to keep up to date and maybe there's a feature or maybe you're watching container registry and then you want this to get updated automatically. You can use something like flux.
00:21:19 [W] So in this example, you have a gitops approach we flux.
00:21:26 [W] You don't necessarily have to push a commit or maybe not necessarily push a container image you may choose to do so, but but you could also have a look at containerd repository a global Repository
00:21:42 [W] Have a gitops approach we flux.
00:21:43 [W] You don't necessarily have to push a commit or maybe not necessarily push a container image you may choose to do so, but but you could also have a look at containerd repository a global Repository
00:21:44 [W] Images from there.
00:21:45 [W] I'll make a change based on that.
00:21:47 [W] So you're always up to date but you have to be careful which components you want to upgrade and maintain with the lady latest version.
00:21:54 [W] Another tool from weaveworks is wks CTL and it's basically gitops definitions for kubenetes clusters.
00:22:04 [W] Still a project in the works so you can do your state and kubernative cluster state in a llamo file.
00:22:15 [W] And it supports multiple communities versions or custom versions.
00:22:27 [W] For example support Spire Cube, which is running kubernative Xin firecracker vm's vagrant running kubernative locally Footloose allowing allowing you to run communities in containers.
00:22:37 [W] There's no Adobe Air Support yet, but you know, they might happen in the future.
00:22:39 [W] another tools Keiko
00:22:44 [W] This is from the open source team at into it and it allows you to manage your worker nodes and communities, but the only catcher here is that it supports AWS.
00:23:00 [W] So it has some really nice components to help you out.
00:23:08 [W] And Tool not necessarily like your cloud provider like he KS or uke, this is a great tool say for AWS.
00:23:26 [W] You can also optimize the cost of your cluster. You can do security with forensic thumbs.
00:23:30 [W] So these are the components for Caicos.
00:23:34 [W] So you have your monitoring cost Effectiveness on with your minion manager.
00:23:43 [W] You can manage for liability where your governor.
00:23:44 [W] You can do that orchestration of upgrades using the add-on manager upgrade manager and instance manager. So all these different components to help you out.
00:23:55 [W] Other tools that are really popular to manage kubernative clusters or cops written in golang has been around for a while has a very large community supports multiple clouds.
00:24:10 [W] Cube sprays another tool is basically deploying kubernative clusters using ansible so you can use it to deploy blue and green clusters the same way. We cops linkerd e
00:24:24 [W] has this feature that I mentioned before traffic mirroring and allows you to have Services across different regions.
00:24:36 [W] So you make that switch over.
00:24:38 [W] Easier and rum, you know in a more effective way.
00:24:44 [W] Pluto is another nice tool that allows you to see the different kubernative versions that are getting deprecated for the different resources.
00:25:00 [W] So in this example, you see the ployment at the top you have the 1 beta 1 and b 1 beta 2 and then b 1 beta 1
00:25:06 [W] says that they were deprecated in 190, but they were still available up until 1:15.
00:25:13 [W] So 116 they're completely removed.
00:25:23 [W] So you can tell when you want to change your resources or how how far I had you want to change your resources prevents you from saying like you moving from 115 to 116 say if you have an API definition for deployment,
00:25:31 [W] to 1 and then you upgrade then that resource may not work because the replacement is absolutely one so
00:25:43 [W] So the Departments may not work.
00:25:48 [W] So what does it look like in production?
00:25:50 [W] Running all this automation Tools in say production environments. Ideally you want to have automation everywhere.
00:26:02 [W] I know most people don't have this.
00:26:06 [W] This is where you want to get to and when what you want to strive for?
00:26:07 [W] So you want to have that full automation of your control plane provisional you notes all your main notes with all the different components your data plane. You you worker groups ahead of time fully automated verifying them
00:26:23 [W] Also your add-ons your cluster autoscaler your networking add-ons all those different things.
00:26:33 [W] We want to have them fully automated maybe have the blue and green switch over if you have stateless applications do happen automatically use say you are running an external
00:26:46 [W] Asian a website and it's serving millions of users then you can have a tool that may be switches over that DNS automatically and does the verification.
00:27:00 [W] Okay, you're getting all the right request, right? So in it allows you to roll back if something goes wrong.
00:27:05 [W] So what about stateful applications?
00:27:13 [W] So yeah, maybe you want to use a maintenance window.
00:27:15 [W] These are very tricky applications because you they have your data. So you want to make sure that your data is not corrupted when you do this these switchovers so create a lot of replicas
00:27:27 [W] Your data so you want to make sure that your data is not corrupted when you do this.
00:27:28 [W] These switchovers so create a lot of replicas. If you can dependent on the state full application you're using that you're using something like a my SQL you can create another set of slaves and eventually when you move to
00:27:39 [W] In say you're using something like a my SQL you can create another set of slaves and eventually when you move to that new cluster, you could have that slave and promote it to a Master.
00:27:43 [W] And then move the other slaves later on make sure you back up all your data.
00:27:51 [W] So in case your data gets corrupted, so this is a very critical use tools like snapshots in Cloud providers or if you have storage systems.
00:27:58 [W] Take some snapshots back up your data.
00:28:02 [W] So what does it look like in terms of the future of what you'll you'll see with these tools and and kubenetes cluster upgrade approaches.
00:28:16 [W] So we'll see some tools maybe to fill in the gaps.
00:28:27 [W] So we talked about automatic automatically switching over your DNS provider when you're running a website type of application or web services.
00:28:33 [W] So tools that allow you to talk to these DNS providers, maybe talk to the load balancers and
00:28:34 [W] Do the switch order?
00:28:36 [W] Tools that help you do stay for application switch over we talked about the data, you know, maybe tools that will back up your data automatically make sure that data is correct.
00:28:51 [W] Keep in mind that there's a lot of operators for staefel applications nowadays, but most of these operators are limited to just a single cluster.
00:29:00 [W] So maybe we'll see some of these operators extend some of the functionality for multiple clusters and being able
00:29:08 [W] Approaches so we'll see some tools maybe to fill in the gaps.
00:29:12 [W] So we talked about automatic automatically switching over your DNS provider when you're running a website type of application or web services.
00:29:13 [W] So tools that allow you to talk to these DNS providers, maybe talk to the load balancers and then do that switch over.
00:29:15 [W] Tools that help you do stay for application switch over we talked about the data, you know, maybe tools that will back up your data automatically make sure that data is correct.
00:29:18 [W] Keep in mind that there's a lot of operators for staefel applications nowadays, but most of these operators are limited to just a single cluster.
00:29:21 [W] So maybe we'll see some of these operators extend some of the functionality for multiple clusters and being able to
00:29:25 [W] Migrate from one to the other also maybe tools that fill in monitoring for these upgrades, you know, making sure you hit in your 200 status codes on your HTTP services.
00:29:35 [W] Also making sure that your security policies are correct.
00:29:36 [W] never policies are not allowing certain IP addresses or certain part can talk to each other and some of them cannot so all those type of things so filling those gaps,
00:29:39 [W] So from the cloud providers will also see baby more Tools in this example.
00:29:40 [W] We see eks on the road map. You see one click for cluster upgrade maybe allowing users using eks to just do a click and automatically test everything that is in cluster and seamlessly
00:29:54 [W] Maybe tools that fill in monitoring for these upgrades, you know, making sure you hit in your 200 status codes on your HTTP Services.
00:29:55 [W] Also making sure that your security policies are correct.
00:29:55 [W] never policies are not allowing certain IP addresses or certain parts can talk to each other and some of them cannot so all those type of things so filling those gaps.
00:29:57 [W] So from the cloud providers will also see baby more Tools in this example.
00:29:58 [W] We see eks on the road map. You see one click for cluster upgrade maybe allowing users using eks to just do a click and automatically test everything that instrument cluster and seamlessly
00:30:01 [W] No downtime.
00:30:02 [W] Of course, you still want to test it in when I make sure that everything is okay, but then that's where the direction it's going with some of these Cloud providers.
00:30:04 [W] So more ways to manage her nose to like if you want to, you know upgrade a patch on your note that type of thing.
00:30:15 [W] Some of the tools will make it easier.
00:30:16 [W] So what can you get out of all of this?
00:30:21 [W] What can you take home?
00:30:25 [W] So when you want to do the communities cluster upgrades you always want to start with a small cluster.
00:30:34 [W] Don't Go full blong blown on a large cluster in try to upgrade that so make sure you test
00:30:43 [W] in a constrained environment
00:30:47 [W] In use a QA environment for example never in production leverage some of the existing Tools in open source terraform flux Keiko.
00:30:59 [W] When you create this new clusters, make sure that the version is always the same across the board.
00:31:08 [W] Uq bled yaqoob proxy.
00:31:12 [W] You're a pi server. You controller manager your API scheduler your Cloud controller manager.
00:31:22 [W] all the different components in kubernative.
00:31:22 [W] You have to sit here.
00:31:30 [W] I'll convert that allows you to convert your API or manifest files ahead of time.
00:31:30 [W] And then you something like Pluto to identify whether you you need to do those changes.
00:31:38 [W] You want to make sure that you when you created your green cluster or your brand new cluster and you copy the workloads you want to test that the API endpoints API endpoints or whatever workloads you're running there.
00:31:54 [W] It's not crashing.
00:31:57 [W] It's returning. Okay request all those different things.
00:32:01 [W] So tests across the board depending on your application and make sure to backup your data everywhere back up everything especially if you're running stay phone applications.
00:32:10 [W] So with that here are some resources for some of the tools that I talked about.
00:32:20 [W] And yeah in that said thank you very much for your time. I'd be happy to chat more about this topic.
00:32:31 [W] This is very interesting to me.
00:32:32 [W] We use this on a daily basis basis.
00:32:46 [W] So if you have any problems and if you wanna you know discuss and I love to, you know, see what problems you have and what Solutions you're thinking of and and how you
00:32:49 [W] Yeah in that said thank you very much for your time.
00:32:49 [W] I'd be happy to chat more about this topic.
00:32:49 [W] This is very interesting to me.
00:32:50 [W] We use this on a daily basis basis.
00:32:51 [W] So if you have any problems and if you wanna you know discuss and I love to you know, see what problems you have and what Solutions you thinking of and and how you
00:32:51 [W] You know make these things better. So thank you. And with that I'll leave it open for some questions.
00:32:56 [W] Hi, so I'm gonna go and check for any questions online.
00:33:12 [W] Just give me a second.
00:33:13 [W] Okay, so I see questions here.
00:33:17 [W] Okay.
00:33:25 [W] Okay, so I'm going to sort the questions here.
00:33:25 [W] So I'm going to start.
00:33:27 [W] I think it's just a common here had to grade the last week.
00:33:34 [W] So yeah, so that's a very common problem.
00:33:36 [W] So that happens all the time.
00:33:38 [W] So I have a question here from Bridger and says suppose we can't get rid of our notes.
00:33:44 [W] They are pets.
00:33:47 [W] Can RK help me with In-Place upgrade by virtue of being hyper Cube containerd base.
00:33:56 [W] I'm not really sure what our k3s a Rancher kubernative engine.
00:34:03 [W] I think you're talking about.
00:34:05 [W] Hypercube container based I'm not really sure of that.
00:34:14 [W] I might be able to help you out.
00:34:20 [W] For Kube containerd base.
00:34:22 [W] I'm not really sure what I ke is a Rancher kubernative engine.
00:34:23 [W] I think you're talking about.
00:34:23 [W] Hypercube container based I'm not really sure if that I might be able to help you out.
00:34:24 [W] So I think it's more about like finding out the different versions and if there's a database with all the different versions that are supported on all the different kubernative versions than you can
00:34:29 [W] If there's a database with all the different versions that are supported on all the different kubernative versions than you can use a tool like this.
00:34:35 [W] I mean that I don't know the details of how that works intrinsically.
00:34:39 [W] So yeah, I might be able to help you with that yet.
00:34:44 [W] I don't the ideally you want to have something that maybe allows you allows you to move one set of workloads from one class to the other but I don't think archaea might be here.
00:34:52 [W] Able to help you with that, but feel free to chat with me afterwards. And if you want to you know, discuss more thing me I'll be available on Slack.
00:35:02 [W] So I have another question from Florian and says how would you my great staple applications from the blue to the green cluster?
00:35:16 [W] Yeah. So this is one of the biggest challenges.
00:35:21 [W] So when you want to you have you have stateful applications?
00:35:23 [W] So there's a lot of data there and you don't you don't want that data to get corrupted and one of the things we kubernative is that it starts stops. It does that up those
00:35:33 [W] Very often with pots. So you want to make sure that you schedule maybe like a downtime and allowing allowing you to kind of just start the workloads
00:35:48 [W] On the other cluster and would doing that downtime and may be reusing some of that storage if you have snapshots for example, or if you're using something like Seth like a distributed file system, you
00:36:04 [W] Shots for example or the using something like Seth like a distributed file system.
00:36:09 [W] You can take snapshots or you can connect to the same volume on the new cluster and that allows you to just bring up your new state full application and hopefully your data is not corrupted. But obviously you want to test this you
00:36:19 [W] Starting QA you want to will make sure your data is not corrupted because if if you're running production applications, you probably have a lot of data you in and that's critical for your customers if you're Servicing
00:36:33 [W] That's very very critical.
00:36:37 [W] So be careful with that.
00:36:40 [W] So, yeah, so feel free to ping.
00:36:40 [W] me to be happy to answer more dad.
00:36:46 [W] So I have a question from Rachel it says how do you manage handing over DNS records to point to the new cluster?
00:36:59 [W] So this is more about making use of API services from your DNS providers. So AWS has
00:37:04 [W] Route 53, for example, or if you're using another provider like GoDaddy, so they have a pi services.
00:37:19 [W] So ideally you want to have a set of scripts that talk to those apis and allow you to just switch over to add different load balancer or so. I'm talking about
00:37:28 [W] Go Daddy, so they have a pi services.
00:37:29 [W] So ideally you want to have a set of scripts that talk to those apis and allow you to just switch over to add different load balancer or so. I'm talking about
00:37:30 [W] applications where you may have a little bouncer in front of your pots and then in front of your load balancers that DNS record that exposes your endpoint, so then you have an API that maybe switches
00:37:44 [W] Mm point or that record that points from that low balancer on the old cluster to the load balancer on the new cluster and that's for states to stay full stateless applications for staefel applications than
00:38:00 [W] Probably want to keep those low internally the DNS records internally, but it really depends on what you're writing.
00:38:09 [W] That's just a full application.
00:38:10 [W] It could be a Cassandra or it could be something like a MySQL.
00:38:15 [W] So those those will vary depending on the type of stateful application. You're running happy to chat more to and now I have another question.
00:38:24 [W] I have I don't know. I think you have one more minute. So I have a question from Max and it says how do you copy?
00:38:33 [W] Workloads automatically and what about costs of yeah, this is this will be my last question.
00:38:40 [W] So how do you copy workloads automatically and what about cost of dual environments?
00:38:49 [W] Yeah, so that's where you want to have that built in automation.
00:38:51 [W] So maybe like a ci/cd system that has all of your applications and you have appointed to the new cluster so you can have a Jenkins to Spinnaker or want some of this.
00:39:01 [W] Ci/cd swear you change make that definition and hopefully under source code control like something like get in and then you change that and automatically changes your job to deploy the jobs to the
00:39:16 [W] And all environments it's cause a problem and that's why you want to take advantage of some elastic services from like some of the public Cloud providers that allow you to just shut down the instances when you don't need it need them so
00:39:31 [W] You go type a model, of course that doesn't apply to your own data center, but that's a totally different topic and for cost optimization.
00:39:43 [W] Yeah, so that's that.
00:39:45 [W] Those are all the questions.
00:39:49 [W] I'll be available in slack if you have any more questions, so thank you very much.
