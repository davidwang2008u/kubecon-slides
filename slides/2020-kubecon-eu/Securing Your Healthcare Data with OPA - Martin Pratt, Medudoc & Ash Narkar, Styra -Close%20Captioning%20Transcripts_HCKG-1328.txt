Securing Your Healthcare Data with OPA: HCKG-1328 - events@cncf.io - Wednesday, August 19, 2020 8:22 AM - 117 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:01:35 [W] Hi, my name is Martin.
00:01:42 [W] Hi, my name is Martin Pratt.
00:07:09 [W] And I'm here today with Ash Narco and we're here to talk to you about securing your Healthcare data with opa.
00:07:16 [W] so I'll start by giving a brief introduction to ourselves talk a little bit about health care and data and then around policy process and practice how they differ and why that's important then the little bit around open policy agent
00:07:31 [W] We'll give you a little bit of an intro to that and then we'll talk about some real world use cases of how you can apply this to secure your Healthcare data, and then we'll have some time for questions.
00:07:42 [W] So to introduce ourselves, hi, I'm Martin.
00:07:50 [W] I'm currently the CTO at Mid to talk.
00:07:56 [W] And before this I was the director of platform at a to health where I dealt with software development lifecycle processes regulatory issues infrastructure and security.
00:08:05 [W] really care about designing socio-technical systems, which help improve health care and help people in general and empowerus.
00:08:13 [W] Suddenly I have believed in doing this in a way that protects people's data and privacy.
00:08:20 [W] Hi my name is Ashe knocker. I am a software engineer at styra and I'm one of the maintainers of the open policy agent project.
00:08:30 [W] I care about developing secure systems.
00:08:32 [W] that users can easily deploy and manage like this now, we want to talk a little bit about Healthcare and data and first to start off with
00:08:42 [W] Really talking about what is personal health information and how does this really difficult personal health information as defined by GD p i is personal data related to the physical mental health of a natural person including the provision of healthcare services.
00:08:57 [W] care about developing secure systems that users can easily deploy and manage like this now we want to talk a little bit about health care and data and first to start off with really
00:08:59 [W] feel information about his or her health status now, that's very legalese, but it's really important because gdpr is standard which all of us are I'm sure a very well aware of and it's something that will definitely impact you if you work in health care now,
00:09:13 [W] Try data has to follow higher standards than personally identifiable information or regular personal data, and this is defined in GDP are but also in the u.s. Under HIPAA as well.
00:09:28 [W] So there's many regulations that you you will have to consider when dealing with personal health information just to give a little bit inside to some things that differentiates Phi from Pai first people must give
00:09:40 [W] The use of any Phi Theta which differs from PI where you can have much more General concern and this means how it's used exactly specifically what it is.
00:09:56 [W] And also it must only be for the purpose of providing Healthcare or from adverse of National Health.
00:09:59 [W] You cannot use it for other purposes such as monetization.
00:10:07 [W] You can only use it for the specific use case that you've highlighted and thats related to health care or natural health.
00:10:13 [W] Now, why does this matter?
00:10:20 [W] Well, there's a few things here that come into it first and foremost. Obviously, we morally caring about People's Health by protecting against fraud abuse and discrimination.
00:10:29 [W] These have impacts on Mental Health, but also just on General Health Care, we need to really if we're looking after people we have to put this people first and foremost like it's really important second if you have any issues with data
00:10:38 [W] We'll probably be concerned about it and you could lose many partners overnight.
00:10:49 [W] So it's critical that you take this very seriously and really build it into the core of your business.
00:10:55 [W] And really the cherry on top is you want to avoid enforcement from GDP are other regulatory standards because they will come down on you and there's been lots of cases recently the other talk a little bit about policy and process and practice
00:11:04 [W] And why that matters to us so the key here is around policy and versus practice really policy and processes are meaningless unless they're actually applied and work effectively in practice.
00:11:20 [W] Otherwise, you have things that get around them people will ignore them.
00:11:22 [W] They won't know they exist and then you have issues that could arise from that and it's then this is often the cases. It's often that the policies and processes aren't working as effectively and in practice as they could.
00:11:37 [W] and this is because sometimes suck really starting with if they often stuff with infosec who isn't necessarily talking with Engineers some places they do but I've seen it a lot where it's not and they want sometimes talk to
00:11:50 [W] Mlops developer operations or technical operations groups or sometimes just general Ops groups such as HR and these teams will transfer this information between each other but some information gets lost in the
00:12:06 [W] And really the practice that's coming from Engineers isn't being incorporated into how the policy and how the processes are created and that can sometimes mean that they're not as effective as they could be.
00:12:23 [W] So yeah, you sometimes get these gaps and knowledge between these two groups because these groups aren't necessarily communicating in the same language or really talking in the same way or using the same tools. So it's understandable that these gets happen and often they're very separate groups bigger.
00:12:36 [W] Denise this is obviously even more the case then add a small start-up of 10 or 20 people and this is one of the key things that has sure many people watching.
00:12:50 [W] This will be aware of that. You know, the creation of devops has a culture of practice and really as a culture rather than a as a profession that sits between operations and Engineering to really improve the collaboration of these two groups and really combine this into a unified
00:13:04 [W] And this is one of the key things that has shown many people watching.
00:13:06 [W] This will be aware of that. You know, the creation of devops has a culture of practice and really as a culture rather than a as a profession that sits between operations and Engineering to really improve the collaboration of these two groups and really combine this into a unified culture.
00:13:07 [W] The both of them are speaking the same language using the same tools and it makes much more effective processes and this really helps improve the collaboration between these groups.
00:13:19 [W] However often info second policy partially deaf say cops, but generally infosec policy generally because it's more than just the technical side.
00:13:30 [W] Sometimes gets left out of this will not included in these processes and so really making sure that the sick part is included in devops is
00:13:35 [W] is really critical and this can be done by thinking about policy and bringing policy much closer into this process and having infosec engineering and operations really working together and using this communicating and sharing tools
00:13:50 [W] What sits in the middle between them?
00:13:57 [W] Well, that is really this cultural practice between all three and like I said, it requires tools education, but most of all it requires communication and it like way for these groups to talk with each other.
00:14:07 [W] So this is where open policy agent comes in and I'll get Ash to jump him and talk a little bit more about what open policy agent is and give some examples and then we'll get into how it can help solve this problem. What is the open policy agent?
00:14:23 [W] Opa is an open-source general-purpose policy engine when you use Opa you are decoupling the policy enforcement from the policy decision making so now your services can offload policy decisions to
00:14:35 [W] Yu Ting a query so let's understand this in detail by looking at this figure imagine you have a service and this can be any service at all, it can be own custom service or kubernative API server Kafka Envoy any service
00:14:51 [W] The service gets a request.
00:14:58 [W] It's going to ask or puffer policy decision by executing a query.
00:14:59 [W] Opa is then going to check or evaluate this query by using the policies and the data it has access to and send a decision back to your service where it gets enforced so you can see that
00:15:14 [W] a couple the policy enforcement from the policy decision making
00:15:20 [W] The policy query itself can be any Json value.
00:15:29 [W] So imagine if your service exposes an HTTP API endpoint your policy query could include the path the method the user also on if your service is a community is a pi server your policy query could
00:15:41 [W] a policy query could include the path the method the user or so on if your service is a community is a pi server your policy query could include the Pod manifest for example, so as long as you give Opa some kind of
00:15:46 [W] As for example, so as long as you give Opa some kind of structured data and you write policies, which makes sense for that data Opa will return a decision back to your service.
00:15:56 [W] And that's why we say opa is a general-purpose policy engine because it is not tied to any particular data format.
00:16:03 [W] Once Opa returns a policy decision back to your service.
00:16:10 [W] It's up to your service to interpret it and then enforce it and just like the query the policy decision can be any Json value.
00:16:19 [W] It can be a Boolean. It can be a string. It can be list object any Json value? So this is the open policy agent and open-source general-purpose policy engine, but the goal is to unify policy enforcement
00:16:32 [W] And it's to decouple the policy decision-making from the policy enforcement.
00:16:39 [W] So how does OPA help well Opa sits in the middle of these three areas and this is really what we can tool for communicating between these groups. So
00:16:55 [W] Ocean and the as a tool for for actually implementing some of these processes and practices questions. Where can you put open windows open go where does it sit in the process?
00:17:11 [W] And from this diagram? You can kind of see that it's everywhere.
00:17:15 [W] It could be sick could everywhere. It's everywhere you need to apply policy and where a policy could help improve processes and practices for your team's so this could be you know in your Cloud layer when you're eating grass to ensure that and graphql.
00:17:26 [W] Chris policies are followed right down into your apis and then your data protecting the data to make sure you're practicing. Your data is protected and everywhere in between part of your ci/cd process.
00:17:37 [W] For example, there's many many use cases for it, you know data access management service Access Control ensuring that your infrastructure as code policies are in your infrastructure as code is written correctly a tariff and files or construct the correctly your Helm
00:17:52 [W] And like I said the mission in English control and filtering data is all these things are potentially use cases for Opa.
00:18:03 [W] It's really really a general purpose as Ash as should sit.
00:18:14 [W] So how does OPA help? Well, the key here is open decouples the policy decision making so, you know, when a policy what is the policy itself and how its enforced within the system and provides a clear communication
00:18:18 [W] The policy decision making so you know, when a policy what is the policy itself and how its enforced within the system and provides a clear communication between the stakeholders infosec who are the ones who are creating the
00:18:23 [W] in the stakeholders info sick who are the ones who are creating the policies or will be very heavily involved to the stakeholder in those policy and your engineers are the ones who have to put that in place or Ops teams as well have put that in place and then enforce it so the teams that this applies to
00:18:34 [W] Couples also allows both of those groups to have autonomy, but also a tighter alignment. So this decoupling as as many types of, you know, loodse couplings allows for greater autonomy and Tighter alignment and for second to find the
00:18:50 [W] Lab and test this policy engine can make sure they are following it and the policy as easy applied.
00:18:56 [W] So it really benefits all the stakeholders in this group.
00:19:05 [W] It can also help in other ways and that it provides similar benefits benefits to infrastructure as code, you know, you can automate it. You can apply Version Control to it.
00:19:13 [W] It's got observability tools and you can audit it so you can log all the decisions that are made and you can really audit it as well which is which is great on touch a bit more on that later. So now
00:19:23 [W] Bit more detail about where it can go.
00:19:26 [W] So applying it vertically and I'll talk about applying it vertically and horizontally or vertically means what layer in your stack between a front end API around the token or around between your API and
00:19:38 [W] Ordered that Services is actually a lot of excess and protecting your databases as well.
00:19:46 [W] you know is that request allowed is that person allowed access to that data now dig a little bit more into the horizontal aspect and that's the idea of pushing.
00:19:58 [W] Your security left is a well-known concept and divs are cops and that the security aspects are really start during the design and development phase of a project rather than only and forcing it or applying it at the end.
00:20:09 [W] and Oprah is a communication tool which really allows you to push policy lift and policy being part of, you know, a core part of your security practices and that allows you to apply it during design and development as well as deployment and in production, so,
00:20:24 [W] enforcing it or applying it at the end and Oprah is a communication tool which really allows you to push policy lift and policy being part of, you know, core part of your security practices and allows you to apply it during design and development as well as deployment and
00:20:25 [W] As you can review critical policies pre-development make sure that you're working with them the policy constraints during development.
00:20:34 [W] You can actually test against some of these policies and then during deployment you can run integration checks to make sure the policy is are applied correctly and you can actually Test new policies rolling out new policies and see what impact it would potentially have on it on your system
00:20:47 [W] I correctly and you can actually Test new policies rolling out new policies and see what impact it would potentially have on it on your system and then obviously you can enforce them in production as well.
00:20:54 [W] So in general the whole idea is you have to make processes circleci.
00:21:08 [W] Policy can be automated and integrate into your ci/cd systems and as well as that you can actually choose between, you know, providing just guidance or more strict enforcement and forcing different rules as required.
00:21:24 [W] And so you can use that potentially to do Progressive rollouts, which is really great for your Ops teams. You can roll out policies quickly, but do it progressively you can ensure that these policies are applied. You can provide better communication between all these
00:21:38 [W] Acacia interface with Opa and obviously it provides an audit and decision log, which your Auditors will love and your Auditors will love all of this because you can clearly show what decisions the decisions are being made and why they're being made and give them an audit trail
00:21:53 [W] I'd and now I'd like to share some real-world use cases of how you can use Opa to secure your Healthcare data on these are some that we've come across I'd like to start with talking about
00:22:09 [W] Some that we've come across I'd like to start with talking about service access management.
00:22:19 [W] So controlling the service and grease to ensure that the origin and request a valid and how you can use for example, role-based Access Control to do this and to do it to avoid things like unintentional data leakage due to
00:22:26 [W] Role based Access Control to do this and to do it to avoid things like unintentional data leakage due to developer error, which when you're dealing with complex systems is always a risk that you want to try and avoid and this is not necessarily due to malicious intent often.
00:22:35 [W] It's just an mistake and how you can put policies in place that can really support Engineers to avoid these kind of issues and here we've got an example policy and this one specifically allows only.
00:22:52 [W] We patients and the doctors who are directly responsible for those patients being the only ones who can access this personal health information.
00:22:58 [W] This is a patient case and here you can see from the sample input on the left we have.
00:23:06 [W] Dr. Susan is trying to access Alan's information and we have the data there on in the middle which shows that Susan is.
00:23:15 [W] is. In fact one of Alan's doctors and on the right hand side, you can see the two truthy statements which
00:23:22 [W] Allow the top one allowing the patient to access their own information. But in this case, it's the second one which enables the Doctor Who is responsible for that patient if they have a risk, dr.
00:23:35 [W] Listed as one of their doctors that they doctor will then be able to access that information again, like this information of the input information on the left hand side doesn't have to be directly written like this
00:23:48 [W] You can see the to truthy statements which allow the top one allowing the patient to access their own information.
00:23:50 [W] But in this case, it's the second one which enables the Doctor Who is responsible for that patient if they have a risk a doctor listed as one of their doctors that they that doctor will then be able to access that information
00:23:51 [W] True in different forms, for example, the user could be coming from a jot or something like that.
00:23:56 [W] So here's an example of the in the infrastructural the architecture here and here we have a cluster which has two services in it potentially hear from two different tenants and we have a service which is sitting outside of this cluster external to this cluster.
00:24:12 [W] Completely external to the system.
00:24:17 [W] We are checking for three things here.
00:24:20 [W] We want to check its inside the cluster going to sure check to make sure it's the correct tenant. And also we want to make sure that the requested valid so that that last one is based on the rigor we have before the other two were not included for Simplicity sake so
00:24:33 [W] It is valid so that last one is based on the rigor we had before the other two are not included for Simplicity sake so here you can see the request that we talked about previously.
00:24:38 [W] Dr. Susan seems a request from service a which is tenant a accessing information from 10 and as database and it is her patient as we saw before so, yep, that's totally fine.
00:24:51 [W] And as we saw before, so, yep, that's totally fine.
00:24:52 [W] Opa will allow that through then we have a second request that comes through from service be it's not from the correct tenant, but it's asking for something from 10 and a so that's a initial concern and we would also
00:25:06 [W] To that sir initial concern and we would also not allow it because it is not giving us the information which user is coming from so we don't know if it's from the patient requesting it or if it's the doctor.
00:25:16 [W] So again, we'll say no for that reason and the third case is we actually have a request coming from completely externally.
00:25:24 [W] This is directly to the service.
00:25:25 [W] It's not from inside the cluster and therefore we just say no and we wouldn't actually even get to the tenant or the
00:25:31 [W] Valid request sections because we would have already rejected it because it's outside the cluster. So that gives you some even even more security if you have highly sensitive data, which is the case here now, I want to talk a little bit about
00:25:46 [W] Managing internal data access so that is actually your engineers inside the company how you control who has access to what data and this is actually really important.
00:25:56 [W] This is a topic that came up and that the Auditors want to actually know about and in this case. We apply the principle of least privilege to make sure that it gives only have the access that they need and sometimes
00:26:10 [W] Adding and removing access to something at different points in time.
00:26:16 [W] However devops he's still need access to it.
00:26:24 [W] And so you can use Opa to reduce the overhead through automating the application of role-based access control.
00:26:27 [W] So I'll give a little example of how we do. This key thing here is you have a whole bunch of stakeholders. You have the developer who want to do their jobs, but also within policy constraints you have it team who want to add delete
00:26:39 [W] The emphasis is more on the HR op side. Then you have your information security team who want to update and enforce policy. And then when an auditor comes in they're going to want to order to make sure the policy was followed and then you have the Engineering Management or operations team
00:26:55 [W] Ensure Engineers have the roles that they needed update those but also really make sure that the processes are actually followed because that's something that they'll probably managing during audits as well.
00:27:06 [W] So here we have the developer wants to get a token to access the database and the for example here we're using mongodb and we use Mongo Atlas and the div gets
00:27:22 [W] To access the database and the for example here we're using mongodb and we use Mongo Atlas and the div gets the token and then we'll make a request to the database for example to do
00:27:27 [W] Make a request to the database for example to do a migration or to look up Retreat some information about a particular patient and they have this task they want to do we want to keep this as
00:27:38 [W] To keep this as much in line with what they were doing as possible.
00:27:47 [W] So we want to be using the roles that we could exist within Monta Ellis, but we want to do this in an automated fashion.
00:27:56 [W] So we have this user system roles that can be managed by the engineering management team and that's its and get Engineering Management team wants to update the role for a user for a developer so that they can access
00:28:02 [W] Personal health information some Phi information to for a specific user and to do that.
00:28:12 [W] They need to update the permissions.
00:28:13 [W] So here that requires potentially wanting to have a check to make sure that the particular developer is actually allowed access for example that they have had a background check done because it's particularly secure information.
00:28:27 [W] have this policy that is in place which checks to make sure that they have a background check and we want to grab that.
00:28:35 [W] That information from repo about that user for example October which will be managed by the it or HR team that will update and keep that information about internal team.
00:28:47 [W] And so what we do is we have the all that together and all of this is automated so that the system is updated and make sure that user information is automatically updated and pushed to the
00:29:01 [W] By the it or HR team that will update and keep that information about internal team.
00:29:02 [W] And so what we do is we have the all that together and all of this is automated so that the system is updated and make sure that user information is automatically updated and pushed to the
00:29:03 [W] and that any changes to policy as well as updates roles will trigger some of this automation to make sure that these then propagated to Mongo atmosphere the Mongo Atlas API now we have a use case here like
00:29:17 [W] Where a user wants to access some of this Phi and we want to give them the permissions or the role to allow them to do that and we then check to make sure that they have this
00:29:32 [W] We check that in the policy that was applied by the info SEC team.
00:29:42 [W] And yep.
00:29:43 [W] They have a so that's cool.
00:29:45 [W] We within can update using the apis the user permissions and Mongo Atlas.
00:29:54 [W] We have another user then who also wants access to similar information the engineering management team try and make the update as well.
00:30:02 [W] But in this case, the user hasn't actually had the background check done. So
00:30:03 [W] the policy says no Opus is no and will return that information back to the engineering management team saying this is why we declined that and then that will be logs so that the infotech team later on can use that for an audit to say we didn't allow for this reason.
00:30:18 [W] Interestingly there's actually something else we could do. For example, if they weren't allowed permission to production for that for the Phi data, but they were actually allowed it
00:30:34 [W] Aging or some development environments. We can then modify the request to give them permissions for that but not permissions for frauds prod so we can actually do some data transformation or request transformation to do that.
00:30:49 [W] So, that's pretty that's a pretty cool use case and it's pretty helpful. If you have potentially different cascading permission sets that you want to allow. So thank you. That was our talk and I hope you enjoyed it and if you have any
00:31:06 [W] Kitchens for myself about how to apply Opa to healthcare scenarios, or you have questions for ash around how Opa works or some more detail on Opa then feel free to ask.
00:31:17 [W] Thanks.
00:31:18 [W] Hey, so we'll start off with answering some of the questions and order that we receive them jump through this a couple great ones here. The first is have you considered how this ties into Health Care standards
00:31:37 [W] so this is a really interesting one because this is not something that we've worked with yet, but is actually one of the ones that I am definitely looking towards applying in my current role imagery Dock and
00:31:53 [W] I am definitely looking towards applying in my current role at Major Dock and that's how we can you can as because Phi is a you can apply any format to
00:32:02 [W] as because via is a you can apply any format to Opa so you can use this General its general purpose so we could definitely use it to make sure that fire is constructed correctly or
00:32:11 [W] we could definitely use it to make sure that fire is constructed correctly or that requests that are coming through are actually valid or allowed as well and to ensure that the integration between a Health Care system and
00:32:21 [W] Tools is Bill creaking constructed correctly and as safe, so that that's a really interesting use case that has only just come up for me.
00:32:36 [W] So that that's a really good to further questions, but I don't know too much about it yet because I haven't really started working on at this point - do you want to get the next one or should I move on?
00:32:44 [W] You can get the next one.
00:32:45 [W] Alright cool. So next one is around how Engineers can actively participate in this process and that's a really good one as well.
00:33:01 [W] Like when we were actually first came across Opa and and the use case was actually was the engineers who had built some services that they wanted to control who could which other services could access to it could have access to it.
00:33:12 [W] so this was a youth case where the engineers actually wanted to enforce.
00:33:18 [W] I'm policy or have some policy in place.
00:33:25 [W] So there are definitely use cases where Engineers might want to put that policy in place.
00:33:33 [W] But when it's the info SEC or Ops teams the real use of this is that it's a communication mechanism.
00:33:40 [W] So the Ops teams or infosec can write down a policy and explain what they want to have happen and then Engineers can work on actually.
00:33:47 [W] Really?
00:33:48 [W] We have on the system.
00:33:56 [W] So and then they need to they need to put that into play in their system. So it's really around this communication interface for implementing this because then at the end of the day, the engineers are going to have to implement the enforcement of
00:34:08 [W] Is some ways you could do have that most part of hops by putting it for example in your servicemeshcon.
00:34:21 [W] Could you could do that, but it's definitely a way of engaging Engineers with you know, a tool that they can like more actively engaged with rather than just some really boring
00:34:29 [W] Piece of Wiki or an email that no one read which I've had happened quite frequently.
00:34:38 [W] so
00:34:42 [W] there's one around how would you introduce Opa within the it and business teams? And any lessons from that looking back at the journey?
00:34:54 [W] Yeah. So this is actually a really good question.
00:34:57 [W] It's the biggest struggle I had was trying to get the organization.
00:35:04 [W] Actually, the organizational change was the hardest aspect and opa wasn't the difficult part of that.
00:35:18 [W] It was actually integrating and having the understanding that Ops and infosec and it had to collaborate more.
00:35:26 [W] So the the learning is actually having those three groups have a conversation sit them in the same room start talking about it.
00:35:33 [W] And then when you introduce Opa, it's actually a way of saying hey, look here's this tool.
00:35:35 [W] where we can talk about policy and we can apply policy as part of infrastructure and it actually becomes this mechanism for talking with an engaging those different departments in a way that there's a Common Language
00:35:50 [W] Have to collaborate more. So the the learning is actually having those three groups have a conversation set them in the same room start talking about it.
00:35:51 [W] And then when you introduce Opa, it's actually a way of saying hey, look here's this tool where we can talk about policy and we can apply policy as part of infrastructure and it actually becomes this mechanism for
00:35:53 [W] The first thing is to actually get all of those groups in a room talking about.
00:35:56 [W] Okay.
00:35:57 [W] What is the policy that we have already?
00:35:58 [W] How will we actually enforcing that?
00:36:10 [W] I found many situations that we had policies and people didn't even know they exist and they weren't enforcing them and then you can talk about well, how could we enforce this in practice with code either as part of ci/cd systems or build or part of development or wherever
00:36:14 [W] The horizontal part but yet get the same people in the room and then introduce Oprah as a solution.
00:36:30 [W] It's a really great way of doing it I think but it might take a little bit of working with those teams to get there depending on your organization just to just to add to
00:36:37 [W] Just to add to Martin's on so they could of the goal of opa is to solve.
00:36:47 [W] policy enforcement across the stack
00:36:50 [W] and that's something you need to communicate with your teams.
00:36:53 [W] When you are using Opa because imagine if you have like hundreds of microservices running.
00:37:00 [W] Running open and you want to control policy for all of these diverse systems.
00:37:05 [W] And introducing or writing something which is like custom for each system is going to become difficult to maintain at scale especially. So if you bring out these problems then you know, you need a unified solution irrespective of
00:37:21 [W] And that's where all politicians.
00:37:24 [W] Exactly exactly.
00:37:28 [W] Yeah, so the next question is around.
00:37:31 [W] How the devops teams should be should be set to create and maintain these policies.
00:37:41 [W] So that's a good question Opa provides you with apis called the bundle feature, which allows you to pull policy and data from from remote HTTP services.
00:37:54 [W] So you can use this feature to distribute policies to Opa.
00:38:01 [W] You need to write a control plane around on top of opa.
00:38:06 [W] Which gives you the ability for distribution?
00:38:09 [W] But Opa provides you the apis to write these kinds of control planes.
00:38:19 [W] So for example, you could write your policy and push it to S3 as part of your CI pipeline for example, and then you can have Opa point to S3.
00:38:29 [W] Pull it down and then enforce that policy.
00:38:33 [W] So that's just one way to do it.
00:38:35 [W] It's got some really cool things where you can like look at the impact of a change in policy on your system and then replay real-world events that have come through and see how that would change with the new policy coming in.
00:39:04 [W] So like that's pretty cool, but you don't have to use that.
00:39:16 [W] You don't have to have some tool but that again it's having some kind of layer on top. So control plane as enables you to
00:39:19 [W] communicate with between these different groups may be a little bit more easily and potentially it can be something that's managed by your info SEC team and they can really see it and there's even things where you can do whether you if they can build policies in some of these tools like styra,
00:39:33 [W] Rather than having to code them. You can just kind of like a goalie which might be easier for people who are fully into Coke, but it depends depends on what you use cases.
00:39:43 [W] Maybe as you want to answer the one about latency.
00:39:49 [W] Yeah, sure.
00:39:55 [W] So the question is how open would work with latency sensitive systems.
00:40:00 [W] Does it increase request latency?
00:40:04 [W] Noticeably when the system has many policies.
00:40:05 [W] So that's a great question.
00:40:14 [W] So Opa is designed to have very short latency requirements.
00:40:15 [W] So what I mean is your policies can run in?
00:40:19 [W] Hi microseconds to low milliseconds of latency requirements, depending on how you write the policy as well.
00:40:32 [W] So for an AP authorization use case, the the latency budget is really small.
00:40:33 [W] It's really straight.
00:40:38 [W] And so you can have Opa running there along the data plane alongside Envoy for example and delivering policies in like low millisecond latency. So it has a pretty small impact on your on your overall request
00:40:48 [W] And there are ways to optimize how you write that policy to make that latency when smaller.
00:40:56 [W] There's a good question around what strategy when building policy flows that rely heavily on extra context which is out of it.
00:41:13 [W] This is this is a hard one and you really have to find a way to introduce that if I understand the question correctly it to introduce that context or to provide
00:41:21 [W] To build that policy flow.
00:41:26 [W] This is like quite a hard problem when you and you have to like gather as much and in order to apply policy, so
00:41:35 [W] Inject a lot of information into or run a little service that can actually pull and gather and orchestrate all the information.
00:41:45 [W] That mongodb or our internal users how they have access. We actually did need to grab context from different places like from OCTA like from you know, what the user request was and a variety of different
00:42:06 [W] You can write a little service that can sit and actually do that query for Opa and then pass the request on beyond that. So sometimes you will actually need to write services that couple with it as well to do this like data Gathering, but
00:42:23 [W] Right services that couple with it as well to do this like data Gathering but it comes with difficult.
00:42:31 [W] Yeah, so we moved to slack now. I will try and answer some of the questions that didn't get answered here. So thank you very much. Everyone for Christmas is really really great.
00:42:36 [W] Thank you.
00:42:38 [W] Thanks.
