Effective Kubernetes Onboarding: BBTK-7699 - events@cncf.io - Wednesday, August 19, 2020 7:45 AM - 43 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:02 [W] Hello Cube Khan, my name is Kathleen Jewel and I'm a developer at digitalocean.
00:00:11 [W] I work on the digital experience team, which is the team that powers digital oceans community site among other web properties.
00:00:21 [W] So I'm really excited to be here today to talk to you about effective kubernative A's onboarding.
00:00:24 [W] Some of you may be familiar with the community platform are ready.
00:00:32 [W] We have a wide range of tutorials questions answers and developer tools that are designed to spread awareness and knowledge of Open Source Technologies.
00:00:41 [W] So I'll just say a quick word here to plug our community writing program in case anyone wants to share any of the great things that you're working on with the digital ocean Community.
00:00:57 [W] We do accept submissions from Community external authors.
00:01:00 [W] So please definitely feel free to get in touch with me if you want to learn more about that.
00:01:03 [W] So why am I here today?
00:01:06 [W] In this talk, I want to take you through some of the lessons that the community team has learned from both a content and a development perspective about effective kubernative onboarding.
00:01:20 [W] So the goal is to give you some actionable tips that you can hopefully use the next time that you need to get yourself.
00:01:31 [W] and or your team up to speed with kubernetes.
00:01:33 [W] So, how did we come to these insights?
00:01:39 [W] You might ask?
00:01:41 [W] Well as many of you are aware digitalocean has a managed kubernative product, which was made generally available in May of 2019.
00:01:49 [W] So leading up to and following the release of that product the core contributors on the community content team were tasked with the following project Teach the World kubernative ease.
00:02:04 [W] So the push to develop content again and here in the screenshot, you can see one outgrowth of that push for Content, which is our kubernative for a full stack developers curriculum, which I'm going to discuss in more detail later.
00:02:20 [W] Peter
00:02:20 [W] so teach the world kubernative seems like a straightforward task right?
00:02:29 [W] It's except.
00:02:29 [W] Where do you begin?
00:02:35 [W] team was definitely going to need some operating principles to build out that content.
00:02:36 [W] Otherwise and I definitely would not recommend this approach the team would just be creating content using a kind of scattershot approach.
00:02:49 [W] Hoping to cover all relevant basis by some kind of happy accident.
00:02:49 [W] So let me cut right to the Chase and tell you about the approach and the principles that the team evolved in order to teach the world kubernative.
00:03:00 [W] First know your audience and their objectives.
00:03:06 [W] Second determine the best approach to meet those objectives.
00:03:12 [W] And finally scope your approach appropriately so I'll have more to say about each of these in turn.
00:03:22 [W] Meanwhile back on the community platform itself a set of related questions and issues were arising.
00:03:31 [W] Basically, we were in the process of moving our staging and production pipelines and environments to our internal kubernative clusters prior to this transition.
00:03:45 [W] Lying on some trustee reliable But ultimately updated been to servers like the 97 korilla that I drove until a few years ago.
00:03:56 [W] These servers had brought us far, but it was time to make the change.
00:03:59 [W] So the principles that I want to discuss for onboarding teams and individuals to kubernative is also stem from the work that the community development team was doing on the platform Side Community is a rails application and it was staffed by a group of
00:04:16 [W] Oliver's with web development backgrounds who were used to deploying in more traditional VM environment
00:04:23 [W] So deploying to kubernative met involving the entire team in decision-making conversations around the changes consequences and trade-offs of using this new architecture.
00:04:35 [W] So in working through these principles with you, I'm going to combine insights from both the content and the development side as I had the Good Fortune of both contributing content to the kubernative curriculum and also working on the development team that finalized
00:04:52 [W] Unity is transition to kubernative.
00:04:55 [W] Alright, so first when you're getting anyone up to speed with kubernative A's or really any other new topic, the first question you want to ask is who are you dealing with?
00:05:09 [W] Maybe your onboarding application Developers.
00:05:14 [W] This group wants to be able to accomplish their day-to-day tasks and deliver on set expectations.
00:05:23 [W] So they need to know enough about how their application environment is going to change in order to make the best and most informed decisions in their day-to-day work.
00:05:32 [W] so one example here out of many would be something like a Cron job cron jobs work one way out of um, but in a distributed environment that you need to be handled differently, so it's good for whoever's working on features
00:05:48 [W] Expect those jobs to be running to be informed about any relevant changes.
00:05:54 [W] Members of this group also need to be able to deploy or if they're not doing that themselves.
00:06:03 [W] They need to be able to get things up to a point where deployment can happen.
00:06:09 [W] So for our team deployment on kubernative would mean involving, you know would be a process that involved different processes from what we had been using on VM. So no more Capybara for example,
00:06:20 [W] So we needed to bring people up to speed on how moving to kubernative would affect the deploy process.
00:06:26 [W] Maybe in your case your onboarding operators or maybe your audience includes people who are going to function in this capacity.
00:06:36 [W] Like developers this group is going to need to know the processes procedures and tools that relate to deployment.
00:06:45 [W] However, they are also likely going to be charged with things like automation managing see I scheduling backups and other related tasks.
00:06:56 [W] It's also very likely that they're going to be asked to implement logging monitoring and alerting so information that's tailored for this group will likely cover somewhat different topics than information that's tailored for application Developers.
00:07:13 [W] Another possibility.
00:07:21 [W] Maybe you are onboarding decision makers or other stakeholders.
00:07:22 [W] These could be the folks for example who are in the position to approve the headcount that you need to accelerate your development on committees.
00:07:32 [W] So if formation for this group will then be tailored around things like making financial decisions and really understanding the tech as it rolls up to top level business goals.
00:07:45 [W] They also need to see how and where team growth and development fit into longer-term objectives for business.
00:07:55 [W] So with these ideas in mind, let's go back to the kubernetes curriculum for a moment.
00:08:03 [W] Thinking about these groups as I've just described them ended up being Central to how the content team organized or content which consisted of new tutorials that were written specifically for this curriculum as well as existing
00:08:19 [W] intent that the team wanted to organize and present in a meaningful and different way at first the team considered using different tracks, right only presenting material to certain members of certain groups
00:08:35 [W] Both mentally they decided that that was somewhat limiting.
00:08:44 [W] So they opted for more of a Choose Your Own Adventure style of approach to presenting the material.
00:08:49 [W] So tutorials were organized in such a way that users could select.
00:08:51 [W] what was most relevant for them based on, you know, the expectations of their role at that time.
00:08:55 [W] And though they didn't include it in the curriculum. They did publish a white paper that was addressed specifically to business stakeholders to provide a kind of bird's eye view of kubernative and its benefits.
00:09:10 [W] Okay. So once you know who you are addressing what approach should you take to onboarding them?
00:09:20 [W] if your audience includes application developers who need to develop with a distributed architecture in mind and deployed successfully then you might cover the following topics as a way of establishing some theoretical foundations
00:09:37 [W] As well as what's needed to accomplish specific practical tasks.
00:09:42 [W] Okay, so first it might be a good idea to cover some 12f a principles for things like versioning dependencies configuration State and so on.
00:09:55 [W] Environment variables are going to example here making sure that everyone understands what to refactor who holds the keys for updating these variables wherever they live and things like that.
00:10:10 [W] So in our case that's in fault. So you want to know who has access to that.
00:10:14 [W] It might also be good to cover some modernizing topics things like health and Readiness checks logging monitoring and so on.
00:10:30 [W] So even in the case where logging and monitoring are handled by other teams application developers could still be responsible for things like making sure how laughs and or Readiness and points exist.
00:10:39 [W] understanding the new for those is important.
00:10:43 [W] next containers
00:10:46 [W] What do they mean for your application one way of covering this in Practical terms could be setting up a local development environment with Docker and compose to get folks familiar with what goes into an image and how the containerized
00:11:01 [W] Max behaves as a whole so for example the community application sits behind nginx.
00:11:09 [W] Having a local setup that replicated the deployed stock was really handy as an illustrative tool and got the team more familiar with the entire setup.
00:11:21 [W] Finally you want to make sure that whoever is deploying knows what's required for that process to be successful.
00:11:32 [W] So who is pressing button?
00:11:36 [W] What's to brighten that needs to be processed? And what should folks do in cases of failures or necessary rollbacks?
00:11:42 [W] So it might seem straightforward to say that you're just going to cover all these topics.
00:11:56 [W] However Lookers might arise for your team as they process this information and look at what's required of them to get us up to speed with the proposed changes.
00:12:05 [W] So ostensibly your team is spending work hours on this transition. So you want to help them avoid any walkers.
00:12:10 [W] So one blogger could be something like well, why is this necessary?
00:12:15 [W] Why are we doing this now?
00:12:21 [W] You know, what are the foundational components of a distributed architecture?
00:12:22 [W] What does that really mean how to Containers differ from vm's?
00:12:27 [W] For me and then finally work what to order the differences in the tools and systems that I'm used to am I going to have access to those things is using them going to be different and so on.
00:12:38 [W] So depending on where your developers are coming from and what their experiences are. It may be helpful to think about covering some metal level topics in your onboarding process.
00:12:52 [W] Ultimately doing this can involve the team more closely in the decision-making process since a meta level understanding of the architecture will allow them to extrapolate out and actually get out ahead of problems that
00:13:08 [W] Could arise in their own area of expertise.
00:13:11 [W] So one helpful way to approach this might be to separate out Todd larger topics. Like what is kubermatic is what our containers what are components of a distributed architecture from what I'm going to call operational topics. Like how do
00:13:28 [W] I extract my application configuration.
00:13:34 [W] How do I ensure that the app is stateless and so on?
00:13:35 [W] Again, it's really important to understand the needs of your group here what they have experience with and what they are trying to accomplish.
00:13:46 [W] So for the kubernetes curriculum, for example, the team decided to address the need for meta level overview by having an introductory topic section that readers could opt into if they wanted so this
00:14:02 [W] Action covered things like basic system architecture core objects and other key foundational topics.
00:14:10 [W] So since the audience for the curriculum was theoretically everyone the team thought this made the most sense.
00:14:24 [W] They assumed that this could be helpful for many people but it wasn't necessary reading for everyone.
00:14:27 [W] So it made sense to food is optional and for everyone for folks to renew and then also folks who wanted a refresher.
00:14:33 [W] meanwhile back on the community platform team
00:14:37 [W] We were giving regular updates on our progress as we conducted testing for our production roll over the we did break some of the decision-making discussions into smaller stand-ups for the core folks who are involved in the infrastructure
00:14:53 [W] Work.
00:14:57 [W] We also created some Internal Documentation to give a kind of high level overview of where information was now going to be located in the application.
00:15:07 [W] So things like deployment manifests and pipelines Concourse.
00:15:14 [W] We also created detailed guides on how to deploy to staging and production as well as how to roll back and redeploy and troubleshoot. So overall we're focused on taking what I would call a highly
00:15:24 [W] Final Approach to information sharing
00:15:26 [W] So the topics that we focused on making sure everyone understood as we moved towards the final roll over included things like understanding where secrets were located having a baseline understanding of what was going
00:15:43 [W] Into the application server images a basic understanding of how to troubleshoot Concourse and then of course how to kick off and roll back, ah deployments. However,
00:15:56 [W] it turns out that we had failed to cover some of the kind of meta level nuances of what it meant to just deploy in a distributed architecture.
00:16:12 [W] So we saw this most clearly when we were in our initial thinking about schedule jobs which changed over the course of our discussions as we talked through the anticipated architecture in more detail.
00:16:22 [W] So once everyone was on the same page with the higher level structure of our new architect,
00:16:29 [W] Texture we were able to come up with a solution to ensure that our schedule jobs ran is expected between our two clusters.
00:16:36 [W] Some of the key learnings that we took away from this were it's definitely okay to break folks out in terms of operational responsibilities.
00:16:53 [W] So having a dedicated group dealing with infrastructure in a granular way, for example, it's also perfectly fine.
00:16:59 [W] So organize information around operational goals things like app development deployment and so on.
00:17:03 [W] on. However, it can also be a really good idea to sink on meta level changes to make sure that everyone
00:17:09 [W] Is on the same page and in retrospect, I'm reflecting on this process. I would recommend doing that at the beginning of a transition process like the one I'm describing.
00:17:18 [W] Alright, so the last thing I want to touch on today is scope.
00:17:25 [W] Once you know who you're dealing with and what their objectives are as well as the approach that you're going to take to meet these objectives.
00:17:39 [W] So either a meta-level pro-choice or an operational one or some combination of the two then you're going to want to think about how to scope the communication process itself.
00:17:46 [W] So there are various formats that you could consider here.
00:17:55 [W] Doc's are great way for example to communicate information asynchronously.
00:17:59 [W] They also offer a great way of creating self-selecting pathways through a body of material which can be super handy if you have a lot to cover.
00:18:07 [W] So for example, the kubernative curriculum offers a topical and self-selected path through a lot of different tutorials.
00:18:17 [W] And as I mentioned each cluster of tutorials in a section of the curriculum rolls up to a particular audience developers operators with topics that pertains to the goals that these users might have so in this way the team is hoping
00:18:33 [W] Going to make it easier for folks to navigate this content in a way that would be meaningful and helpful for them.
00:18:41 [W] Similarly, the kubernative stocks themselves offer self-selecting pathway or readers can find information on Core Concepts as well as information on particular operational tasks.
00:18:54 [W] So another way that you can actually incrementally expand the scope of your documentation without changing your approach. If in fact you are taking an operational approach is what I like to think of as the unique feature of
00:19:11 [W] Digital oceans technical tutorials. So these are small often appositive phrase level explanations of particular tools Technologies or concepts.
00:19:24 [W] They're relatively cheap to include in terms of the space and effort required, but they can really integrate a meta-level coverage of topics into what are otherwise operational discussions.
00:19:38 [W] So basically A good rule of thumb here if you're trying to approach your Doc's this way is when in doubt Define it.
00:19:47 [W] Another reformat for onboarding is a recorded talk.
00:19:54 [W] So at digitalocean, we do a much & Learn series every Wednesday with topics like Seth 101 writing kubernative controllers and Concourse best practices and more.
00:20:11 [W] So these are really great ways to scope a topic down and focus it on developers and operators.
00:20:17 [W] They're also really valuable resources to help Foster company-wide best practices.
00:20:22 [W] Finally the way hesitate strongly suggesting adding meetings to anyone's calendar when approached strategically. They can really be a great time-saver speaking from our experience on community.
00:20:40 [W] That it's handy to have an agenda for these meetings particularly if you're getting people acquainted with kubernetes for the first time.
00:20:53 [W] So even a few minutes spent at the top of a meeting doing a kind of high-level architectural overview can save you a lot of time down the road.
00:20:59 [W] Also, your approach doesn't need to be one of these things right in general.
00:21:07 [W] I would say though as you move through these different formats your scope will in you know, inevitably narrow so talks very of course, but in the format that I'm describing which is a kind of like quick half
00:21:20 [W] Question two particular topic you're going to want to limit your scope by dint of necessity making sure that your topic is something that you could cover in a half an hour for a fairly well-defined audience.
00:21:33 [W] However, finally in meetings, you know, you're going to be speaking presumably to a group of people who share your contacts so you're probably going to be highly specific.
00:21:49 [W] However, you can make more assumptions in a meeting like that about shared knowledge and contacts Since you're speaking to your teammates and colleagues.
00:21:56 [W] On community, I would say we took a kind of composite approach combining Focus meetings and Internal Documentation as well as sharing some video resources from that Munch and learn series that I mentioned earlier
00:22:13 [W] We also created a local Docker environment to look at how the stock behaves locally.
00:22:20 [W] In retrospect, I would say that the team has adopted really well to the change in environment.
00:22:28 [W] Everyone knows what they need to get their job done and they're getting it done people also feel really positively about the move to kubernative a sense, you know for an application that serves about 4 million visitors a month kubernative
00:22:41 [W] He's definitely gives us Security in scale among many other things.
00:22:49 [W] Did we make everyone a kubernative power user?
00:22:50 [W] I would say no, but we didn't really feel that that was the requirement instead.
00:22:58 [W] We really wanted folks to feel empowered to do their best work and to be able to extrapolate out into their work what you know, a kind of basic understanding of our new architecture so they could
00:23:11 [W] Basically inform their work with that understanding so that's what we aimed for.
00:23:19 [W] I would say that is what we accomplished.
00:23:20 [W] Okay, so that's it for me today happy to take any questions in the Q&A here.
00:23:29 [W] And thank you all very much for coming.
00:23:30 [W] All right.
00:23:36 [W] welcome to QA for folks who are asking about the slides.
00:23:41 [W] I apologize.
00:23:43 [W] They are on the sched.
00:23:45 [W] I haven't been able to send any replies here.
00:23:48 [W] So I'm going to be doing that verbally. We do have a link out to the slides in the community channel in the coupon slack and they are on the sched.
00:24:00 [W] They have been uploaded there. But you know that link also that direct link is in the componentconfig.
00:24:03 [W] You need slack Channel.
00:24:08 [W] So yeah.
00:24:09 [W] These were asks any surprising issues you found through the process.
00:24:37 [W] Thanks for the talk.
00:24:38 [W] So yeah, I mean, I think I was a little surprised by and maybe this is not something I should have been surprised about given the journey I've described but
00:24:52 [W] Um, you know, it's easy to lose sight of the basics when you're sort of already well-versed.
00:25:04 [W] So I think that moment that I described a real like, oh we need to pull back and have like a meta-level discussion of some like kubernative Core Concepts before we kind of like move forward with
00:25:12 [W] You know, the rest of this process was a bit of a surprise and that's why I wanted to like highlight that here because you know, it's something that you know might not be intuitive or obvious that you'd need to like take that stuff back.
00:25:28 [W] Lauren sighs. How did you help convince toes?
00:25:33 [W] I org that their app wasn't anything special and that it would work on Kate's. So I think we have a deal like a pretty robust internal culture around kubernative, you know, obviously we have our
00:25:46 [W] Product and then we also have an internal kubernative product that we use. So I think that that the kind of like the going standard is kubernative.
00:26:01 [W] So that was a pretty easy sell just because that's the culture of the orgs. So I think if you want to move the needle on that, it seems like you know for I don't I you know, I'm not sure how you would, you know, do that from the ground up.
00:26:10 [W] I we were just sort of norming ourselves with the rest of the org.
00:26:15 [W] Dumont ask what are some good approaches for creating a video presentation?
00:26:24 [W] So I like the format of the Munch and learn.
00:26:27 [W] I think it's I've seen that, you know, if you kind of pick your scope really specifically like Concourse best practices, obviously, that's broad, but you're probably going to hit on like three or four best.
00:26:39 [W] Practices may be more or if you're you know, your topic is basics for deploying an application on kubernative at your company. That will also be like super scoped.
00:26:54 [W] So I think it's just like deciding what the topic of the video is going to be and then kind of scoping that and and also obviously your time frame, you know, as I highlighted here.
00:27:09 [W] I think the half an hour kind of munch and learn approach can be helpful it within a company just because it keeps everybody focused and it kind of creates a rigor around scope that a longer presentation sometimes doesn't have
00:27:21 [W] Let's see.
00:27:26 [W] what methods did we use to gather information? So we actually do do user research fairly robustly at Dio. So in some ways we were able to capitalize on information that was
00:27:39 [W] Are you being circulated through you know the company via like research initiatives that are already underway. So I would say, you know a quick way to get some research might be like an app, you know,
00:27:54 [W] Button, or some other kind of like an app are activity, but we were also using user interviews.
00:28:03 [W] I'm other kind of larger demographic research that we you know already had underway when crafting that curriculum Jason asks. What kind of timeline were you working with?
00:28:16 [W] yeah, I mean I think for the kubernative roll over for community that was about a six month process all in yeah, you know five six months
00:28:31 [W] And I think you know with curriculum that was probably about the same and I think it depends on how many stakeholders so that you have that you have.
00:28:46 [W] So I mean I think you know one way we were able to move the needle forward or and I was kind of leading this was just like prototyping testing, you know coming back to people with stuff early like
00:28:59 [W] I'm prototyped and ready to look at so but yeah, I mean I think timeline is really challenging sometimes depending on the circumstances.
00:29:12 [W] Yeah, margin is have you had to deal with resistance to change, you know, it's interesting not and I think like I'm you know, these questions are kind of, you know
00:29:28 [W] inviting me to reflect on the culture at do you know because people like this is what people wanted and so, you know, I just grabbed that like our core team working on community were kind of like more traditional web dev, you know
00:29:43 [W] I'm folks and but they weren't resistant because they kind of were situated in that broader culture.
00:29:56 [W] So I think it's like, you know, if you were in a culture where people are like yeah, this is how we've been doing it.
00:29:57 [W] I don't see the need, you know, that might be a place where prototyping and then like coming back with some benchmarks might be a persuasive case or just even doing like, you know, you know industry research
00:30:11 [W] And you know, it's kind of like where is that change coming from as I was talking about when you're thinking about audience?
00:30:25 [W] It's like if there's a business decision makers that's one kind of argument and if it's devs like it's another so I think it's like deciding like who do you need to persuade like who's resisting and then like what are the arguments are going to be most persuasive to them specifically and then
00:30:31 [W] Going to think about how you could you know, make inroads with those arguments.
00:30:40 [W] Oh interesting.
00:30:41 [W] I'm going to ask, you know, the about meta level Concepts.
00:30:52 [W] Yeah instead of so like, you know preferring explaining a concept and then going over its operational side instead of going over all the concepts, theoretically and then doing implementation later iot
00:31:01 [W] II think that's a great approach.
00:31:05 [W] I mean it definitely depends on like what your end goals are but I I love that idea that and we actually do offer a kubernative workshop like an introduction to kubernative Workshop that some of my colleagues have given and
00:31:18 [W] You know, it's the same kind of idea in that Workshop we have away.
00:31:23 [W] You know where we kind of explained like a pod we explain service objects and then we kind of do a quick demonstration or demo. So I think that's a great approach. I think if you're dealing with like a dive team where you have an
00:31:38 [W] Active which is like moving an application to kubernative.
00:31:47 [W] He's I might kind of crammed some of those things into like a kind of meta level session but I think in a workshop setting it's a little different so it kind of depends on like are you going to take your team if you're if you're kind of doing it like in house
00:31:56 [W] With your team.
00:31:58 [W] Are you going to take that team through, you know a kind of like a workshop, you know itinerary or you going to like kind of keep it focused on my we have this one session where we need to get everybody like up to speed on like the kind of broad level
00:32:11 [W] So what we're about to do so it's kind of like a calling like what what you are doing with your team.
00:32:18 [W] So
00:32:21 [W] yeah are some sass did you use a kind of golden path approach?
00:32:33 [W] You know, I think you know Community is a fairly traditional like rails stack. So, you know, I think there weren't a ton of surprises there, you know, but it definitely like, you know,
00:32:47 [W] other people, you know working with different use cases would maybe have like a different approach to this but for us it was like fairly straightforward and then also, you know with some, you know relevance to like what other
00:33:02 [W] Else, you know apps where we're currently deployed at DIA like what they were doing as well.
00:33:10 [W] So I add a mask.
00:33:23 [W] Did you ask to get folks certified?
00:33:27 [W] So the certified kubernative application development certificate?
00:33:32 [W] I think that's a great idea.
00:33:33 [W] We did not do that just because you know for the folks who are on the team their work was really going to be around that still on the app Dev side rather than the kind of deployment and you know operational side. I think that's
00:33:47 [W] Awesome idea though and like, you know, totally if you can like support that that would be great.
00:33:56 [W] All right, I'm being told that probably just have time for one last question, but definitely happy to continue the conversation in our slack chat as well.
00:34:08 [W] Awesome. So thank you everyone for coming and I look forward to connecting with all of you, you know online offline All Good Things.
00:34:46 [W] Enjoy the rest of cute kind folks.
