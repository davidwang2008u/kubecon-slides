Simplifying Windows runtime and deployment in Kubernetes: MYEG-1283 - events@cncf.io - Wednesday, August 19, 2020 11:34 AM - 1145 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:45 [W] Hello everyone and welcome to simplifying Windows runtime deployment in kubernative.
00:05:49 [W] My name is Marzi. Mom.
00:05:54 [W] I have I work at Microsoft as a senior program manager on the Windows containers team.
00:05:56 [W] I have been a Sig Windows contributor for some time and with me is Michael Michael.
00:06:05 [W] Do you want to go ahead and introduce yourself?
00:06:06 [W] Absolutely.
00:06:08 [W] Hi everybody.
00:06:09 [W] Thank you much.
00:06:10 [W] My name is Michael Michael.
00:06:13 [W] I'm one of the six windows co-chairs. I helped found the the seek and started a few years back.
00:06:25 [W] also the director of product management at the emmer and you can find me on the kubernative slug account under the Alias M2.
00:06:27 [W] So let's take a look today.
00:06:35 [W] I'm going to talk a little bit about the continuous Improvement that we're doing a Sig and then we're going to do a deep dive on the runtime for containers and kubernative with the containerd E update going to talk a little bit about networking enhancements and finish it off with our roadmap and how
00:06:59 [W] This is a second presentation that we have on six windows.
00:07:06 [W] I highly encourage everyone to view the introduction to Windows containers that's on your program schedule for the cubic own cloud native Khan as well.
00:07:18 [W] Let's take a look at first our history and how Windows started. Our first release was 1.5 is our Alpha release were essentially all we had was the cube LED and the cube proxy running on
00:07:27 [W] I was and kind of showed everybody the art of the possible.
00:07:37 [W] We're a lot of limitations here, but it kind of encourage the community to come in and contribute on Windows in kubernative with 1.9.
00:07:43 [W] We had our Beta release who had significant advancements including some initial cni-genie Port 1.14 the shipped a little bit over a year and four months ago.
00:07:51 [W] had our first stable release that means that we have supporting Windows containers on Windows server.
00:07:57 [W] 2019 nodes for production workloads on kubernative amazing stuff like the community kind of bonded together and got that release out since then we've had four releases of kubernative studying with
00:08:12 [W] scene 1 17 where as a community we made advancements in Cuba DM C SI run as username volume support and also added support for additional operating systems like Windows Server 1903
00:08:27 [W] And that was the release that came out of four months ago.
00:08:35 [W] We graduated to stable support GMS a which stands for group managed service accounts and run his username to enable our users to be able to take advantage of active directory identities for Windows workloads in kubernative
00:08:47 [W] E 2 cubed e M2 whether cluster API to Alpha or experimental support and then we also had the CSI proxy work in Alpha and containerd E in Alpha.
00:08:59 [W] I was a huge release 118 was pretty much our biggest feature Rich release since one for 1.14 when we actually went GA now with 119.
00:09:11 [W] We're adding CSS haproxy work to better containerd.
00:09:14 [W] He's going to bed as you can see we're having this gradual Improvement and gradually.
00:09:17 [W] Moving of our support to an offering that gets better and better with every release what adding support for DSR and endpoint slices.
00:09:27 [W] So a lots of networking improvements and additional stability and performance improvements.
00:09:41 [W] So when you kind of think about this our communities vibrant were executing a ton of changes across the board from Storage to networking to compute and what advance in the vision of Windows containers in kubernative with every release.
00:09:44 [W] In the next slide we're going to have Mars take you through a deep dive of containerd D and some of the work we're doing there.
00:09:54 [W] Thank you, Michael.
00:09:59 [W] So let's look take a look at containerd e and what progress we have made and why we are going the direction of containerd e so the containerd E runtime provides, you know a variety of benefits and we're going to cover a little bit on you know,
00:10:13 [W] On the you know why we're going in this direction. So basically it aligned with the direction of the kubernative community and containerd E is the runtime where we are actively communities investing.
00:10:27 [W] It's also optimized and maintained by the community.
00:10:29 [W] So it makes it easier for to make additions to fix bugs and all those that sort of work.
00:10:36 [W] The other thing that that, you know is a big benefit of containerd e was from a networking perspective.
00:10:45 [W] We were able to enable new cni-genie. And the reason we were able to do that is containerd e is able to leverage fully the cni-genie.
00:11:06 [W] You know will be you know must not add twice before deleting it. So you need to add it once so those kind of things enabled us to support the new cni-genie the also we're going to talk about architecture.
00:11:22 [W] Are we going to Deep dive into the architecture but it's less monolithic than Docker some of the new features that we already are supporting today, and we were able to because of the containerd e is a special I'm going to go into the
00:11:37 [W] It but basically the features that are today available in containerd E and not in Darker are single file mapping.
00:11:45 [W] For example, the graceful shutdown of PODS.
00:11:52 [W] We talked about the improve workflow of cni-genie the true name is basis.
00:12:02 [W] So the other benefit and a lot of benefit containerd e is getting is because it it's based on the HTS V2 is schema.
00:12:07 [W] So when we started containers in 2016 Windows server
00:12:08 [W] Owners in 2016 back in there this HTS which is the host Computer Service. We started with a V12 schema.
00:12:22 [W] The reason we needed we want to schema is HTS actually handles both VMS and containers and it except instead of parameters it except the Json files.
00:12:32 [W] So initially we came up with this schema and as we got feedback, especially from kubernative we have we improve data schema and that became be to schema in
00:12:38 [W] The support of bots and the hyper-v that that was very particular feature that's added to be to Kuma but it has a it has a bunch of benefits and containerd E is based on V2 schema.
00:12:53 [W] That's why we are able to provide these new features. Now the two things we are working now and are not available today is hyper-v isolated containers, which were going to talk about in a bit and the GMS say support is another thing we are working
00:13:06 [W] Abel and containerd E.
00:13:13 [W] So that would be the future benefits. But the war all we are aligned with the direction of the community.
00:13:23 [W] So with that let's so now we know the benefits of the containerd E and the direction let's move to the next slide and take a little bit deep dive into the architecture. So let's just start with the runtime architecture. The reason it's important to
00:13:28 [W] texture and it specifically containerd e architecture because you know, the community is moving that way as Michael just said is that number one if you are a kubernative developer or a user using Windows containers on kubernative you
00:13:44 [W] Want to know the whole stack especially the runtime the different pieces and components how they fit together how they flow. So if you found, you know, if you heard or having an issue, you know, which component you know, where it's coming from number two is when you know
00:14:00 [W] So if you found, you know, if you heard or having an issue, you know, which component you know, where it's coming from number two is when you know where it's coming from you can go and get help against it and we're going to go into into that on how you can get support
00:14:07 [W] Mom you can go and get help against it and we're going to go into into that on how you can get support if you're running into issues.
00:14:12 [W] So let's look at the darker runtime first the majority of the windows containers on kubernative implementations today are using Docker runtime.
00:14:23 [W] So in the docker runtime, if you look from the left side, you have cubelet within the kubernative and then you have dr.
00:14:26 [W] Shim integrated into the cubelet. This Docker shim is basically a Shameless.
00:14:31 [W] For Docker that helps cubelet talk to darker and it's basically a cry interface for Docker but it is within the cube lifts down. Our the the way the communication works is the cube lid is going to call through dr. Shim Docker
00:14:46 [W] In the middle the middle box and then the docker runtime is going to called the HTS and the HTS is going to then create containers. The STS is host computer with we just
00:15:02 [W] Is although the V2 is schema. We develop very closely with the docker Moby project and containerd E. Both of them Docker use be to an experimental but there is still using the one is schema. So so that's another
00:15:17 [W] In containerd E.
00:15:24 [W] We talked about in V2 is schema, but the HTS you see here is using V1 is schema for dr. Runtime.
00:15:27 [W] Now, if we move to the containerd E how there's different.
00:15:29 [W] So right off the bat if you look at the left side the cubelet no longer has that container runtime shim.
00:15:36 [W] So we decoupled it and the cry is now part of the containerd E the container runtime itself. So that helps, you know with with, you know faster development and you know all the benefits of decoupling so
00:15:48 [W] Now the kublr is going to call containerd E using the cry API.
00:15:53 [W] Cry API is developed for mainly for kubernative and if it's enabled by default, it's optional to use cry Pi but it's enabled by default.
00:16:06 [W] So and we're going to go into more detail on how this work.
00:16:11 [W] But basically it goes to cry and then the cry is going to use containerd e to call HCS Jim.
00:16:15 [W] So that's another Improvement in containerd E were all flow. So STS shim is basically a
00:16:18 [W] An open-source repo published by Microsoft which is a shame around HTS and that and it has a lot of runtime features.
00:16:30 [W] Basically. It's a golang interface for HTS and has a lot of helper functions for HS as well.
00:16:40 [W] So and it is, you know, it can be used to do a lot of runtime functions.
00:16:46 [W] Then the cry is going to use containerd e to call ACS Jim.
00:16:48 [W] So that's another Improvement in containerd E were all flow.
00:16:49 [W] So STS shame is basically an open source repo published by Microsoft, which is a shame around HTS and the and it has a lot of runtime features.
00:16:49 [W] Basically.
00:16:49 [W] It's a golang interface for HTS and has a lot of helper functions for HS as well. So and it is
00:16:52 [W] No, it can be used to do a lot of runtime functions.
00:16:54 [W] So another thing in containerd E is we are able to fully leverage the features of HCS chin.
00:16:54 [W] So that's another decoupling right there.
00:16:55 [W] And then I see a seam is going to call to HCS now. I see it's using V2 is schema. And then as you know, if she is going to create the containers, so that's the overall flow and the difference between the runtime now, let's go deeper into the containerd E.
00:17:03 [W] So if I go to the next slide if so, let's just start with the prodyna.
00:17:08 [W] See those little containers the you know, which is supported today the windows containers.
00:17:17 [W] Sorry, the only container their support and kubernative today is the process isolated Windows containers the so if you look at this this diagram think of it as as a VM or physical host basically running Windows server
00:17:29 [W] So let's just start with the process isolated containers the you know, which is supported today the windows containers.
00:17:31 [W] Sorry, the only container that supported and kubernative today is the process isolated Windows containers the so if you look at this this diagram think of it as as a VM or physical host basically running Windows server
00:17:32 [W] You have this rent boundary which we call the virtualization isolation boundary. It's also the security boundary. I'm going to talk in a bit about you know, the security aspect of it as well.
00:17:44 [W] But let's look at the big picture, right?
00:17:49 [W] So the gray dotted lines if you can see the gray box. There are two of them on the left side is your root or the host it within Microsoft.
00:17:57 [W] We call it root Silo on the right side.
00:17:59 [W] You have the the container. It's a fancy way of saying is just a process isolated componentconfig.
00:18:03 [W] Boehner so those are the two boxes right here now when you know, so the how the flow works is as you see on the top cubelet usually or cry CTL if you're a developer and you want to debug kubernative without installing all the
00:18:17 [W] Probably isolated container.
00:18:18 [W] So those are the two boxes right here. Now when you know, so the how the flow works is as you see on the top cubelet usually or cry CTL if you're a developer and you want to debug kubernative without installing all the
00:18:19 [W] Our steps when you use cry CDL, both of them are going to call the cry API in containerd E.
00:18:25 [W] We just talked about it.
00:18:28 [W] Now the major components within containerd ER containerd e API which is very powerful but for kubernative CF we use cry Pi the components that containerd e relies on or snapshot the networking
00:18:40 [W] Um now if you look from containerd E when we are going to talk to the operating system right to the windows. There are three distinct paths going down on the very left side.
00:18:54 [W] You have a snapshot talking to Windows grabbed right over.
00:19:00 [W] Basically, it snapshots is used to create images to to unpack different layers of images or pull images. So think of this Windows grafter Iver as the little Windows layer management,
00:19:12 [W] So that piece and it's not shot directly talks to it.
00:19:21 [W] Now in the middle you have networking which created which provides API to talk to cni-genie again, and we just talked about them, you know the newer plugins and improve plugins. We were able to leverage and containerd E that interns talk to
00:19:29 [W] Is this middle bad basically makes yours that edge and S, you know creates all the plumbing for networking behind the scenes for you for your container.
00:19:45 [W] And on the very right side you have the HTS.
00:19:47 [W] Jim also called a containerd ehm.
00:19:49 [W] We just talked about HTS chin.
00:19:54 [W] So the cry API is going to go through the canal the HTS shim to call into HCS now once it gets to HTS HTS in profitability containers is the one
00:20:02 [W] there's going to create the silo or the container think of the container and windows as an advanced job object basically, so it creates that you know that gray box in the right the gray dotted lines and
00:20:15 [W] The the service the main interface between your application running on the container and to the operating system is Sig service.
00:20:30 [W] So that's the service that stocks to HTS and if your container application needs to talk to Windows kernel or leverage some of the you know, some of the functions in the kernel see exact Services also called directly to the libraries and Colonel so
00:20:40 [W] For the process isolated containers. Now the important thing to note here is if you are running multiple containers right process isolated containerd. The left box is gonna stay the same.
00:20:53 [W] the right box is going to multiply write as many as you want. But as you can see the security boundary the virtualization isolation boundary is stays the same.
00:21:04 [W] So this the security boundary is the the red dotted line and that's important to keep in mind. Now, let's take a look at hyper-v isolator containers in the benefit it provides.
00:21:10 [W] Glides in terms of security.
00:21:19 [W] So if we go onto to this architecture, so now the the previous slide what we were looking at the boxes think of it that's on the left side now and we're kind of zoomed out so the flow basically stays the same there is a slight difference
00:21:28 [W] Talk about it in a bit.
00:21:33 [W] But basically here you have the hypervisor on the bottom and the route has the kernel and then the on the right side this this red dotted line.
00:21:42 [W] We're calling wvm if fancy way of saying a lightweight virtual machine.
00:21:55 [W] It's a utility via. So in hyper-v container behind the scenes it creates this light very light weight utility virtual the VM and this VM.
00:21:59 [W] Is where the container is hosted and that's why it provides the security boundary as you can see now if you have multiple hyper-v containers, each one is within that security boundary.
00:22:13 [W] So the difference in the flow is is exactly the same until you get to containerd Isha more dhcs him and the SES shim actually is going to talk directly to the GCS.
00:22:24 [W] So it's going to spin up a new view UVM when you ask for a new container on the right side that
00:22:28 [W] UVM is going to get it started and then the service that's going to talk to is GCSE in the previous workflow.
00:22:37 [W] We used to have the GCF GCS talking to HCS just like in process isolated containers, but now containerd e directly talk to GCSE and then GCS from that point onward within the UVM.
00:22:51 [W] And it talks to GCSE and GCS is basically managing the flow.
00:23:10 [W] So that's the architecture of process related containers and hyper-v architect containers. Now one thing I wanted to talk about besides the security boundary is if you see on the right side, I have a legend
00:23:18 [W] now one thing I wanted to talk about besides the security boundary is if you see on the right side, I have a legend which says ownership and support and the reason I brought that up is and I color code it is is often we get questions on like
00:23:26 [W] Shipping support and the reason I brought that up is and I color code it is is often we get questions on like we're you know, if we are having issues here.
00:23:28 [W] Where should we go?
00:23:35 [W] So the answer is if you're looking at the top kublr cry CTL, they both belong to the kubernative community.
00:23:40 [W] Most of you are already contributor. If you are not we encourage you to become contributors so you can go to the kubernative community for support for Kube late and cry CTL. Now if you go to the next layer, that's the
00:23:49 [W] in boxes, right the containerd E the cnib lug in and containerd SES him.
00:23:54 [W] All three are open source as well.
00:23:56 [W] They have their own repo and you can contribute you can file issues. You can do PRS against the repo and we encourage you to be involved in those as well.
00:24:10 [W] Now the brown boxes on the bottom basically, all those components are owned by Microsoft and the windows teams maintains them and we are very excited to tell you that recently we launched.
00:24:19 [W] GitHub repo it's basically Microsoft / Windows containers.
00:24:34 [W] And if you go there you can file issues. If you are having any issues from the one of these components you can file issues and the windows team triage system and gets back to you and fixes them and if needed they can even backboard it to the earlier versions,
00:24:39 [W] So that's a little bit of support model in architecture.
00:24:46 [W] And if you have any questions, I'm happy to answer it in the Q&A section.
00:24:51 [W] So let's move on to the next slide and I will hand it back to Michael.
00:24:54 [W] Thank you buzz. By the way.
00:24:56 [W] This has been super exciting.
00:24:59 [W] Thank you for for the drill down into containerd E.
00:25:03 [W] I think that it's super beneficial for everybody to understand all the different moving pieces what supported by whom and kind of also see the tremendous effort that has happened out of
00:25:09 [W] our community with contributions from Docker and Microsoft and other contributors to actually make this a reality.
00:25:18 [W] So huge effort has been going on for months now and I'm super excited to actually see that were coming to bed right now or were signaling that were on a good path to a stable support and some point in the near future.
00:25:30 [W] So let's take a look at our technology Matrix really quickly here when we started with 1.14 our first GA support of containers running Windows in kublr.
00:25:40 [W] Ladies, we only supported one operating system and that was Windows Server 2000 19 and what LTS C stands for in The Legend is the long-term service in channel that Microsoft is providing.
00:25:55 [W] That's the operating system that's going to be supported for a number of years and the URL at the bottom indicates the support stands from Microsoft including extended Support options that you can purchase.
00:26:06 [W] Brown being Microsoft that's what Microsoft is supporting you buy an support agreement. You you get the OS support and that includes a lot of the components that are at the infrastructure layer of Windows containers the second type of support
00:26:24 [W] Infrastructure layer of Windows containers the second type of support that we have is the ASAC or sag and it stands for semiannual servicing Channel and our goal from a kubernative community has been to support.
00:26:35 [W] Has been do some poured one long-term servicing Channel and two additional SEC channels from Microsoft.
00:26:46 [W] Most likely the two most recent ones.
00:26:48 [W] So we started with Windows Server version 1903, which is no longer supported now by the kubernative community and the with version 119.
00:27:01 [W] 119. We're supporting three operating systems the long-term Windows Server 2013 the ASAC 1909 and the s
00:27:04 [W] Casey 2004 that was just released recently a few months ago Moz.
00:27:10 [W] How about that?
00:27:11 [W] Containerd esupport? What does that look like?
00:27:12 [W] Sure.
00:27:22 [W] So, yeah, it's really exciting and I love your excitement about you know, the containerd E and the Improvement in the overall, you know kubernative for Windows.
00:27:24 [W] So in containerd E support, we started with Alpha support inversion 118 and the containerd E version was one for that's when we started supporting, you know in Alpha stage.
00:27:37 [W] Of course, we tested it on 2019 the LTS see you just talked about and recently we're super excited that you know, as you said
00:27:43 [W] Containerd e graduated to Beta the thing to call out if it's without hyper-v for now and it's in 119 again the containerd e-version stays the same it one for the last row is actually is our aspirations.
00:27:58 [W] If there's a we want to go ga with containerd e support for Windows containers on kubernative.
00:28:09 [W] He's with hyper-v and GMS a and we are planning to do it at 120 the kubernative version the containerd E version is probably going to be one point five and the windows release as just Michael you said
00:28:18 [W] We are going to test it and support it for the latest LTS TV just 2019 and that the the latest to sack for now are 1909 and 2004.
00:28:29 [W] With that, I think Michael you want to talk about networking?
00:28:33 [W] Yeah, absolutely.
00:28:34 [W] Thank you much.
00:28:38 [W] So let's take a look at some of our networking enhancements here.
00:28:44 [W] So in addition to compute and storage, we also have networking work that's going on and I want to call out that some of our storage enhancements around CSI. We're talking about those in our intro to Windows containers session that we have so from a
00:28:54 [W] That tremendous effort around the kubernative community to support dual stack IPv6. So it's not IPv6 only supported you all stack and we Now supported on Windows as well.
00:29:10 [W] So you're going to see that as kubernative is getting more and more features out our goal as a sequence those communities to make sure that you provide adequate support for those features for for the windows containers community.
00:29:23 [W] Make sure that you provide adequate support for those features for for the windows containers Community some other improvements to kubernative services and point slices and put slices are amazing.
00:29:30 [W] They basically with an endpoint slice is it allows you to reference a set of networking and points and kind of act as a source of Truth like endpoint slices is is how
00:29:41 [W] We're out internal traffic in kubernative.
00:29:46 [W] So when you enable and point slices and with the support that we have now in Windows, you are essentially providing a performance Improvement so we can support services with a large number of employees efficiently.
00:29:58 [W] This is great. You know, we can have the large number of inputs and more importantly with the next set of support that we have which is DSR now we support you to scale to a large number of services efficiently, so too.
00:30:11 [W] Skill to a large number of services SQL to a large number of M points per service.
00:30:17 [W] So great.
00:30:17 [W] We are at the support for session Affinity.
00:30:24 [W] So a lot of customers and users called sticky sessions.
00:30:28 [W] We have Dynamic IP 3 preservation. Now we have local routed with features so we can support local node products from host poets and Andrea
00:30:39 [W] Andrea which is based on all the s is a cni-genie login for kubernative just shipped version 0.8.0 which includes full window support including support from our policies.
00:30:55 [W] So a lot of great work has happened on the networking World from a Windows + kubernative standpoint in the future 1.20 or later.
00:31:08 [W] We want to support canopy preservation when you're have external traffic policy and then as well as IPv6,
00:31:10 [W] Support in cni-genie. So think of those key features that the community and users have asked for and we're going to look to support them as well. When you kind of look at our roadmap going to continue investing in
00:31:25 [W] So far containerd e going to continue going to add support for hyper-v cannot support Rook gpus.
00:31:34 [W] We want to continue our investments in deployment and lifecycle management.
00:31:40 [W] You're going to see Cuba DM cluster API Investments and then storage and backup and Recovery.
00:31:48 [W] We want to promote the CSI work to stable along with the containerd E work that we're doing one add more storage providers when I light up Valero support CSI snapshot so you can back up and recover your Windows containers on
00:31:56 [W] Openfaas as well as deprecated some of the in three storage plugins are no longer going to be useful once you actually fully migrate to the size CSI model.
00:32:05 [W] How you can contribute join our weekly meetings video recorded presentations help us write additional documentation and user stories find bugs fixed bugs.
00:32:20 [W] We have a lot of bugs that are marked as good first issue. So you can help you get started with the minimal amount of knowledge on seek windows and obviously like moss mentioned earlier if you have bugs are on windows with any of the infrastructure and really the worked at Microsoft is doing
00:32:30 [W] Said the Meuse mention to go to to file a feature request or bugs and the community around the Microsoft ecosystem is going to help you there.
00:32:42 [W] If you're going to reach us as a Windows Community, what on slack or a mailing list, we have our documentation or GitHub repo who have a YouTube playlist and Community meetings that happen every week on the left. We have the co-chairs as
00:32:58 [W] Leads for the project feel free to reach any of us either on slack or GitHub Muzzin. I would like to thank you for attending our session. I'm going to open this up for Q&A right now.
00:33:10 [W] Yeah, thank you everyone and we'll happy to hear any QA you have.
00:33:16 [W] Hello everybody. And please post your questions on the Q&A. We speaker box that's on your screen. If we run out of time we can continue the conversation on slack.
00:33:36 [W] So if you go to the cncf slack under to - cubic on - maintainer, there's a new thread that was created a few minutes ago for the for this specific presentations.
00:33:48 [W] You can also ask questions. They're offline or throughout the day.
00:33:51 [W] We'll all try to monitor it you can call out either me or moths.
00:33:56 [W] That way we can the notification as well if you like.
00:33:56 [W] That's right.
00:34:02 [W] Yeah, I'll happy to answer any questions you have about anything we talked about or maybe something we haven't talked about.
00:34:05 [W] We're also encouraging folks to attend the other sequences presentation that that's on the schedule.
00:34:15 [W] For this specific presentation so you can also ask questions.
00:34:28 [W] They're offline or throughout the day.
00:34:29 [W] We'll try to monitor it you can call out either me or moths.
00:34:29 [W] that we can the notification as well if you like.
00:34:30 [W] That's right. Yeah, I'll happy to answer any questions you have about anything we talked about or maybe something we haven't talked about.
00:34:31 [W] We're also encouraging folks to attend the other sequences presentation that that's on the schedule.
00:34:32 [W] So it's if you're if you want to learn more about additional areas and snyk windows like our CSI support and some of the other work we're doing around improvements
00:34:35 [W] Improvements are networking and storage or highly encourage that presentation is tomorrow and trying to find the time.
00:34:40 [W] It's tomorrow at 10 a.m.
00:34:42 [W] Central so at six hours for for European time zones against
00:34:50 [W] Given that there are no questions that team here is mentioning to us that they might end the webcast, please anybody have any questions miles and I are more than happy to answer it.
00:35:23 [W] Thank you all for spending time with us to learn about Windows.
00:35:27 [W] But if you think something off later on just find us some slack also as we shown on the previous slide.
00:35:31 [W] I'm going to go to the slide again.
00:35:35 [W] These are the various ways that you can interact with the windows Community find us on the kubernative.
00:35:37 [W] Like find us on mailing list.
00:35:42 [W] you can going to turn our community meetings or view previous meetings on YouTube.
00:35:48 [W] very diligent about recording everything that the the windows Community is doing.
00:35:51 [W] looking into that there is a lot of amazing stuff about CSI and others the going on actually and even yesterday James one of our contributors from Microsoft just submitted the proposal for introducing cluster Epi work for
00:36:20 [W] This for Microsoft just submitted the proposal for introducing cluster Epi work for for Windows.
00:36:25 [W] So anyone that's interested in programmatic API declarative way of provisioning clusters and get them up and running with some impact on Windows as a great area to come in and contribute and learn a hot area of communities, which is cluster API.
00:36:37 [W] Yeah.
00:36:44 [W] All right.
00:36:46 [W] Well, thank you all have a great rest of your day.
00:36:47 [W] Enjoy the conference and thank you for for spending time with us.
00:36:52 [W] Thank you folks.
