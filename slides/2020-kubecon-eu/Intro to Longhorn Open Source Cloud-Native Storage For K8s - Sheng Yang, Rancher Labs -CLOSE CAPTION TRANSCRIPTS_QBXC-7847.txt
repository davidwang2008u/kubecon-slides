Intro to Longhorn: Open Source Cloud-Native Storage For K8s: QBXC-7847 - events@cncf.io - Thursday, August 20, 2020 12:37 PM - 71 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:06:16 [W] Where can I want to this session?
00:06:19 [W] Where can I want to this session? My name is Jane young.
00:12:19 [W] I'm from Rancher laps today.
00:12:23 [W] My sessions topic is Introduction to LongHorn open source, called knative storage for kubernative and also the maintainer of Longhorn and the I've been spent last couple years.
00:12:32 [W] fact last few years working alone for so let's get started.
00:12:35 [W] So as you might already know that longhorn is a cncf project and the Rancher Labs has developed the project and then contribute is to the cncf and the longhorn is a hundred percent open source distributed
00:12:50 [W] Joonyoung and from Rancher laps today. My sessions topic is Introduction to LongHorn open source called knative storage for kubenetes and also the maintainer of Longhorn and the I've been spent last couple years.
00:12:52 [W] In fact last few years working on Longhorn.
00:12:53 [W] let's get started.
00:12:53 [W] So as you might already know that longhorn is a cncf project and the Rancher Labs has developed the project and then contribute is to the cncf and the longhorn is a hundred percent open source distributed
00:12:56 [W] For Longhorn is getting persistent storage everywhere as you might know that Community is already pretty good at handling the stainless workloads.
00:13:26 [W] The design principles for long form. The first thing is we want Longhorn to be reliable.
00:13:37 [W] So we choose to do a Longhorn in a crash consistent way as you might see later every data you right into the device of provided by Longhorn. We're going to be right into multiple replicas synchronously.
00:13:48 [W] So once if you have the scenario that no down and while as long as you have one replicas, you can recover your o your data's and also weaveworks.
00:13:57 [W] Of building multiple layers of protection against the data lost including Longhorn Building snapshot mechanism and the back of magnetism.
00:14:05 [W] So the snapshot mechanism is going to provide you to revert back to previous snapshot inside the cluster and Auerbach can make these in is in fact backing up the snapshot to the outside of cluster. For example
00:14:21 [W] How going to have the backup safely stored outside the class ter. So even in the worst case scenario, you have your whole class of going down. You can still have a you can still recover your data easily.
00:14:36 [W] And the second thing is we are really focusing on the usability.
00:14:44 [W] fact, it's a similar to all the products and projects are created by the Rancher Labs with really values users experience and Prime make sure make sure to provide the best.
00:14:53 [W] User experience for the to the customers and the following First Sight we include one click installation and you don't need to any configuration for installed along for on the first time and of
00:15:06 [W] Going to be after you try it out. You can customize it.
00:15:15 [W] And also we have taken a lot of users feedback to polish our user experience, especially on the UI and how we can support communities better because they have something some concept like PV PV c-- and storage
00:15:25 [W] Not really that straightforward to the newcomers of the kubernetes.
00:15:31 [W] We choose to integrate part of the features and also expand the Longhorns the scope a little bit to try to help users to get the best experience of using Longhorn on top of kubernative.
00:15:46 [W] The third thing is the mental ability.
00:15:54 [W] So we want Longhorn to be easy to understand that in contrast of for example self, which is of course very famous and has been thin mature for years, but the problem we had with the staff in
00:16:01 [W] For at Cloud icon, which is my previous company is that we have very many customers saying Seth is really too complicated to maintain and the for the crash map magazine. You need to really understand what it's doing
00:16:16 [W] That putting two blocks or two replicas of the same volume into the one into the one disk.
00:16:26 [W] So that part is something we want to avoid it.
00:16:29 [W] We want to we want to address that problem through the easy-to-use longhorn easy to understand the longhorn design and also provided multiple tools for user to easily recover even in the worst case scenario.
00:16:42 [W] Easy to understand the longhorn design and also provided multiple tools for user to easily recover even in the worst case scenario.
00:16:45 [W] So as you can see later Longhorn doesn't have a stripping and in the worst case scenario, even you have all whole system went down and as long as you have only have one hard drive, you can completely recover the data from that one hard drive.
00:16:57 [W] Hard drive, you can completely recover your data from that one hard drive and the longhorn also support upgrade without interrupting workloads.
00:17:22 [W] Doubt the interrupting workloads. So you can read write data as you upgrade the longhorn engine to the latest version.
00:17:29 [W] So the latest Longhorn release is released at Late July is 1.1.
00:17:45 [W] So in fact Longhorn has been here for a really long time and many people asking is longhorn ready for production and the answer now is Stephanie.
00:17:48 [W] Yes was spent a lot of time to test and also get a lot of user feedback and the very first GA release 1.0. In fact, it's very
00:17:59 [W] Awful, and we can see that now with 101 upcoming wonder wonder 1.0 release the longhorn will be getting better and better and also, of course go to meet you a production requirements.
00:18:13 [W] So too long for himself is enterprise-grade distributed Block Story software for communities, and we supporters sing provisioning and we of course as I mentioned before support wooden snapshot and backup/restore and we also support volume expansion
00:18:27 [W] any offline learning and we are we also support cross AZ replica scheduling which is basically a mostly targeting for the cross AC communities deployment like in some Cloud providers, for example UK s so
00:18:42 [W] Support storage time for know that this selection and we support cross cluster. The our volume is defined RTO and RPO.
00:18:55 [W] The RTO is recovered time object and RPO is recovering Point object.
00:19:04 [W] So in using this feature, we essentially able to replicate in the war room from the main cluster to your backup of cluster.
00:19:10 [W] So in the event that the main cast went down you can easily swing up the backup class or in no time as I mentioned before we sysdig.
00:19:12 [W] Support life operator of Longhorn software and also we have a building a very intuitive UI and of course one click installation and so on so I will demonstrate some of this feature later.
00:19:28 [W] So that's talk about how long our architecture looks like.
00:19:34 [W] So here we have three node and you can see and those three know they have hard drive and RAM as if you use some of the hard drive SSD Marcus gray means that they are not usable by Longhorn.
00:19:45 [W] And the longhorn with Once Longhorn is stored.
00:19:52 [W] We are going to deploy engines manager and replica instance manager and every node, except for the note that doesn't have storage provided through Longhorn.
00:19:59 [W] We are not going to deploy a replica instance manager here.
00:20:07 [W] So in this and and now a community is asking for a part and the part of need you to have a volume.
00:20:14 [W] So Community is going to transfer transfer this request to create a volume to the longhorn storage class and long provisioner and
00:20:18 [W] We're going to create two replicas.
00:20:22 [W] So we are based on how big the warning is and it was the scheduling policy.
00:20:32 [W] We are choosing to place two replicas and the Node 1 and node 2 and then we are going to start engine process in the engine system manager to connect to those two replicas and the engine is the engine process than able to
00:20:37 [W] Optimize on the local node and connect that to the one who inside the Pod.
00:20:49 [W] So when you have multiple part, that's the and asking for multiple volumes the same thing happened.
00:20:55 [W] We create a replica first and then we create engine and then we provide a warning to provide the data to provide the block device to the volume and the third one.
00:21:04 [W] So the whole process of creating rapidly command engines on in take a couple seconds. So that's is how fast.
00:21:09 [W] The speed of the attaching and detaching volume supposed to be in the long form.
00:21:18 [W] So as you can see here, we are not the engines and replicas are in fact one group of them is contains every to saying in the data path.
00:21:27 [W] They're not really in the action which each other so that's is the one the first advantage of Longhorn design. So the data path of the long-form doesn't interfere is any other William? So even one when it went down there's no way in Syria.
00:21:39 [W] She ought to like affect any other War rooms or any other engines replicas.
00:21:51 [W] So by doing this we are avoiding to have a highly available engine to create for whole clusters because it's pretty hard thing to do.
00:21:52 [W] So instead we have a small engines that replicas the dedicate to each warning.
00:21:59 [W] Can't wait to each other.
00:22:08 [W] So that's this the one the first advantage of Longhorn design.
00:22:09 [W] So the data Paths of the long form doesn't interfere with any other William. So even one when it went down, there's no way in theory to a like affect any other Wordly rooms or any other engines replicas.
00:22:10 [W] So by doing this we are avoiding to have a highly available engine to create for whole clusters because it's pretty hard thing to do. So instead we have a
00:22:12 [W] All engines that replicas the dedicate to each warning you might ask a question why engine and Rapid cars are running inside those instance managers rather than just starting as a separate part.
00:22:15 [W] In fact for the first few versions of Longhorn. We started nginx replica.
00:22:17 [W] Just like the separate independent part, but later we found out because the engine of the replica take apart count and the communities have a podcast that 110 maximum limit for each
00:22:24 [W] Old. So in fact, it's very easy to hear that comment when you have a wire big note with a lot of warning.
00:22:31 [W] So since the 1600 least we have introduced the engine starts manager and replica is the manager who's are essentially parts and and the engine and the replica in turn. We are going with started as a process instead of part.
00:22:47 [W] So in this way, we are able to hunt we are able to First attach a detached much faster. And also we are now going to have we're not going to take much resources from the main kubernative cluster things every product. I don't know.
00:23:01 [W] I know that I'm going to be like instance manager and the to instance managers and like probably one more managers and some other so it's not going to take like I think four or five parts per node.
00:23:16 [W] Alright, so another so what if the node one went down so you can see as you can see that if the node one went down.
00:23:29 [W] went down. Of course, we're going to lose the pot a Node 1 and the engine replica along with it.
00:23:33 [W] But we still have a replica.
00:23:36 [W] Managers and like probably one Longhorn managers and some other so it's not going to take like I think four or five parts per node.
00:23:38 [W] Alright, so another so what if the Node 1 wind down so you can see as you can see that if the node one went down.
00:23:40 [W] Of course, we're going to lose the pot a Node 1 and the engine the replica along with it, but we still have a replica.
00:23:41 [W] unload be write the note 2. So 2 communities we are going to start a part of a in other node, which in this case Note 3 and the whole day. We're going to ask
00:23:46 [W] For the same volume which is blue and we are going to create an engine for this volume and connecting to the existing replica because we know that and though to there's a still replica available to us.
00:23:59 [W] So in this way, we are handling the we are making the highly available volumes without really have a complicated logic you're handling handling highly available engines.
00:24:13 [W] So that's is the one part of design like make the doses in easy make the halibut.
00:24:17 [W] Aha warning easy in the longhorn. But in fact this loan form can exist and can use this Microsoft service pattern is because of communities.
00:24:30 [W] It's because of kinetics give us the ability to easily start in part and the scheduling around the corner around the cluster and make sure that they can easily be monitored and the handled so we don't need to invest a lot of
00:24:41 [W] So in this way, we are handling the we are making the highly available volumes without really have a complicated logic you're handling handling highly available engines.
00:24:47 [W] So that's is the one part of the design like make the dough seems easy make the Halibut hire a warning easy in the longhorn.
00:24:50 [W] But in fact this Longhorn can exist and can use this microservice pattern is because of communities. It's because of kinetics give us the ability.
00:24:53 [W] 32 easily start in part and the scheduling around the around the cluster and make sure that they can easily be monitored and the handled so we don't need to invest a lot of efforts to manage those microservices.
00:24:58 [W] Those microservices but to realize on the communities on that.
00:25:00 [W] That's also that's also how why not horn is built on top of communities.
00:25:00 [W] So here I want to share a quick demo of Longhorn.
00:25:04 [W] So first you can ask as you can see right. This is the typical Rancher class to up Rancher inspiration with three clusters.
00:25:08 [W] We are going to do the demo using demo and the demo to environment cluster.
00:25:13 [W] So the first and we of course we have no Longhorn stores. So that's do the one-click installation first.
00:25:16 [W] So I go to the apps and click launch, which is essentially launch.
00:25:22 [W] Personal here.
00:25:28 [W] Okay, essentially a launch application and using Helm chart, so we don't need to configure anything and by default we are using the root disk for the storage provider provides the storage and we click we can click launch.
00:25:38 [W] So here as we can see from the workloads now, they are multiple components are starting the first one don't want you.
00:25:50 [W] I already started and the local manager and the driver deployer are going to start. So the driver deployer. In fact is the way for Longhorn to detector users environment and deployed appropriate driver currently is most likely says I'm I'm previously
00:26:02 [W] Old now, they are multiple components are starting the first one don't want you.
00:26:03 [W] I already started and the local manager and the driver deployer are going to start. So the driver deployer. In fact is the way for Longhorn to detector users environment and deployed appropriate driver currently is most likely says I'm I'm previously
00:26:04 [W] Doing in early summer divisions of Longhorn so you can also see that we have the image nginx distributed and to the AV node and the instance manager as I mentioned before I also hear
00:26:19 [W] And to the every note and the instance manager as I mentioned before I also here.
00:26:19 [W] All right, so I think it's still deploying.
00:26:23 [W] Let's take a look at you. I I think should be done very soon.
00:26:29 [W] All right. So in fact you are is ready.
00:26:32 [W] This is a dashboard alone from here.
00:26:38 [W] You can see the overview of your whole cluster and left side. You can see we currently have no volume and a middle.
00:26:47 [W] have some summarization of the was this current stage of the of Longhorn and how many how many space no one can use
00:26:49 [W] Our side you can see the know the status and the going down here.
00:26:57 [W] You can see that we can have the even log and this is also where using the kubernative single log magnetism to provide this part.
00:27:07 [W] So for the next page, we're looking at note page and no page. In fact, it contains both note information and also the disk on the Node so you can see that though the first
00:27:15 [W] Class will clap this small and the first you have see that that you three notes and no no replica has been made made and also the allocation means that this is the total size of the volumes nominal size and can allocate to this node.
00:27:30 [W] To this node, and also on the right side is going what's the real?
00:27:33 [W] What's that real-time disk usage and the signs of what's can be used by Longhorn?
00:27:49 [W] So for each node for each node. In fact, we can click the educator and see the the more details like well do know that this gives and as you can see right now by default.
00:27:56 [W] we are using Wall Live Longhorn to provide storage. So for the warden page, there's nothing right now and for the backup page as you can see that because the
00:28:05 [W] Target's now snapped.
00:28:11 [W] We're not looking we can now see any back up here. So my next thing we are going to be set to the backup Target.
00:28:12 [W] Which are going to point into S3 and then let's go back to the backup page.
00:28:20 [W] So now we can see the backup page has been refreshed and we have see that they have few objects in our backups.
00:28:31 [W] So we are going to looking more look deeply into this later.
00:28:33 [W] So now let me try to deploy a long-form use and deploy your application using Longhorn.
00:28:41 [W] So normally what I'm going to use is the word press.
00:28:44 [W] me set up WordPress password and make sure that you have enabled persistent volume for Longhorn.
00:28:50 [W] and also Merit DB password
00:28:54 [W] and click launch
00:28:58 [W] Alright, so as now the the WordPress is deploying as you can see in the longhorn volumes. In fact, you Williams has been created automatically because of community is talking too long for using the CSI interface and they are attached
00:29:18 [W] Healthy and that's to like look into the details are in fact before that Nats can we can see that from this overview page we can see this is the PVC - 5 5 F c/e something and this
00:29:33 [W] Also the PV name and but you can see more information regarding it's like say what is the PVC name with this PV and also well the namespace is which namespace is using by this used
00:29:49 [W] And also well the namespace is which namespace is using by this used by this PVC PV and which workloads.
00:29:58 [W] In fact, this is the one of the user feedback we have taken and the really works. Well, so this is the workload is attached to the Merit DB and you can see this workloads is to attach to in fact to the WordPress itself.
00:30:07 [W] itself. If you click here you can see that oh this workloads. This warning is attached to the WordPress will deploy.
00:30:13 [W] Moment.
00:30:17 [W] In fact, it's replica set and the deposit state is running.
00:30:19 [W] So now you can see the more information here.
00:30:22 [W] Let's take a look at the volume itself.
00:30:34 [W] So here you can see the UI of the volunteers help page and left side.
00:30:35 [W] You will see all the details of war room and the including Worcester to status and what's the condition and well the warden was attached to and fitness's case is attached to the demo 3 with this block device.
00:30:49 [W] what's the nominal size and was the exercise which is the size that taken on the taken the disc and the
00:30:56 [W] Sigh you can see there's three replicas which is the default in Longhorn and also you can see that this replicas. In fact on the two three different notes and you can also move your mouse in the body blowing horn with this
00:31:09 [W] Is this the data directory here and you can see that these is I exposed X basically the data in fact is store in the Wally blown from replicas.
00:31:23 [W] And that's what I mentioned. If only if you have one disc available in the most worst case scenario, then you can recover food data because every data of this Warden is going to be written here.
00:31:32 [W] Down here. We have snapshots and you can easily take a snapshot and which is of course going to make inside cluster and then you can create a backup.
00:31:41 [W] And the bad cop is being like created and in fact, we are going to create a snapshot first and then ship the snapshot to the backup store. And this is the progress mercy and you can see that the backup. We are going to contain the
00:31:57 [W] You can see that the snapshot is like a zero size because we're seeing positioned but this is that this is the real size of this warning.
00:32:05 [W] And the here you can see the recurrent you can set the recurring Snapchat and back up. Let's do try to set the backup like every minutes for the demo purpose and the return loss 5 and the down here the more even logs which is going
00:32:22 [W] Latest status of this volume if you are looking for some logs and stuff.
00:32:27 [W] All right.
00:32:30 [W] So in fact that set up for the recap recurring back up for another one as well, and that's do you still back have a minute?
00:32:42 [W] And safe.
00:32:54 [W] All right. So in a moment we should able to see that the backup was updated since both backup scheduling should be running.
00:32:57 [W] Okay, that's go back to the WordPress.
00:33:05 [W] Let's make sure that WordPress in fact is working and as you can see right now, this is on the demo and apps and WordPress.
00:33:06 [W] All right, so that's logging.
00:33:10 [W] Make sure that we have right password.
00:33:14 [W] All right.
00:33:22 [W] Let's go to a post.
00:33:25 [W] So here let's add a post called No One demo,
00:33:45 [W] Let's take a look.
