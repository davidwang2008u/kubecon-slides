Open Policy Agent Introduction: AGXY-6747 - events@cncf.io - Tuesday, August 18, 2020 12:23 PM - 51 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:01:06 [W] Welcome everybody to the open policy agent project intro and community.
00:01:18 [W] Welcome everybody to the open policy agent project intro and Community update.
00:06:10 [W] Hey everyone.
00:06:15 [W] My name is Rita is a I'm an engineer at Microsoft and I am one of the maintainers of the gatekeeper project.
00:06:19 [W] And I am Patrick East an engineer at styra and a opentracing are.
00:06:26 [W] Let's talk about the open policy agent originally founded by styra in 2016 as open source donated the cncf and is a Sandbox project in 2018 since then it has grown to become an incubating project in 2019
00:06:42 [W] The on track for graduation the contributor base is pretty diverse.
00:06:52 [W] We've got 30 plus companies which includes both, you know kind of the Upstream Usual Suspects as well as end users contributing back to Oppa. There's with that, you know, a hundred and fifty plus developers.
00:07:03 [W] I think this slide data is maybe even a little old.
00:07:04 [W] I think it's grown since then.
00:07:08 [W] The user base is also pretty extensive. We list a few on here if you check out the adopters file in the open policy.
00:07:15 [W] Agent positive Oriole see that there's a lot of kind of name-brand cncf landscape customers.
00:07:19 [W] so what is Opa why is everyone like this first and foremost at its core you get Rigo it declared of policy language this lets you concisely express policies in a way that lets open evaluate them efficiently
00:07:35 [W] landscape customers
00:07:36 [W] So what is Opa?
00:07:36 [W] Why does everyone like this first and foremost at its core you get Rigo a declarative policy language this lets you concisely express policies in a way that lets open evaluate them efficiently with the language.
00:07:38 [W] You're getting all these built-in functions that help you do very common policy things anything from math or you know handling jots is a very very common use case and authorization as well as giving you a really nice.
00:07:52 [W] A sort of expression like the Syntax for expressing policy sort of logic.
00:07:58 [W] It's you know, it's tailored for that a hundred percent built to be a policy language.
00:08:04 [W] The cool thing is the performance optimizations that you get an Opa are pretty extensive.
00:08:12 [W] Not only can it do things like rule indexing. It can partially evaluate policies.
00:08:14 [W] This means that you can pre-process a policy decision ahead of time and then only process the unknown
00:08:19 [W] Arts at you know actual like authorization check time.
00:08:24 [W] This language we get a runtime which can be used as either a library.
00:08:32 [W] Everything's in golang or you can run it as a server.
00:08:39 [W] So Opa provides a little HTTP server that sits in front of the runtime.
00:08:41 [W] and allows you to basically run it very common as a sidecar a host level demon.
00:08:45 [W] The other thing you get with that server and also available with apis but most people use it with the server or the management apis.
00:09:00 [W] the bundle service bundles basically being a pack of policies and data that you can configure Opa to go pull down and load and use status apis for Opa sending status our logs everybody,
00:09:21 [W] For for authorization.
00:09:25 [W] It's very important that you keep track of.
00:09:27 [W] what decisions were made Opa has a first-class feature for doing decision logging that log service gives you that High Fidelity record of what the agent has actually done as well as Discovery API this
00:09:41 [W] Essentially lets you do Dynamic configuration and policy distribution. It's another bundle of configuration.
00:09:48 [W] The last piece of this puzzle is how do you make those policies?
00:09:56 [W] How do you you know optimize them?
00:09:58 [W] So Opa provides a set of CLI tools for letting you build test check everything you need to do to these policies and the you know, the source code for them as well as Integrations with BS code with
00:10:11 [W] The IntelliJ lots of different editors plus functionality for doing tracing and performance analysis profiling that sort of thing.
00:10:27 [W] The last thing is the playground which I'm actually going to do a demo of and a little bit so I won't go too far that one right now.
00:10:30 [W] so at a high level the open policy agent is basically decoupling your sort of your service whether that's a server, you know some sh, you know Lynn expand module or you know,
00:10:46 [W] Is ones that we Show an example here or Epi authorization specific but a lot of people use it for configuration testing as well, you know, if if you have some policy that you need to apply on a set of structured Json.
00:11:00 [W] Hope we can do that.
00:11:04 [W] The cool thing here is the input can be any Json.
00:11:05 [W] Oh, but doesn't care.
00:11:07 [W] It's general purpose.
00:11:10 [W] agnostic to any sort of, you know domain. So if that input that request is a you know serialized
00:11:19 [W] Tara form template that's fine.
00:11:22 [W] If it's a jot from an API request also fine, you know, it's all up to the policy that you write to, you know, use that input.
00:11:33 [W] So on the bottom half of this diagram here, you have the Rego policy. Of course the data that basically gives you the ability to have external data for Opus
00:11:45 [W] Big and that's because it is in the sense that it can be pretty much anything. You want Opa provides an API to push data into it as well as bundling it with the policies and pulling it in the cool
00:12:00 [W] With the policies and pulling it in the cool part here.
00:12:03 [W] is that this lets you do context. We're aware decisions.
00:12:11 [W] So say you have an API authorization requests coming in you may have a jaw down there with some information about the user but it may not have information about other resources or the ability to connect that user to you know, some
00:12:19 [W] Maybe not listed in the jar. So the cool part then is you can integrate Opa so that the data has available at that time you could have pushed in those those a group permissions or other attribute information.
00:12:35 [W] The last thing here is the policy decision being any Json value out.
00:12:41 [W] So often times you're going to have a Boolean.
00:12:42 [W] Yes.
00:12:43 [W] no was this allowed but that doesn't have to be the case.
00:12:49 [W] It can be a set of changes a set of warning messages.
00:12:49 [W] I think a common case is for kubernative is an admission controller if you wanted to do mutating decisions Opa can return back a set of patches that need to be applied.
00:13:00 [W] Let me show you a quick demo.
00:13:07 [W] I'm going to open up the playground.
00:13:08 [W] Beautiful, okay.
00:13:18 [W] This is the open policy agent playground. The playground is a open public site.
00:13:19 [W] It's hosted by styra.
00:13:26 [W] Everything here is you know ready to run latest versions of opa. Yeah, I think you know, if you're familiar with some of the like to go playground or other things. This is a sort of common language tool
00:13:34 [W] There's some instructions in here when you first open this up basically and recommend anybody who does this read through the sort of read me here at the top crash course into Rego policy syntax this
00:13:51 [W] Crash course into Rego policy syntax this stuff starts with the hash mark is going to be a comment.
00:13:57 [W] So the policy itself in this hello world that you get kind of out of the box with the playground.
00:14:06 [W] It basically is defining a rule that says hello as false by default. And then it's saying that hello is true if the input message equals world.
00:14:15 [W] So we can see over here on the right hand side the input box again kind of fact that diagram the input is any case on the you know, if is long as you can serialize it into Json it can be an open policy agent policy input
00:14:32 [W] I'm the input box again kind of fact that diagram the input is any case on the you know, if it is long as you can serialize it into Json it can be an open policy agent policy input
00:14:34 [W] Case we have message is a field the you know value being world.
00:14:43 [W] So logic of our policy says that hello should be true.
00:14:46 [W] I will click to evaluate and the view the results sure enough. What we find is that yes.
00:14:50 [W] Hello is true.
00:14:55 [W] This is a very basic example. So let me show you something a tiny bit more complex just to give a feel for what these can look like the playground is packaged with a bunch of like example.
00:15:03 [W] These that you can use to get started.
00:15:07 [W] Let's look at a rule-based example again, there's a bunch of information here and kind of you know, getting started that sort of thing we're going to do is jump down and look at the policy itself.
00:15:20 [W] What we've done is we've designed we've we've specified a package. So for each Rego file a complete module as we call them includes a package definition essentially saying this is the
00:15:36 [W] It which all these rules exist we're going to for this example.
00:15:43 [W] We'll be showing a are back for an API authorization use case.
00:15:51 [W] So the rule that we're interested in is allow by default we're going to say allow is false.
00:15:58 [W] sort of saying that if you know unless otherwise specified when we query for app dot are back got allow, you know, it should be false.
00:16:06 [W] When we do want to allow is when the user is an admin the syntax here is essentially showing that you have an allow rule.
00:16:16 [W] That's true. If user is admin is true user is admin here is a rule which is defined down below.
00:16:30 [W] So user is admin is true. If there is some variable I such that data dot user rules at you know,
00:16:37 [W] Up of input dot user at some element I is admin.
00:16:44 [W] So what is all this when we're looking at data this is that external data from that from that diagram that I was talking about.
00:16:52 [W] So you'll notice there's another tab over here A bunch of Json data again anything Json serializable you can put into opa.
00:16:58 [W] Really showing that can allow rule.
00:17:06 [W] that's true. If user is admin is true user is admin here is a rule which is defined down below.
00:17:07 [W] So user is admin is true. If there is some variable I such that data dot user roles at you know, the lookup of input dot user
00:17:08 [W] At some element I is admin.
00:17:09 [W] So what is all this when we're looking at data this is that external data from that from that diagram that I was talking about.
00:17:10 [W] So you'll notice there's another tab over here A bunch of Json data again anything Json serializable you can put into opa.
00:17:12 [W] The user roles key so data that user roles. So user roles.
00:17:15 [W] We can see that they're all keyed by the user.
00:17:15 [W] So we say user roles look up input dot user our input back up here in the input panel is we have users Alice so we can see that under user roles Alice.
00:17:24 [W] See that they're all keyed by the user.
00:17:24 [W] So we say user roles look up input dot user our input back up here in the input panel is we have users Alice so we can see that under user roles Alice.
00:17:25 [W] The user roles we find an admin.
00:17:33 [W] So what that means is there is some I in this expression where we can make this this line 48 and fun and everybody can see that but if this line is true then user is
00:17:44 [W] 148 and finish everybody can see that but if this line is true then user is admin is true and
00:17:46 [W] Allow is true.
00:17:49 [W] So checking that we evaluate this thing. We can see that yes indeed allow us true and we can see that user is admin is true.
00:18:03 [W] So this is just a really kind of, you know, high level example of sort of how you can write these rules and what they kind of look like. I would recommend that everybody try out the playground and also go to the open policy agent documentation
00:18:13 [W] Sort of how you can write these rules and what they kind of look like.
00:18:14 [W] I would recommend that everybody try out the playground and also go to the open policy agent documentation. The documentation is backed by the playground.
00:18:21 [W] So all of the examples and Demos in there you can edit and change and open up in the playground as well.
00:18:27 [W] All right back to slides.
00:18:28 [W] Okay, so we've talked a little bit about what Opa is but how do you use it well, let's take a second and look at the broader ecosystem right now you have policy everywhere whether you know it or not
00:18:44 [W] STD Services you have policy, you know, when did something hit deploy when do rules get wrong when you jobs he runs a for kubernative.
00:18:56 [W] He's container management.
00:18:56 [W] It's obvious.
00:18:59 [W] We have you know in Mission controllers. We have pots curity policies.
00:19:01 [W] We all this other stuff right apis, of course authorization.
00:19:12 [W] That's you know, it's probably the biggest use case around databases filtering again.
00:19:15 [W] Ation, you know what who's allowed to query for?
00:19:18 [W] what data that's the sort of questions.
00:19:24 [W] And then also of course down in this bottom right corner public Cloud, we have terraform shown here, but basically like how do you manage infrastructure and the policies around that so, you know is a user allowed
00:19:35 [W] All of the servers in the cluster probably not you should have a policy for that, right?
00:19:41 [W] So all of these locations have an oppa in a gration point and are prime candidates for it. All of these use cases have been you know, sort of tried and true.
00:19:57 [W] I think the main takeaway here anybody who's interested in using Opa and wanting to use it in any of those those places across the stack go check out the OPA integration Index.
00:20:10 [W] This is a shortened link here if you can see the
00:20:11 [W] Element screenshot.
00:20:15 [W] It's the docks / ecosystem.
00:20:28 [W] This thing is a live list showing you, you know, all the different integration points plugins and other other tools that are built using Opa to allow you to enforce these policies all across the stack in different places.
00:20:30 [W] Want to take a second to call out one of these Integrations.
00:20:39 [W] It's a separate tool uses Opa as a library contest. I think at this point I would guess that most people have at least heard of this in the kubernative use ecosystem.
00:20:50 [W] If you haven't I highly recommend you check it out this thing if you're doing any kind of infrastructure as code or even just like if you if you find yourself using config file,
00:21:01 [W] Hell you you'll find a use for it the end of the day it basically lets you do.
00:21:13 [W] policy tests against config files and this these config files can be anything from kubernative manifest to terraform definitions to you know, it was several others here in this is quote that I took from the readme check out their website
00:21:28 [W] A pretty good.
00:21:37 [W] I think the other thing to call out here is that the contest project has officially moved into the open policy agent organization. So it's now an official part of opa.
00:21:43 [W] So that's that's really cool, you know big shout-out to the the contest maintainers and everybody who's been involved in that project.
00:21:51 [W] It's very popular and with good reason.
00:21:53 [W] But we are at kubeflow Lon virtually.
00:22:00 [W] And so I think everyone here probably is interested in kubenetes.
00:22:06 [W] So let's talk a little bit about kubernative. Use and opa gatekeeper is a customizable kubernative submission webhook that allows us to enforce policies and strengthen governance to extend security and governance in your kubernative
00:22:17 [W] He's so let's talk a little bit about kubernative. Use and opa gatekeeper is a customizable kubernative submission webhook that allows us to enforce policies and strengthen governance to extend security and governance in your
00:22:18 [W] Now, let's take a look at some of the motivations behind the project.
00:22:22 [W] If your organization has been operating kubernative, you probably have been looking for ways to control what end users can do on the cluster and ways to help ensure. The Clusters are in conformance with company policies. These policies may be there
00:22:38 [W] It's and legal requirements or to enforce best practices and organizational conventions often. The need for policy is discovered after your system is already running in production.
00:22:54 [W] So introducing new policies can be dangerous and can often be a breaking change does a new rule break a core piece of software.
00:23:03 [W] Can I bring down the entire staff with gatekeeper? You can preview the effect of policy changes in production clusters to
00:23:09 [W] that impacts on existing workloads.
00:23:12 [W] So here's a timeline of the gatekeeper projects.
00:23:18 [W] In 2017 the V1 of gatekeeper with Q management was introduced and in 2018 Microsoft donated the V2 of gatekeeper to the OPA organization and soon after
00:23:34 [W] super projects
00:23:35 [W] in 2017 the V1 of gatekeeper with Q management was introduced and in 2018 Microsoft donated the V2 of gatekeeper to the OPA organization and soon after
00:23:39 [W] Google styra and many others have worked together to bring the three of gatekeeper project. And now in August 20 20, we are preparing for the project to go stable and
00:23:50 [W] Little bit more about all the changes that have happened.
00:23:54 [W] So let's take a look at how be three works. When when we deploy the gatekeeper project to the cluster.
00:24:08 [W] What happens is when an admission request comes in the API server, then sends a request to the gatekeeper web Hook and the web hook then receives a mission review request and sends the data to Opa
00:24:21 [W] the request data against all the policies that are currently in Opa and once the decision has been made then the data is some back to gatekeeper and then gatekeeper then sends the emission
00:24:37 [W] Or allow to the API server.
00:24:40 [W] and the audit functionality runs periodically in the cluster and the data all the resources in the cluster are then evaluated periodically against all the policies that are currently
00:24:57 [W] Buyer gatekeeper is a dynamic configurable emission controller.
00:25:04 [W] So no reboot is required for any policy updates.
00:25:10 [W] The policies are configured via krm, so that the policies are reusable parametrized to encourage reuse ability for common policy needs.
00:25:20 [W] The project is also built on top of key Builder.
00:25:23 [W] There are some core functionalities of gatekeeper with the validating emission control you can control what in users can do on.
00:25:27 [W] The cluster with the dry run feature, we can gradually roll out new policies so that we can gain confidence in the policies before enforcing them.
00:25:38 [W] We can create referential policies to evaluate new emission request against existing resources in the cluster.
00:25:46 [W] We can buy policies via configuration not code and this can be done by creating conferring templates, which are source code for Rego rules and schema for constraints and their parameters.
00:25:59 [W] And the constraints can then be parametrized and easily configurable by admins. The audit functionality allows us to periodically evaluate resources against these constraints and this allows us to have ongoing monitoring.
00:26:13 [W] It to help us detect and remediate any pre-existing misconfigurations and with metrics. We have permit theism points to provide observability of the state of the cluster and how things are working
00:26:29 [W] Observability of the stay of the cluster and how things are working within GateKeeper.
00:26:31 [W] So since the last Cube Khan in December, we've added a lot of new functionalities to gatekeeper.
00:26:40 [W] So let's go through the list first. We have security audit completed by cncf security audit, and we've addressed all the security concerns as part of that audit, and we've added new ways to exclude namespaces
00:26:53 [W] they're narrow the scope of resources for audit and Mission and sink within the config resources, or you can actually specify at the concern level by adding excluded namespaces as
00:27:09 [W] The constraint and we've added a middle able validating what plug to lock down?
00:27:16 [W] what excluded namespaces are actually allowed to be excluded now with pasta curity policy Sig off has identified the need to decouple enforcement
00:27:31 [W] And gatekeeper is reference now as an alternative to kubernative PSPs and we've added a semantic logging which allows us to get cluster wide violating resources from audit and
00:27:47 [W] within the gatekeeper logs, and we've added some audit enhancements which allows us to Auto resources using Discovery client instead of relying on Oppa cash, and we now have Standalone audit to
00:28:04 [W] component
00:28:06 [W] and we've enabled multipad the plumbing for web hook and we've added Readiness tracker to ensure caches have been loaded before serving traffic and we've removed the dependency on finalizar, 's and so you no longer need
00:28:22 [W] Fine eliezer's when when you need to deploy a new gatekeeper, and we've added the capability to match resource based off objects scope to support cluster scope objects.
00:28:38 [W] Now, let's take a look at a demo.
00:28:41 [W] We've use agile Bank in the past for gatekeeper demos agile bank is in a highly regulated industry and both developers and almonds are unhappy with GateKeeper.
00:28:54 [W] / we want to free up a man's time managing all the policies in the cluster and we want to unblock developers by enable self-serving.
00:29:04 [W] In the past few keep cons.
00:29:10 [W] We've shown you how you can create your own gatekeeper policies.
00:29:10 [W] Today.
00:29:14 [W] We're going to take a look at how to use gatekeeper to create the same behavior as kubenetes PS PS.
00:29:22 [W] It's important to note that kubernative PS PS has denied by default enforcement mechanism what that means is once the PSP a mission controllers enabled without defining any policies. It will prevent any pots from
00:29:32 [W] a cluster
00:29:34 [W] in comparison gatekeeper has allowed by default enforcement mechanism.
00:29:44 [W] So this allows us to gradually throughout the policies test the policies and gain confidence before actually enforcing them.
00:29:52 [W] So let's take a look at how to use gatekeeper to disallow privilege containers from being created in the cluster.
00:29:58 [W] A privilege container is given access to all devices on the host.
00:30:09 [W] This allows the container nearly all the same axis as processes running on the host.
00:30:10 [W] Here as an admin of a job bank.
00:30:20 [W] bank. I want to be able to ensure that no privilege containers are installed in the cluster.
00:30:23 [W] Let's see how we can do that by enabling kubernative pop security policy.
00:30:37 [W] So here in this cluster, I have PSP controller enabled and by default.
00:30:49 [W] I have a privilege PSP that already enables privilege containers in order to disable this Behavior as you can see here.
00:31:02 [W] Next I'm going to deploy this PSP in the cluster.
00:31:09 [W] And as you can see, it is now enabled.
00:31:13 [W] And as a developer, I'm going to try and create poddisruptionbudgets a container that has the privileged security context enabled.
00:31:25 [W] Let's see if this will block me from creating the pod in the cluster and this PSP basically blocks it from doing so
00:31:42 [W] if this will block me from creating the pod in the cluster and this PSP basically blocks it from doing so makes let's see if
00:31:44 [W] I
00:31:44 [W] remove that and make sure that I do not enable dispro budge permission by default and lets me crave the Pod correctly.
00:31:57 [W] So as an admin, I think this is really good.
00:32:06 [W] But what if I want to test this behavior and test it before enforcing it impact users I can use the dry run feature in gatekeeper.
00:32:17 [W] So now in my cluster I already have a keeper components installed and next. I'm going to deploy the privilege container.
00:32:27 [W] constraint template
00:32:29 [W] and next I'm going to deploy the constraint by in a dry run mode so I can test this policy in the cluster before enforcing it.
00:32:46 [W] So let's take a look at what the template looks like as we talked about it before the template actually contains a Rego rules that will be executed by Opa and
00:32:59 [W] Is a mission kubernative gatekeeper and within the Rego?
00:33:10 [W] I'm basically telling Opa that the input review object for all containers and in their containers if the security context Pro, which is enabled and go ahead and disallow it.
00:33:20 [W] So now as a developer, I'm going to try to create a pod with a container with the security context privilege enabled.
00:33:34 [W] And because this is now in a dry run mode. It doesn't actually block any updates in the cluster.
00:33:44 [W] So let's take a look at what a dry run constraint looks like now as we mentioned previously the constraint basically provides parameters to the constraint template and here as you can see
00:33:57 [W] In creating a constraint what the kind he has kubenetes PSU Pro which container which is defined here and I am applying this policy on
00:34:13 [W] And enforcement action is dry run.
00:34:18 [W] now
00:34:21 [W] As an admin. I want to see how many violating Potter action running in the cluster. So let's take a look at the constraint.
00:34:31 [W] And as you can see here, I have total violation to and here are the pots that are running what privilege containers enabled.
00:34:47 [W] So at this point I can actually go and update these resources and I have a pretty good idea of what the impact of this resource looks like.
00:34:58 [W] So I am comfortable with enforcing the policy in the cluster now.
00:35:01 [W] Now I'm going to deploy the constrain again, but not in dry run mode and what this looks like is pretty much the same as before but the differences
00:35:17 [W] An action dry run removed.
00:35:21 [W] Let's see as a developer.
00:35:24 [W] I'm going to try to create the same poddisruptionbudgets.
00:35:47 [W] Is in action and why it was blocked.
00:35:56 [W] So that's a demo to demonstrate how you can use gatekeeper to roll out pots security policies and enforce the security constraints in your cluster and next.
00:36:07 [W] Current status of gatekeeper, it is currently beta and we're working towards moving into stable.
00:36:23 [W] So if you have any feedback issues enhancements or requests, please open it issue or join us on slack or join us in our weekly Community calls.
00:36:29 [W] So here are some potential growth in the future that we're looking at obviously move the project into stable.
00:36:38 [W] des and ensure that is production-ready and we are working on a feature that emit violations as kubenetes events were also looking into mutation and supporting external data and we're also looking
00:36:53 [W] So here are some potential growth in the future that we're looking at obviously move the project into stable status and ensure that is production-ready and we are working on a feature that emit violations
00:36:56 [W] Going Morada functionalities more metrics and more policies so that the communities can share some of the common best practices and more developer tools to help us validate
00:37:09 [W] our policies thanks for coming and we have lots of places where you can come join us talk to the OPA maintainers as feedback feature ideas anything you need first and foremost get Hub is where projects are
00:37:24 [W] Talk to the OPA maintainers as feedback feature ideas anything you need first and foremost get Hub is where projects are hosted and maintained but we do all of our collaboration there.
00:37:31 [W] So check out the projects give them Stars follow them.
00:37:35 [W] Also. The slack channel is very active.
00:37:37 [W] I think all of the maintainers are there every day all day as well as tons of end users.
00:37:44 [W] So if you have questions comments concerns check it out. It's really good starting point for yugabyte.
00:37:46 [W] you
00:37:47 [W] And that's it.
00:37:50 [W] Thank you.
00:37:51 [W] Thanks.
00:37:53 [W] right. Bye.
00:37:57 [W] Okay, I think we're live now.
00:38:08 [W] So we have a little bit of time for questions. Anybody who hasn't posted them already in the tool. Please don't do so now and try to get to Mom.
00:38:22 [W] not, there's going to be a thread in the cncf slack for for this maintainer track so you can go ahead and continue the questions there.
00:38:26 [W] So, let's see.
00:38:30 [W] Thank you for all the questions.
00:38:32 [W] Yeah, it's been good.
00:38:32 [W] It looks like they're already all answered.
00:38:42 [W] a new ones
00:38:47 [W] Okay, here we go.
00:39:01 [W] So without a bundle server, how do you just updating policy in real time?
00:39:06 [W] So that's tricky because we basically recommend you do it with a bundle server the OPA like server by itself does have apis that allow you to push policy to it so you can theoretically do
00:39:16 [W] You have like an external service or something that syncs them you can call and push policies through those apis.
00:39:26 [W] I've also seen people use it can load from the file system.
00:39:33 [W] So if you had them mounted is like kubernative you have it config map or something or even just a volume that has like the the policy files in it.
00:39:40 [W] can mount that and then you know, there's a watch flag or you can restart the service or something but
00:39:47 [W] really like the bundles are the the like main primary supported way to do that.
00:39:53 [W] We go.
00:40:02 [W] I think that should be public in which field see that.
00:40:06 [W] Let's see.
00:40:07 [W] Do you have a best practice regarding a central team publishing policies for cluster maintainers to use Rita?
00:40:18 [W] Is there anything for gatekeeper that you guys have published around that as far as like best practices?
00:40:22 [W] um, I think because I lease for a gatekeeper, right like all the policies are cri-o is so the way you were rolled them out is very much like how you were roll out any custom resources so you
00:40:38 [W] really use like gitops model and you know, as long as you make sure that the string templates and constraints are, you know version correctly and you can always run
00:40:55 [W] And are you know version correctly and you can always run two different policies like side by side right and then switch them out once you're comfortable with the latest
00:41:03 [W] Once you're comfortable with the latest updated policy.
00:41:05 [W] Yeah, I think generally speaking for Opa like gitops is kind of the de facto, you know, like I don't know that we necessarily say it anywhere have best practices but like everybody pretty much everybody keeps their their Rego policies and get
00:41:21 [W] Our best practices but like everybody pretty much everybody keeps their their Rego policies and get and has some sort of automation.
00:41:26 [W] Even if you're using bundles or something else.
00:41:29 [W] Typically that shared place is going to be a git repo.
00:41:31 [W] my questions
00:41:39 [W] All right, so we got time for one more if anybody has anything. If not, feel free to you know can answer them asynchronously on Slack.
00:42:02 [W] Yeah, actually, there are some questions on slack to I might as well just like answer them.
00:42:13 [W] These may be so I just from the bottom up.
00:42:16 [W] I guess I is multi-part the point of gatekeeper still a problem.
00:42:17 [W] No, so we've recently enable multi part of ointment for the web public component of gatekeeper. So now the deployment llamo and their charts the reference
00:42:31 [W] All come with three replica studs out of the out of the box so that you can make sure you have multiple web Parts running in the cluster.
00:42:44 [W] And then it's where can I see some of the use cases to apply Opa? I think there's a bunch of examples right on the open web site.
00:42:57 [W] Yeah, so go to open policy agent.
00:42:59 [W] that workers Google open policy agent should find it.
00:43:07 [W] There's on the the like, you know left navigation thing.
00:43:08 [W] There's a bunch of different sections for like kubenetes Envoy.
00:43:13 [W] They have tutorials and demos and then the
00:43:15 [W] Some page that has basically all the other like integration points that are sort of publicly available.
00:43:22 [W] I think that was all alone.
00:43:35 [W] Yeah.
00:43:37 [W] cool
00:43:44 [W] How are we on time? Yeah.
00:43:48 [W] Well, thank you for taking the time to attend the session.
00:43:55 [W] Thanks, everyone.
00:43:57 [W] Bye.
