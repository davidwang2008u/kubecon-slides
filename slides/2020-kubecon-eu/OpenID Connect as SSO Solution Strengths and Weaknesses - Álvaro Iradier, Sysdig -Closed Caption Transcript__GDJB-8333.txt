OpenID Connect as SSO Solution: Strengths and Weaknesses: GDJB-8333 - events@cncf.io - Tuesday, August 18, 2020 7:45 AM - 82 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:08 [W] Hello. I am already idea from sysdig.
00:00:12 [W] Thank you for assisting to this talk where I'm going to tell you about my experience while implementing open it connect as a single sign-on solution in complex environments, so
00:00:15 [W] The agenda for this talk will be will be saying single sign-on Basics.
00:00:24 [W] Let's eat some Concepts. Then what is openebs econnect?
00:00:26 [W] We will see some typical flow examples how to open a disconnect is similar or different or forward shares from other Concepts like some all over how etcetera why use of energy connect. Let's talk about some reasons then we will do a demo on testing and debugging.
00:00:39 [W] I DC we will create a normal DC client and then I'll share with you a real world example and how to deal.
00:00:46 [W] Complex something kitchen a scenarios how you talk about other caveats found in our brief and finally The Good the Bad and the Ugly about open education it before moving to questions.
00:00:58 [W] So what path single sign-on mean?
00:01:05 [W] it's a very broad concept one definition could be the one in the slide so allow users use a single set of login credentials for multiple applications, which can be related but they are usually independent. Why because you still have to remember this password.
00:01:20 [W] To re-enter them of every application for security you lessen the chances of fishing and reviews password fatty and also reduce password issues for IT Help Desk, and why not?
00:01:34 [W] Well, there is a higher risk for a supposed credentials.
00:01:37 [W] You are saying zettabytes post. All the applications are exposed.
00:01:38 [W] So you should increase the focus on protection for example, using multi-factor Authentication.
00:01:46 [W] And also you convert you turn them single integrated into a single point of failure. So if
00:01:51 [W] If it fails all your applications will fail well and what is open a disconnect? Well, basically it is an identity layer on top of out 2.0 protocol to verify identity delegated to a notification server.
00:02:05 [W] It allows you to obtain and use her basic profile information in an interoperable dressed Jason manner compatible with webassembly mobile apps Etc. Basically in Labs the application side developers authenticate users without taking
00:02:21 [W] Be the office 13 and managing the passwords in the face of an Internet that is very populated with people trying to compromise your users account for their own gain, the opportunity provider can handle the users and passwords and it can delegate to directory services or it
00:02:36 [W] All that providers are then be open it. It's Hamill the cetera example Opa knative providers are Google sign-in Microsoft and many others.
00:02:51 [W] Let's also introduced some open-ended terminology like the Opie they open at the provider, which is the server that performs the authentication as a service.
00:02:57 [W] Sometimes also called IDP identity provider and the relying party RP or simply the client which add sources the user authentication 210 P don't
00:03:07 [W] confuse the client the relying party with the user the relying party or client uses the Opie to authenticate the user.
00:03:15 [W] So why DC works by a set of interactions between the user the user agent that is the browser and the server up again and open it.
00:03:29 [W] He provided. This is what we Define as a flow it works on top of all out to so if you are familiar with it, you might already know there are different flows.
00:03:36 [W] why this in the slide is that the decision code run flow where the client is registered in the open any provider and it can safely store and keep a client ID and client secret, which is used to authenticate the client.
00:03:50 [W] With a provided this flow is typically used by web applications where the client is a back-end server.
00:03:56 [W] Let's explain it step by step.
00:04:00 [W] Browser the you said open Society the back and send some HTML rendered by the browser.
00:04:15 [W] The user is not logged in so it clicks the log in using openid connect battle for example using Google as an opportunity provider that request causes the backend to redirect the user to the authorization and points of the OPA knative
00:04:28 [W] is where they all out or open ID collect dance begins
00:04:33 [W] in this part of the flow the user interacts with the OPA knative provider to get out of the Gated the redirection causes a get request to the authorizing point of the penalty provider and includes several mandatory parameters the response type code tells the
00:04:50 [W] We found transition called Pia a call back. The redirect URI is the URL of the Callback where the authorization code will be sent the client ID identifies the client which must be previously registered in the provider including a list of authorized callback
00:05:06 [W] The scope parameter must always include at least the value openfaas.
00:05:36 [W] Diaz cetera, they openly provider might also ask the user to keep the consent to access its identity information to the client application.
00:05:46 [W] This is the typical confirmation dialog to allow application whatever to access your personal information.
00:05:52 [W] If everything is okay the web server the back end now receives the decision code as I get called back request the state parameter is also included so it can be verified.
00:06:04 [W] Now and this is the characteristic feature of the authorization code flow the back and now talks directly to the old P to exchange the received code.
00:06:21 [W] It sends a post request to the Opie and includes in Flats the code received in the Callback the client ID and the client Secret.
00:06:26 [W] Must you here verify the ID token signature using pki and the Opie provider public key furthermore. The access token can be used from the client to call the user info in point and retrieve additional information.
00:06:51 [W] Now the user is logged in and the back end cancer the front page for the Laureate user with a welcome message or whatever.
00:07:01 [W] Okay, the problem with the code flow is that it requires a server or bucket application which can be stored safely the client secret and this is not valid for some single page applications on mobile applications.
00:07:13 [W] which run the client and the secret could be exposed by checking the code. They compiled in styra.
00:07:24 [W] The flow begins exactly the same in space of a single page application in the browser here.
00:07:35 [W] We could have a mobile application or a desktop application the user request the application to log in with Opa knative collect.
00:07:40 [W] Okay. Again, this is translated into a get request to the authorized and point of the open any provider with similar parameters as the previous low, but this is different.
00:07:57 [W] Step the openid provider authenticate the user with an amine and once the user is correctly altinity cated.
00:08:14 [W] In implicit flow the kullback-- the Callback now includes the access token and they beat okay as part of the Callback URL.
00:08:24 [W] There is no need for the additional exchange step that was in the code run flow.
00:08:32 [W] So now the application has the ID token to verify the identity and could use the access token to request additional information.
00:08:35 [W] Okay, if your goal is just having a unified sign-on experience, then there exist other options, you could simply have a shared use of the be or a directory service like ldap.
00:08:51 [W] So the user only has one username and password shared between all the applications.
00:09:02 [W] However, this might require exposing the directly to the internet for public applications. And if you are using credentials who are using credentials, but the user needs to re-authenticate on every application so we don't have a real single sign-on.
00:09:08 [W] You could also use a hardware based Solutions like a smart cards, but you need to support that in the application which is not easy and like openebs econnect. There are also other token based Solutions where you obtained a token, which is the proof of identity.
00:09:20 [W] For example multiple will have locations under the same domain could share a session cookie.
00:09:32 [W] So you authenticate once and you are a lot in all the applications or get a better us or other take advantage systems authenticate the user and obtain a token that is later used as a proof of identity to access additional Services Facebook connect also
00:09:41 [W] Facebook is very similar to open ad connect, but it is tied to this company. So you must trust Facebook and you might find connectivity restriction in some countries or some environments.
00:09:52 [W] Security assertion markup language or salmon is another protocol which serves the same purpose as opening the connect. It is older based on soap and XML documents and it is mainly designed for web applications with a back-end server.
00:10:09 [W] Suited for other application types, but apart from that it is still valid and working standard. I want to extend more into the differences. You can find some of them in slide.
00:10:22 [W] So open I did connect should not be confused with open ID 1 and open it E2 which are Obsolete and predecessor protocols open idea started back in 2005 as a protocol to provide identity certificates
00:10:40 [W] That zero was widely adopted but it is now deprecated open ID connect is the third generation and it dates from 2014.
00:10:52 [W] 2014. It is much more developer-friendly and broadly used.
00:10:54 [W] And how does open a deacon at compared to All Too Well opening the Kinect is built on top of oil to but our two deals without authorization not without the dedication.
00:11:12 [W] What is the difference? For example, if a stack Overflow once the post in Facebook the user authorizes stack Overflow using oauth stack Overflow of times and access token and users that access token to post using
00:11:23 [W] That is out of the station.
00:11:37 [W] But if a stock and flow of the allows to commend if your reputation is about about think 50 points, for example, then authorization in this case is done in the stack Overflow, but the start of a flow can check the user can delegate the
00:11:41 [W] For example, it can ask Google to identify the user using all to stack Overflow of change. The access token uses the access token to obtain the user identity for example the email and with the email it can check the user reputation and authorize the user
00:11:57 [W] so all to is about getting keys for accessing something while to can be used as a sail though authentication mechanisms in the sense that if you give me a key to access your apartment, probably your department of them,
00:12:13 [W] Self doesn't prove your identity.
00:12:19 [W] So in open ID the key provides access to a document certifying your identity by adding the ID token and user info and point to out to so some people
00:12:32 [W] abusing the standard while to protocol
00:12:36 [W] And how we shop in a deacon it related to Json web tokens.
00:12:45 [W] Well openid connect uses.
00:12:55 [W] Json web tokens as the signed document that contains claims about the user identity. You can use some tools like JWT dot IO to the code and verify the tokens as we will see sir.
00:13:00 [W] So why use of an ID column mainly because it is easy reliable secure and lets you get out of the difficult and dangerous business of a story in managing other people's credentials.
00:13:09 [W] it also makes users lives easier during sign up and registration some strains of opa knative connectors on the slide like it is interoperable secure easy to deploy flexible why support devices and so on so
00:13:24 [W] It's of a story in managing other people's credentials.
00:13:25 [W] It also makes users lives easier during sign up and registration some strains of open data connectors on the slide like it is interoperable secure easy to deploy flexible wide support devices and so on so
00:13:26 [W] Protocol should you use probably if you are developing a mobile application or writing a new application uses the use of IDC in which cases? For example, you have an application which only supports hammer and the identity provider supports Hammer then
00:13:39 [W] I must stick with someone no need to reinvent the wheel here.
00:13:45 [W] Okay, now I'll show you some useful tools to help you the back YDC issues on how it works.
00:13:58 [W] They are listed in here and we will see a couple of them in the demo and also the browser network console can be very useful to check what is happening or some command line utilities like work for this demo the perquisites you need a medical provider where you have a
00:14:10 [W] You have a client ID and the client secret you have allowed the ready like duties in the provider and then in the client, you know the endpoint of the opportunity provider.
00:14:23 [W] So, let's see a demo you seen operating on it, but net and IDC the ballot. So in this demo, what I have done is I have entered the configuration of an open ID provider with the client ID and
00:14:36 [W] Shows me the request.
00:14:41 [W] I'll open the the network console to check what is happening?
00:14:50 [W] And when I click a start I'm going to send a get request to the OPA provider, which we will see in the browser and this will trigger the altinity KC on in the OPA knative provider. So this was the call to the altinity
00:14:57 [W] Join the information the client ID and the parameters are in there. Now. I enter my credentials in the parody provider.
00:15:07 [W] And when I click login I can see there is a call back, right the baby provided is calling the call back and point the redirect URI providing the altinity caption called in there.
00:15:26 [W] So the next step we are using the authentication code flow in here is send a post request from the back end today the oh I VC provider to exchange that code with the ID token and the access
00:15:39 [W] That is that refunds you can see the ID token.
00:15:42 [W] So now in the following step you can take that ID token and you can copy it and use a pool gel-like. JWT iot IO.
00:15:53 [W] You paste the token here and you can see the color information the signature and so on this tool already does that so if you just click verify you can see the token is valid and information.
00:16:08 [W] This was the code flow now, we will check the implicit flow.
00:16:13 [W] So you see no idea silly but there again, I have configured the OPA knative provider in the credentials in there.
00:16:18 [W] And now what I'm going to do is in the response type and removing the code and keeping talking an ID token.
00:16:27 [W] So this is the implicit flow.
00:16:30 [W] This is the get request that we will send you seen the response type. We have token blank ID token and when we send this we can check in the number console. We are going well this time as I was already logged in in the OPA provider
00:16:42 [W] You didn't ask me for the indication.
00:16:47 [W] You can see the response type in the Callback and you can see that the Callback now directly includes the ID token in the URL. So the application can directly get the token from the from the URL.
00:17:00 [W] Okay, and some details of the get request.
00:17:08 [W] Okay, this was the demo.
00:17:09 [W] Let me move on. So open ideas are simple protocol openebs the collect so it can be implemented from scratch but this is useful is not necessary as there are plenty of available libraries some of them certified for implementing
00:17:23 [W] So open ideas are simple protocol openebs, you collect so it can be implemented from a stretch but this is useful is not necessary as there are plenty of available libraries some of them certified for implementing relying party clients
00:17:25 [W] Lions in multiple languages or to implement different open a Deaconess servers and services.
00:17:30 [W] Let's see a python example using the flask framework.
00:17:33 [W] So I won't go too much into the details. But basically we declare some dependencies for flask request and out lift, which is the library implementing open a disconnect. And in the server code. We do some imports and create an outsider of yet with the client
00:17:51 [W] They call him the right.
00:17:53 [W] We need to handle the Cal back the Callback from the OPA knative provider.
00:18:00 [W] Once the user is authenticated.
00:18:02 [W] This is what this function does when you eat that we get the Callback we call Alpha rho dot authorized access token, which will automatically exchange the received code with the ID token and the access token.
00:18:15 [W] this Library already handles the ID token verification and the coding and provides an easy way to access the user info. So finally after the Callback redirect the user to the dashboard page.
00:18:25 [W] We create that login page very simple.
00:18:31 [W] just login button that takes you to the /login route which starts the open a d connect Dance by redirecting the user to the open any provider. You can see the view and the controller.
00:18:43 [W] Okay, finally or - for implementation is just a welcome message in HTML and the Json user information is printed in Rao and the dashboard or the dashboard dashboard controller uses the requires
00:19:00 [W] To make sure that the user is logged in or otherwise, it radiates it to the login page to the login page.
00:19:09 [W] So this was a simple application using a penalty connect really simple.
00:19:15 [W] Now, let's move to our real world example the array all I know about openebs econet was learn during the migration of a set of tools from this internal data center.
00:19:26 [W] You see in the diagram the top left to Cloud infrastructure previously. Most of our tools were in an internal Data Center.
00:19:30 [W] Using ldap authentication against the internal active directory for several reasons.
00:19:40 [W] We started moving different tools for devops teams to the cloud Jenkins Harbor that rice and sweet Etc exposing the active directory to the internet was not an option.
00:19:52 [W] So there was an act or interactive directory was in sync with an Asura activate actually in the cloud also used for external applications as your ID work such an open a deacon.
00:20:03 [W] Provider and we already had several kubernative clusters running another Cloud providers.
00:20:15 [W] also using openebs economically as you also one of our requirement was that all the applications were protected by an application Gateway. So no API or endpoint is exposed to the internet without Authentication.
00:20:20 [W] Let's start with the easy ones the application support in YDC out of the box.
00:20:27 [W] Comfy that allows you to trigger oid see directly from QVC DL by opening a new URL you authenticate in Azure and enter a code and that will add the ID token to your Kube config then the identity
00:20:45 [W] Don't of line This Time ID token in the quick config proves. The user identity identity. The ID token also includes a active directory groups.
00:20:59 [W] So by no means can be done.
00:21:13 [W] And for example, you can bind namespace permissions bell-rope Harbor also supports oid see out of the box, but in the other versions in the time of implantation supporters Were Somehow limited this is fixed now, for example, there was no group
00:21:14 [W] Now is configurable a harbor Alto on boards users.
00:21:24 [W] That means that first time a user logs in it is automatically imported which is good.
00:21:29 [W] But the morning allow the users to set it username which is bad because that is not homogeneous. If you can set and change your own username also, the user claim was hard coded and the username claim in Azure active directory
00:21:39 [W] because that is not homogeneous if you can set and change your own username also, the user claim was hard coded and the username claim in Azure active directory did not match the attribute with an activity directory, but it had the few full user
00:21:45 [W] Watch the activity is an activity 8:30, but it had a few full user name, which was not good.
00:21:54 [W] So why work on a pull request to fix the latter issues and now with the latest version you can skip the embroidery screen and customize the user name player. Also, Jenkins and atlassian sweet have open ID support using different plugins.
00:22:02 [W] So to prevent exposing all the applications to the internet which might lead to security breaches, even if they are in a require internal indication of the requests were prophesied through an ending. So balancer this endings good for Cepeda connect health education before
00:22:16 [W] Internet which might lead to security breaches, even if they are in a require internal indication other requests were prophesied through an ending. So balancer this endings good for Cepeda Connect Health and education before allowing any traffic once the user was authenticated
00:22:19 [W] Traffic once the user was authenticated and while the ending session cookie was still valid requests were proxy through the corner to the corresponding application.
00:22:30 [W] Please notice that both the nginx the balancer and internal application where both altinity KT the user but as the user was already locked in the open educate providers assume there were just a couple of Red X in the browser and the
00:22:40 [W] There's no need to enter the password of the grants epsagon.
00:22:54 [W] The details are complex, but basically nginx reports of IDC in the plus version using out JWT module some JavaScript code and a similar implantation exist using Lua for the open source version.
00:22:59 [W] I provide the links in the slide.
00:23:01 [W] slide. There was an additional challenge in here what happened to connections that were not a TDP they could not use the browser cookies to verify if the user was logged in for this connections like for example is
00:23:11 [W] SSH git clone in the user IP was registered on successful login on endings allowing the command line tools or similar to work transparently.
00:23:21 [W] And finally, what about the tools that deepness report of any disconnect fortunately just a few for example, the instana type next to repository.
00:23:37 [W] Well, we have to make some workarounds next to the student support the IDC, but it has an option for removing remote user token headers where the user identity and groups can be provided in the HTTP request headers as endings is
00:23:44 [W] We can feel those headers from they Takin one proxy in their request. And what about the is onboarding the user must exist for Route headers to work so well, so when the user does the YDC login in endings, we run small script and check the our rest API
00:24:00 [W] Either user does not exist. We create the user using the API and then we use the route headers.
00:24:08 [W] Other caveats that we found is for example, the user migration.
00:24:18 [W] It's not trivial or even not possible to make great the user from the all attributes in the active directory to open a be connect. Not just a matter of permissions which can be automated or scripted but for example in jira and Confluence, we wanted to preserve the user history, and
00:24:28 [W] But also there are other things like non-standard ID token claims depending on the provider or some providers might not include some claims like the email. We recently had a nice Wing sysdig Monitor and secure integrating with an oid see provider because
00:24:44 [W] Also open a v should be done already TPS public IDC providers should have value certificate, but if you are building your own infrastructure, please try to do things right and don't use self sign or invalid certificates.
00:25:00 [W] Also, there is another very complex topic that is the single sign of or single log out because session hand is local to the application. If you log out of the application or you log out of the open any provider, the rest of the applications are not
00:25:13 [W] Pipe is so you need to do some tricks to propagate the log out like having an effort by frame or pollen or whatever and what about security?
00:25:28 [W] Well, it should be safe and having credentials more easily and only in one place is good for security.
00:25:31 [W] But remember if those concerns are leaked multiple tools are being exposed.
00:25:36 [W] So use additional measures like multi-factor authentication also implicit down flow is not very popular because it has it's complicated that has some issues and
00:25:46 [W] now there is a more modern flow the proof key code exchange that can be used for knative or mobile applications.
00:25:51 [W] So to finish let's recap the good openebs econnect is modern easy to use AC to implement interoperable flexible while the supported and can improve security and make your users happier while reducing helpdesk incidents the back
00:26:07 [W] NCIS management to a single service camera is trust and availability single point of failure issues.
00:26:16 [W] So take additional measures like high availability or protect the credentials with multi-factor authentication and the Ugly. Well some implementation and standards are not yet.
00:26:28 [W] Perfect and some applications may not yet support of an idiot on it. So you might need to do some hacks and workarounds but we like challenges then we so thank you very much for assisting this talk and now I'm open.
00:26:37 [W] And for your questions, thank you very much.
00:26:41 [W] Hello.
00:26:47 [W] Hello Ravi model, but also peace you can post or RCS question directly.
00:26:54 [W] And when the time ends we can follow up on this like China. So there are some very interesting questions.
00:27:04 [W] For example, Mark colored pointed out in in the questions that the implicit flow is deprecated and should not be used anymore.
00:27:13 [W] That's correct. I
00:27:15 [W] Still a couple of example of typical flows. They caught flow. The first one is a typical one for web applications and the implicit flow is one which could be used for non with applications for example from by applications. But
00:27:29 [W] Times tonight it have some caveats some security issues.
00:27:37 [W] So there is no alternative. They pick B KC.
00:27:38 [W] That is the proof key proof. Keycode exchanges.
00:27:49 [W] It's a different flow where the untrusted application can generate a code and exchange center challenge to the OPA knative provider and then verify its identity without having to keep a secret where I like the code flow
00:27:58 [W] The I am not 100% sure if all the IDC providers support this flow properly. Also, there are other flows has some other people commented in the questions like the client flow that is intended to direct the authenticate
00:28:14 [W] Open it e providers without interacting with the users and also that is there are other Grand types. Like for example is supported directly by all out note by open 80 like you can provide the
00:28:29 [W] A grand types, like for example is supported directly by all out note by opening the like you can provide the directed the user and password to the identity provider in the request
00:28:35 [W] Password to the identity provider in the request in the request that is sent from the back end.
00:28:45 [W] So in that case, for example, you could omit or don't require the ready direct from the user to the identity provider and ask the password, but this is not safe as you know, you have to
00:28:52 [W] The case you want to keep the the user password, right? The point of open ID is to delegate the authentication completely to a third party provider.
00:29:04 [W] So another question is well, someone noticed that his provider.
00:29:13 [W] He's a provider is not sending the Roll Another necessary details in the talking claims.
00:29:21 [W] Well, this is unfortunately one of the problems I found there is not any standard of what are the claims.
00:29:24 [W] That should be sent in the ID token.
00:29:27 [W] Some providers might include the groups or the roles or they're not and probably you can dig into your provider configuration and to some tuning in there to get the required claims, but sometimes it's like that the not not possible at all.
00:29:40 [W] Some other interesting question, for example, they someone is asking how can I automate the testing of the authentication flow?
00:29:51 [W] Well, it depends what you want to automate as far as I understand you trust on the opportunity provider and if what you want to check is that the behavior of your client application is, correct, then you can try
00:30:05 [W] You trust on the up any provider and if what you want to check is that the behavior of your client application is correct, then you can try a more open a deep provider and just do some automated testing
00:30:10 [W] Opa Navy provider and just do some automated testing some you need testing or whatever to verify that. Your application is sending the request correctly hand in the Callback and receiving the ID token and doing the corresponding.
00:30:21 [W] Verification and so also another question was why the outdoor kitchen and the ID token are different.
00:30:34 [W] I guess in here you mean they let me let me read the question.
00:30:41 [W] Okay, so really wealth is about authorization know that notification.
00:30:50 [W] So usually using the wow, if forget about open 80 what you get is a new pack or baked token, which just is just a key that you handle to a third party resource server to access
00:31:04 [W] Or whatever the difference with the ID token is that open ID adds an extra layer and extension overall out.
00:31:16 [W] So by specifying the open ID scope parameter in the the out step. You also get the ID token and the ID token has meaning it is a Json web token where you can find
00:31:28 [W] Formation and a signature so you can verify so probably the ID token can be used as they allowed access token.
00:31:41 [W] I mean as an opened up is opaque token, but they are different right so
00:31:45 [W] Well, let me check how to use oid see with a trusted party in such a way that it will not require. So many red X for application. It is a problem with user experience as there are 300 units right as I told before
00:32:00 [W] right, so
00:32:01 [W] well, let me check how to use oid see with a trusted party in such a way that it will not require. So many red X for application. It is a problem with user experience as there are 300 units right as I told before the
00:32:03 [W] Getting out indication. So you have to really dictate to the authentication provider.
00:32:11 [W] So the the OPA knative provider authenticate the user and gets back to you.
00:32:21 [W] You could use probably you could collect the username and password or from your application and they really provide it to the openebs provider using the the password run type, but this is not recommended
00:32:26 [W] In-toto open IDs and getting rid of the responsibility of having to collect and managing the user and password.
00:32:36 [W] Okay.
00:32:37 [W] Let me check some new question we have in here.
00:32:38 [W] We are planning to use Azure active directory and I'm Prem kubernative cluster is the lockout supportive on kubernative dashboard.
00:32:52 [W] I really don't know why I know that as you already have has a logout and point.
00:33:01 [W] So probably you could do something on your kubernative dashboard. So when you log out on the kubernative dashboard, it has already takes the user to the log out and point of the open any provider and that could look out the user also, but
00:33:07 [W] Really tricky because you know, you can look out from one application.
00:33:23 [W] You can look out from the open ID provider. So in case the user is redirected to the provider it gets a asks for the credentials again for authentication again, but it is not easy to have a global log out because
00:33:27 [W] Applications that are already locked in I mean, they only delicate the authentication of the user if the session management is managed by every individual application. So in order to have a global log out you will need to coordinate all the applications
00:33:43 [W] God from the provider when you log out from the application and then you could need some kind of polling or notification mechanism.
00:33:58 [W] So every application gets a notification or is aware that the user logged out.
00:34:03 [W] Okay. So what do you think about key cloak for implementing?
00:34:05 [W] No IDC. I haven't tested it thoroughly. But from what I know it was correctly. I mean implements all the basic flows and everything so
00:34:15 [W] Oh, it's good. Why does he provide them?
00:34:18 [W] So how you survived easy for matching machine-to-machine authentication for that?
00:34:24 [W] You have the client flow probably if you just Google open ID client flow.
00:34:29 [W] There is a flow.
00:34:30 [W] I just showed a couple of them.
00:34:39 [W] There are others like the hybrid the pixie the peak AC e et cetera, but the client to client flowmill lows that ready to the backend to talk to the provider and perform the user Authentication.
00:34:43 [W] And okay, let me check if I'm missing anything.
00:34:48 [W] Okay, someone asked identity broken in through token exchanges that not recommended but I don't understand the question. Maybe if you can elaborate more or or we can follow up on the on the channel on the slack Channel because I don't
00:35:10 [W] What do you mean here?
00:35:13 [W] Okay, so I think that's all I all the questions are covered. The me check.
00:35:23 [W] There is a second taking here. Sorry Miss. There was a second page, but I don't know if we are out of we are out of time right? So maybe we can follow up on the slack Channel. Please post just put your questions in here and I'll be glad to try to
00:35:37 [W] Thank you very much, everyone.
