CNCF Serverless WText_Transcript_FCKF-0913.txtG: CloudEvents and Serverless Workflow Updates: FCKF-0913 - events@cncf.io - Thursday, August 20, 2020 8:24 AM - 374 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:01 [W] Hi, welcome everybody. My name is Doug Davis and Timbers with me as well. And we're going to be presenting an update on the cncf service working group in particular focusing on cloudevents and the serverless workflow specification.
00:06:13 [W] Let's go. I'm going next slide.
00:06:15 [W] All right. So obviously the agenda here's two main things update on the serverless working group and in particular the cloudevents itself when you spend maybe a for 5 minutes on that not very long and then really handed over to team over to talk about the workflow specification, which is the main point of this whole presentation.
00:06:30 [W] So let's go on to the next slide and here we go. Okay. So cloudevents now not going to talk a lot about cloudevents is hopefully most of you folks know but for those of you done very quickly, it's just a specification for helping deliver events from a producer to
00:06:44 [W] Sumer by standardizing some color metadata and where you can find them at a data.
00:06:50 [W] That's a that's it at a very very high level.
00:06:52 [W] I'm going to go into more detail about that.
00:06:53 [W] You can read the spec if you need more, but I do want to announce that we have God 1.0.
00:06:58 [W] So that's all great. And it's part of the specification work. We also produced things like transport bindings.
00:07:07 [W] You know, how these these bits a metadata appear on different transports. For example, you see p and QP that kind of stuff also how it appears in different encoding formats.
00:07:14 [W] Things like Json if you want to actually encode your Jason and pay though that that kind of stuff.
00:07:20 [W] We also have a primer that will sort of give a high level overview in terms of the design choices. We made why we made those choices and some insight into our thinking behind some of these things because there are some very interesting choices. You could have made their and finally had some sdks
00:07:33 [W] And these sdks are really there to help you serialize deserialized cloudevents on the wire right? You get nothing that you can do yourself, but sometimes sdks make your life a little bit easier.
00:07:43 [W] Okay.
00:07:52 [W] So as I said this all wrapped up into the 1.0 version specification now, what's next for the cloudevents is two main things obviously now, it's out there 1.0 but people will actually start to use it.
00:07:57 [W] We've had good some good customer feedback already in before he went 1.0, but I want to feel like to wait for the 1.0 label.
00:08:01 [W] So now we have that respect last more customer feedback.
00:08:03 [W] So good, but then we decided instead of just sitting back and waiting.
00:08:11 [W] We're going to start looking at what additional pain points are in the community voted to serverless.
00:08:12 [W] They may want to try to tackle.
00:08:21 [W] And so let's go to go to the next slide and start talking about some of those things are going to be. So if you look at the cloudevents does as I said, it helps get the events from the producer to the consumer and that's all well and good.
00:08:27 [W] good. However, there's a lot of stuff that really needs to happen before you can ask you start setting those events across the wire. Let's hit the next slide and in particular the first step is usually a
00:08:33 [W] Every type of spec that's the step, right?
00:08:38 [W] How do you find out who actually produces the events of Interest?
00:08:39 [W] What are the events of reducing?
00:08:41 [W] How do you subscribe to those events?
00:08:42 [W] You know those kind of things it's more like a hand she can cut them a thing, right?
00:08:47 [W] So that that's something else that we were going to start looking at is a discovery specification for how you can find who you want to actually subscribe to and how you do the subscription hit the next and then after that obviously you have to do the subscription itself, right?
00:08:59 [W] Me to send this describe operation with maybe your filter criteria what events you want where deliver the events to write as it push versus pull tekton Livery that kind of stuff.
00:09:13 [W] So we have another API spec working on that to Define how to actually do a subscription in an interactive format.
00:09:20 [W] Okay, because member the point of all this is to get interoperability and make life easier for people to actually consume these events and sign up to get them.
00:09:23 [W] Okay. So these are all building up to that final step in the process hit the next button to actually deliver the events which goes obviously back to
00:09:28 [W] at events because that is cloudevents is basically the last step in the whole long process.
00:09:35 [W] So as I said, we're going to be looking at these other two specifications discovering subscription going forward to help complete the picture of their ability around event delivery.
00:09:43 [W] Okay, and that's it for the cloudevents side of the house and mainly for the rest of the serverless working group because we're kind of focus on the cloudevents stuff right now.
00:09:51 [W] However, I was an offshoot of the workflow.
00:09:51 [W] I'm sorry offshoot of the serverless working group. We had the workflow spec which Timber when L talk about
00:09:57 [W] Hey everybody.
00:10:02 [W] So serverless workplace Association defines declarative workflows. And their these workflows can be used to orchestrate event-driven and serverless applications serverless workloads currently a cloud native sandbox
00:10:13 [W] level project
00:10:15 [W] So why is it workloads specification needed currently out there? There is a bunch of different workloads solutions are great. Then they work amazing and they do different things but one thing that we have realized, is that when you start as a
00:10:31 [W] They're using this different Workforce or pipes and pipe lines dilute Solutions.
00:10:36 [W] You run into some problems.
00:10:43 [W] You run into some sort of vendor lock issues in both work flow modeling work for infrastructure level.
00:10:50 [W] So once you set up your proper ations, once you set up your serverless applications your functions and you start orchestrating it you want certain container environment.
00:10:56 [W] It's really hard to move into the next door or moving pretty much at all because they're bound to certain
00:11:01 [W] way of defining our Workforce for the workflow model and as well was the arc is struck architecture that the current cloud provider will allow you to integrate with so there's definitely need for a portable and vendor-neutral workloads specification terms of
00:11:16 [W] In terms of our work flow model.
00:11:27 [W] So the overview of the serverless workloads specification is basically we provide a Json schema that defines that this declarative workloads more you can Define your then your workloads in both Jason and llamo formats
00:11:32 [W] And from this schema, then we can create sdks we can create tcks for conformance testing of runtime implementation. So we can also Define different extension points that go beyond just the execution
00:11:48 [W] Antics of workloads is execution such as kpi simulation tracing and things like that.
00:11:57 [W] The overall goal of the specification is to Define Jason EML format based work for models that you can take and move from one time runtime to the next and these runtimes then can run on different Cloud providers.
00:12:09 [W] Lighters or containerd platforms.
00:12:16 [W] So that's kind of like the basic specification goal of the serverless work now serverless workloads specification uses cloudevents a lot and uses it for different types of things for one thing
00:12:27 [W] serverless workloads you did declare your events that trigger or either a consumed or produced during workflow execution up front and they're all declared using the context attributes or the attributes of cloudevents definitions or
00:12:42 [W] The format for same thing. Like if you want to declare their workflow is started by an event or function or a service called the has to be done during workloads accusin has to be triggered by an event and also its results that we have to wait
00:12:56 [W] Then our containing the body of a cloudevents format same thing for decisions during workloads that ution cloudevents can be used to make decisions.
00:13:09 [W] For example Gateway decision to be want to move one way given something or we want to take another way of execution director of our workflow. And the same thing is we use some context attributes from cloudevents.
00:13:22 [W] Events, the cloudevents itself does not define the event correlation, but we can use what cloudevents has in order to Define and further things for example cloudevents correlation.
00:13:36 [W] Which means how do we associate multiple events to the same work for instance?
00:13:37 [W] And how do we actually continue workloads EQ ssion from event that is associated with the current workflow instance that we are that it's waiting currently.
00:13:45 [W] So as far as status and deliverables were currently waiting on version 0.2.
00:13:55 [W] We also have some sdks defining both go in Java and we have the starting to Define some workflow extension points.
00:14:06 [W] So these were extensions have nothing to do with actual execution, but they enhance the work for the definitions to be able to then interact with different types of things like tracing and things like that in the future.
00:14:14 [W] So what's next for the specification we're always doing modeling.
00:14:15 [W] Moments were looking for different projects to collaborate with and to see how we can enjoy efforts and things like that with the community and grow our community. And the same thing we're looking for is some simulation and Trace and extensions at this
00:14:30 [W] So I'm going to go ahead and show you guys a demo, which is the best way it actually shows something. And in this case, this is kind of like the architecture of the demo. It has to do with orders.
00:14:46 [W] So this basically shows off the serverless on the left side. We have different types of users. We have mobile users or users creating new orders on the web and sometimes orders can we can also drove it?
00:14:57 [W] For example drop a file into a directory. So we have two ways of triggering our Workforce one is web-based which will show and one is actually filed based for the file-based.
00:15:10 [W] We have Apache camel that has a roud the listens to a certain directory.
00:15:19 [W] It's going to pick up our file its going to get the contents of the file and actually create a cloudevents for us using the cloudevents as the K that provides which is great.
00:15:22 [W] Now as our broker we're going to use Kafka mess messaging and this event is going to be published on to a Kafka topic is going to get
00:15:27 [W] picked up by our serverless workflow and actually will trigger the workloads instance same thing from webmo by clients. We have a rest service. It gets a request creates the cloudevents.
00:15:57 [W] Our business problems we have in the order.
00:16:02 [W] We have to sum to either get a rule service to say.
00:16:04 [W] Hey, can we order complete this order?
00:16:14 [W] If we cannot we need human interaction? And in this case, we want to trigger a human test service to get a manager approval for this particular order. So that's kind of like what it is and I'm going to exit out of presentation and
00:16:19 [W] and show you guys
00:16:22 [W] The demo. All right one second.
00:16:31 [W] All right, so I have here the application already started and once you started you can go to Local Host 8080 orders.
00:16:43 [W] So this is going to be our orders kind of UI, and I also wanted to show you guys one second.
00:16:49 [W] I wanted to just show you quickly.
00:17:01 [W] I'm sorry.
00:17:02 [W] I forgot to open this beforehand the actual workflow.
00:17:08 [W] So as we said workflows and I'm just going to open real quick the image for it. Alright, so here it goes.
00:17:16 [W] All right.
00:17:20 [W] So this makes more sense to look at on this side here on the left-hand side.
00:17:25 [W] We have the actual Jason.
00:17:30 [W] So workloads can be represented in Json and XML formats and they can be
00:17:34 [W] Alright, so here we go.
00:17:44 [W] And basically what we're doing we have a couple of event definitions, for example, what we show the New Order event and you order is created whenever somebody who either drops a file as we see or creates a rest client request for a new order.
00:17:52 [W] We have some function definitions.
00:17:57 [W] Those are the way ways of interacting with services. In this case. We have a couple of functions defined one from Auto approval which will contact our business rules service and one is our order management approval function.
00:18:09 [W] So which basically is going to call our human Tas service and have a manager approve it so then we go through some states and not to go through everything.
00:18:21 [W] I will show you on the right side the image we first go into a handle New Order State.
00:18:26 [W] This is an event state which means this workflow is triggered by an event as we've seen previously.
00:18:33 [W] We then go into some sort of switch state which are kind of can be represented as gateways. This one is a database which which says, okay,
00:18:36 [W] Function or rule service, which checked if we can auto complete this order says yes or no if he said yes, we can auto complete it.
00:18:46 [W] We just go ahead and go to an approved state which generates a cloudevents for a results which the type of proved or if we need manager approval we go to another state which basically just calls our
00:19:01 [W] Human task service waits for the manager approval and then completes the workflow exact ution sending a cloudevents as a result for whoever wants to consume it in this case our UI.
00:19:14 [W] So let's kind of take a look at the actual how that will work.
00:19:20 [W] Let's try first dropping a file. Here we go. And I will kind of push this down to see that if this UI updates so basically I have a sample order Jason which is just sysdig.
00:19:30 [W] Simple Json that has a buyer product that we buy and the cost of 300 anything under $10,000 is going to get Auto approved.
00:19:42 [W] So let's copy this sample order into a directory that are Apache camel is listening to new orders.
00:19:49 [W] Oh and here we go.
00:19:53 [W] So what we see here under workloads instances is basically that the event that Apache camel the cloudevents has put on the Kafka topic has triggered workloads accusation. And in this case, we have one workflow orders workflow.
00:20:06 [W] Instance and because the cost was under 300 we see here in order decisions. This table right here is going to listen to all the cloudevents with order decisions.
00:20:22 [W] It's picked that up because the workflow has completed execution and send the cloudevents with the results and he says approved. So this is one way of triggering workloads EQ ssion through some sorting integration platform such as Apache Kafka now,
00:20:34 [W] Try doing it via the rest client. So for example this simulates somebody on the mobile phone creating an order.
00:20:42 [W] So let's say I want an order here my address. I would like overnight shipment for a PS4 or the cost me $3,000.
00:20:56 [W] So when I create this again rest clients is going to create a cloudevents code onto a Kafka topic or workloads is going to listen to it and because of the cloudevents
00:21:04 [W] He's going to actually create an instance of the workloads. So when we create this couple of things happen number one, if you under if we see under workloads dances, we have created a new order workflow instance, but instead of completing.
00:21:19 [W] It is currently active.
00:21:22 [W] What does that mean?
00:21:26 [W] So you remember steps we go through rules service.
00:21:28 [W] We called it a said hey, can we order to prove the cost is mm. So the rooster is is no thanks. We need manager approval and now our workloads come to the step where it called our human decision service.
00:21:41 [W] We see here it stayed ready and why is it ready?
00:21:45 [W] Because here we have a manager approval to deal with hear your you when you're developing your services you can put
00:21:49 [W] Send an email out to a manager whatever you like to do, but for the sake of this demo, we show it all on one page.
00:21:58 [W] So here you're a manager you can approve and deny and you can see here the order ID the task ID there should match here as well. The order ID should match our active one and let's say okay for PS4 $3,000 is way too much this probably
00:22:11 [W] With this order anyways, so I'm going to deny it when I deny it we see there are workflow instances went from active to completed. Our human test decision manager approval went from ready to complete it because we denied this order
00:22:26 [W] And the workflow before it finished execution is send out the cloudevents with the results of denied which was the manager approval idea. So that's kind of it for this demo.
00:22:39 [W] And let's go back to presentation mode if I find out.
00:22:45 [W] Alright, so thank you guys very much for listening to us. And this talk here. You have more information about the cloudevents project project in the serverless workloads projects.
00:23:04 [W] If you have any more questions, feel free to contact us at any time and thank you guys very much.
00:23:07 [W] All right.
00:23:13 [W] I think we're live now.
00:23:15 [W] So let me go ahead ask him some questions.
00:23:18 [W] We had a chat going on here.
00:23:22 [W] So Tom asked can you talk about the adoption of the specification itself?
00:23:23 [W] What kind of traction you getting?
00:23:26 [W] Yeah. Thanks for the question.
00:23:27 [W] First of all, we're a fairly new project.
00:23:33 [W] We're working pretty hard to increase. Our community right now is a big adoption at Red Hat as far as business your donation goes there we're using that and
00:23:39 [W] If implemented and are continuing to enhance the runtime to cover the entire specification all the parts of it.
00:23:49 [W] So we're using a definitely there.
00:23:53 [W] Sure of a lot of companies that have shown interest but I haven't gotten to go from them to kind of say the names but we're also in addition to the community and companies involved also working with other cncf projects that deal with ci/cd.
00:24:04 [W] CD and pipeline Solutions as well.
00:24:10 [W] So we have a lot of people looking at us a lot of people are interested.
00:24:20 [W] But right now as far as the runtime goes that I can say actually it's a it's the redhead business automation that we're we're definitely going to use it and have already implemented big parts of the specification as well.
00:24:25 [W] And that's all open source, and you guys are free to use it as well there.
00:24:28 [W] Alright, so another question. This one's from Alexis wouldn't serverless workloads ascription as a central piece make it hard for a team to collaborate in a non mono repo setup.
00:24:40 [W] I think that's another question.
00:24:43 [W] I think serverless workloads really fits their perfectly what's happening right now is especially with business automation before you have the big monolith type of our architecture.
00:24:53 [W] So we had huge business processes that kind of represent. The state are the picture of what's actually going on in your application or applications right now with the different architectures with a micro service with the containers with the cloud
00:25:07 [W] Forms, you have to not only worried about the applications that you're developing. But you have to a lot of times invoke services that you are outside services in our part of your company at all and the problem.
00:25:22 [W] used to be were business processes type of applications used to be that and provide you a declarative way to see that and develop that but now it's really becoming in our new environments the orchestration workflows
00:25:38 [W] The end of the day it's the orchestration workloads.
00:26:00 [W] I mean, you're a good answer that but from what I said it to you in your performance overhead whatsoever.
00:26:09 [W] And it actually helps out a lot.
00:26:11 [W] can use a whole bunch of different messaging providers hold different protocols and stuff like that and they will also
00:26:19 [W] The specification really saves a lot of time actually in development.
00:26:24 [W] overheads, you know the book are doing
00:26:30 [W] Yeah, so for my pump from the cloudevents side of it the goal of it was to make sure that there really was no performance impact, especially if you're using what we call the binary mode where you just take an existing message and you add a couple of it's a couple extra bits of extra metadata.
00:26:45 [W] So for example in the hcp case just extra HTTP headers the overhead of adding those headers or checking those headers should be minimal at best.
00:26:54 [W] That's the Hope. Anyway, I'm glad to hear that you haven't seen any performance issues yet.
00:26:54 [W] So that's all good.
00:26:58 [W] Okay another question from Persia in your demo. Is it correct to say that each in-toto?
00:27:00 [W] Immediate state receives a cloudevents and sends out a cloudevents.
00:27:09 [W] It's our Eventing architecture.
00:27:16 [W] So you might have applications.
00:27:17 [W] They are fully event-based. We might have applications where there are not and we make sure that we cover both events as far as serverless workloads execution have many places for example, starting workloads continuing workloads publishing workloads
00:27:31 [W] Transitioning based on workloads enduring doing database decision based on the events payload that we receive so you can do all of these things.
00:27:43 [W] But again, you can use the serverless workloads specification outside of an event-driven architecture and as well, so you can just simply transition just like for example, I ci/cd and pipeline solution from one state or one task to the next without
00:27:57 [W] Using events at all. So you can cover use the specification and its markup for a lot of different use cases again, both event-driven fully event-driven orchestration of services or microservices as well as
00:28:11 [W] If you're having just a straight Stitch very structured execution of services that you want to orchestrate.
00:28:21 [W] Okay, we're waiting for questions to come in. I have actually one for you.
00:28:27 [W] Can you talk a little bit about the next release and maybe some of the highlights of what you expect to see in it? And when the release is going to be? Yeah, definitely we're looking for this month to releases as the video said 0.2. We might be changing the versioning number a little bit here and there but
00:28:41 [W] Definitely working on a release. We are working hard to to actually get up.
00:28:48 [W] I'm Grace.
00:28:55 [W] We've done a lot from 0.1.
00:29:05 [W] There is a ton of stuff on our website on our GitHub. You have you can read our roadmap and the has every little detail. But as far as the big things we've add event driven gateways.
00:29:10 [W] we have changed a lot on function definitions were for example, we service workflow.
00:29:16 [W] Specification you can Define functions as far as invoke an MVA URI for example rest call or an RN and things like that.
00:29:31 [W] But right now what's happening is a lot of these services are not exposed and can only be triggered via events.
00:29:35 [W] So one of the things we have added to the specification is to be able to do that as well.
00:29:43 [W] For example, if you want to trigger service or a chain of services you can actually send out an event and then wait for a results event to arrive rather than having every service in love.
00:29:49 [W] Nation done via specific exposed URL or URI, for example, so we have we're constantly adding things.
00:29:54 [W] We're looking for Community contributions.
00:30:01 [W] So if you guys are interested, please check us out and you know, we have bi-weekly calls as well Community calls and and there followed the cncf rules and guidelines and code of conduct. Of course.
00:30:09 [W] Worried about their and and yeah, well, hopefully hope to see you there in the meetings as well and then be active and yeah, right sometimes I see I don't see any other questions.
00:30:21 [W] Anybody listening any one type of question? Otherwise, you may wrap it up a little bit early.
00:30:28 [W] Okay, I think that might be it then so doesn't just a quick reminder for everybody.
00:30:45 [W] We will be hanging out in slack Channel. I think the selection over this one is to - Coop contest maintainer.
00:30:50 [W] If you have any further questions that you wish to ask you to one of us will be hanging out there for about 15 minutes or so. But this one really quick reminder very cool.
00:30:55 [W] Demo team are I love that every time I see it.
00:30:55 [W] It's really cool.
00:30:56 [W] I enjoyed that.
00:30:57 [W] Thank you so much.
00:31:01 [W] All right.
00:31:02 [W] Thank you everybody.
00:31:02 [W] Thanks everybody.
00:31:04 [W] Enjoy cuckoo.
