SIG-CLI - Open Doors: VGDO-2060 - events@cncf.io - Tuesday, August 18, 2020 7:41 AM - 84 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:04:17 [W] Good morning.
00:04:19 [W] Good afternoon.
00:04:21 [W] Good evening, depending on where you are.
00:04:23 [W] This is how we greet each other during our bi-weekly 6 Eli meetings and today it is my pleasure to welcome you on the 60 Li open doors during Cube Connie you virtual.
00:04:35 [W] My name is Matt Jay and I'll be your host today.
00:04:39 [W] So what is 6 CLI and what are our main goals that we that we take care of? So the most important mission for our
00:04:53 [W] special interest group is ensuring that the cube cattle which is a command line interface to kubernative Cluster is working properly has the necessary features as well as we are ensuring that all the
00:05:08 [W] Security problems and every single issue that the users are reporting to us is being actively worked on.
00:05:18 [W] Aside from the cube cuddle itself.
00:05:23 [W] There is a bunch of other sub projects that we are looking after the CLI runtime is a library that is helped that provides helpers for writing Cube cuddle plugins one example is symbol CLI plug-in,
00:05:38 [W] Uses CLI runtime and of course que Cara itself is the primary consumer of the CLI runtime.
00:05:48 [W] We had three sub projects that our special interest group is looking after one of them is customize which allows you to customize free without any templating engine row young kubernative
00:06:01 [W] To shape them per your needs per environment. There's also crew which is a
00:06:09 [W] Cube Cottle plug-in manager and along with that there's a crew index that has all the plugins available for users. And finally there is a graphical user
00:06:25 [W] That has all the plugins available for users. And finally there is a graphical user interface.
00:06:33 [W] It's an add-on on top of the cube cuddle which presents the results that you keep cattle dust and a more graphical user friendlier way.
00:06:37 [W] six Eli has three person that are in charge of the Sig we have to system technical leads which are responsible for leading the technical and advancing the technical side of things for our sake
00:06:53 [W] Self and filled with drock on top of that. We have two people that are responsible for organizational side of things and that will be again myself and Sean Sullivan this time I've
00:07:09 [W] Two people that are responsible for organizational side of things and that will be again myself and Sean Sullivan this time.
00:07:10 [W] I've attached both GitHub handles and as well slack handle. So if you want to reach out to any of us feel free to do so and kubernative slack, which I'll be posting links to
00:07:23 [W] Both gethub handles and as well slack handle. So if you want to reach out to any of us feel free to do so and Gratis slack, which I'll be posting links to as well as
00:07:25 [W] Yes.
00:07:27 [W] Our special interest group is meeting bi-weekly on Wednesday.
00:07:35 [W] It is 6 p.m.
00:07:39 [W] In the European time, which is 12 u.s.
00:07:43 [W] Eastern and 9 a.m.
00:07:44 [W] U.s.
00:07:45 [W] Western time.
00:07:48 [W] You can find us on the 6cl eyes kubernative slack Channel and there we also have a community is - sick - CL I Google group where we answer all the questions that people might have
00:07:57 [W] With regards to any of the projects that I mentioned before.
00:08:02 [W] With the main information about the organizational information about our sick out of the way.
00:08:15 [W] Let me jump to answering a few of the top asked questions that we are as touring throughout the lifetime of our sick.
00:08:23 [W] So the main topic that we are currently working on for probably two years now is moving kubevirt Cube cattle to a staging repository.
00:08:37 [W] You might be probably wondering what is staging.
00:08:38 [W] So let me show you how the kubernative main repository looks like. If you go check out on GitHub page the light out of a kubernative main repository you'll notice that there is a
00:08:54 [W] Terry that is called staging the staging directory contains a set of libraries that are being then published using the Gratis publishing boat to separate repositories the goal.
00:09:10 [W] Of this exercise is to ensure that all the libraries all the sub-packages of the staging directory.
00:09:22 [W] do not rely on the internal packages from within the main kubernative Repository.
00:09:27 [W] This is needed so that at some point in time each or hopefully all of those represent areas will be eventually split out of the main kubernative represent.
00:09:41 [W] Very Cube.
00:09:46 [W] Caudill is probably the first one to be extracted out.
00:09:54 [W] And the reason that we want to have Cube God elects trout about it is that we would like to be able to move faster and release more frequently Cube cattle with
00:09:57 [W] Excess as well as with new commands to work and improve your experience working with a kubernative cluster.
00:10:06 [W] So you might think that since keep cattle is already in the staging represent staging directory.
00:10:19 [W] It is almost outside of the community is represent area, and it should be as easy.
00:10:21 [W] Well, not quite unfortunately.
00:10:25 [W] There are two commands off to be exact auth reconcile and convert that are stopping us from being moved entirely to the staging Repository.
00:10:37 [W] The first one to be extracted out and the reason that we want to have kubectl X trout like about it is that we would like to be able to move faster and release more frequently Cube cattle with fixes as well as with
00:10:41 [W] Even though it relies on the internal API of the communities and will not be able to move outside of kubernative kubernative repository.
00:10:56 [W] We decided a couple versions back and we deprecated that command. So it won't be part of a kubevirt coupe cattle command anymore. Well, what we will do is we will turn the convert command into a cube cuddle
00:11:07 [W] And we'll be still built out of the main communities represent Terry.
00:11:13 [W] With all three reconciled the situation is slightly more complicated auth reconcile shares a pretty big chunk of code with the API server.
00:11:28 [W] And unfortunately, we cannot.
00:11:29 [W] Copy this code over to cube Colour repository because we might be in danger of getting out of the sink with the main pieces of the code from within the communities represent. Sorry thankfully with then.
00:11:45 [W] The past couple weeks we've managed to agree on creating a shared library for this piece of code So within the next couple of weeks, we will start moving the shirt like auth code
00:12:00 [W] Library, and hopefully if everything goes well by the end of this year, we will be able to fully migrate Cube caudal to the staging Repository.
00:12:13 [W] The next question is that we are being frequently Asked is why Cube Caudill is using such an outdated customized.
00:12:29 [W] We have some probably one point something version when currently customized is at version 3. So the problem that I just described about the moving to staging repository
00:12:40 [W] Being frequently Asked is why Cube Caudill is using such an outdated customized.
00:12:41 [W] We have some probably one point something version when currently customized is at version 3.
00:12:42 [W] So the problem that I just described about moving to staging repository the dependencies that we have.
00:12:44 [W] have. This is the reason that we cannot vendor or upgrade to newer version of customize a newer version of customized
00:12:50 [W] Live on the same libraries that the cube cuddle depends unfortunately due to how customized is being built.
00:12:58 [W] We cannot update those dependencies.
00:13:04 [W] So there is a work that has to happen on the cube cattle side. And this is the move to staging as well on us on the customize sighs side So currently Jeff Ragan and his team are working hard
00:13:15 [W] I've customized rely on the same libraries that the cube cuddle depends unfortunately due to how customized is being built.
00:13:16 [W] We cannot update those dependencies.
00:13:17 [W] So there is a work that has to happen on the cube cattle side. And this is the move to staging as well on us on the customize sighs side So currently Jeff Ragan and his team are working hard
00:13:18 [W] Ask the necessary bits so that we are able to soon upgrade customized within the cube kado for now. We are encouraging everyone to use the Standalone customized binary.
00:13:32 [W] the next topic that I wanted to cover is
00:13:39 [W] how a regular Cube cattle command looks like we are being frequently approached by New Commerce people who are interested in contributing to Q 2 Cube Cottle to six CLI, and the first question that we need to answer
00:13:54 [W] Cubicle command looks like of course. What I'm going to describe in a minute is almost ideal of a situation for a command and you'll probably notice that some command do not follow
00:14:10 [W] But we are on the long journey towards improving all the commands and applying the same patterns to the majority of the commands.
00:14:22 [W] So if you look at
00:14:25 [W] any of the commands and I'll show you examples in a bit. You'll notice four elements of every command that will repeat throughout the commands.
00:14:42 [W] There will usually be a options structure which will hold all the flags all the necessary helpers for that particular command to work.
00:14:50 [W] For example, annotate could annotate command will have annotate options structure.
00:14:57 [W] Label command will have label options structure and so on and so forth.
00:15:04 [W] As a accompany the structure will be accompanied by three or sometimes two methods.
00:15:13 [W] First of them will be complete the complete method is responsible for filling for filling in all the necessary bits for the command to work.
00:15:22 [W] that will be creating clients necessary for a command to work. It will do additional formatting for arguments that are being passed and so on and so forth.
00:15:34 [W] Structure will be accompanied by three or sometimes two methods.
00:15:40 [W] First of them will be complete the complete method is responsible for filling for filling in all the necessary bits for the command to work.
00:15:41 [W] that will be creating clients necessary for a command to work. It will do additional formatting for arguments that are being passed and so on and so forth then there is the next command.
00:15:43 [W] The next method which is validate and the validate is optional it can or it doesn't have to it will obviously depend on the command.
00:15:52 [W] So validate is responsible for ensuring that the structure is properly filled with all the options that are necessary so that the actual command can succeed
00:16:02 [W] It is responsible for ensuring that the structure is properly filled with all the options that are necessary so that the actual command can succeed.
00:16:03 [W] Finally.
00:16:09 [W] There is the run and run is where the logic the meat of the command actually resides.
00:16:13 [W] So let me quickly go through and annotate command, which is
00:16:17 [W] A perfect example of such a of a nicely structure at command.
00:16:27 [W] It's not the shortest one. You will find shorter commands, but I figure out that I'll pick something from a from a from the middle of the spectrum from super easy to super-hard commands.
00:16:40 [W] you see there is annotate options and at the annotate options has print flags as functions responsible for printing objects for recording as well all the command
00:16:55 [W] Slack so if you type Cube cuddle annotate - help you'll notice that all the flags that ER here. You can easily map them to particular flags on the command line and
00:17:11 [W] um, there are a bunch of helper methods such as annotation resources a bit resource Builder and iostream is being injected into the structure and these are necessary
00:17:27 [W] Says a bit resource Builder and is dreams being injected into the structure and these are necessary for the annotate command work properly.
00:17:30 [W] So usually we try to create a new annotate options or a new your strut your command options method which is responsible for returning a properly
00:17:46 [W] Soren you your strut your command options method which is responsible for returning a properly defaulted annotate options structure and you'll notice the same pattern
00:17:51 [W] To the majority of the commands.
00:17:58 [W] It's very useful when you try to embed one command and the other one and then a perfect example of that one is the weight command and I'll leave that one to
00:18:10 [W] And that one command and the other one and then a perfect example of that one is the weight command and I'll leave that one to to you to investigate on your own.
00:18:12 [W] when we create each command, we inject all those bids we wire the flags with necessary structure options and
00:18:28 [W] We add it to we build the the Cobra command. And Cobra is the library for building golang CL eyes, and we are heavily using that.
00:18:41 [W] So let's go through the main three methods that I mentioned at the beginning the complete as you see here.
00:18:53 [W] The complete method is responsible for creating the clients here Dynamic and Discovery clients.
00:18:59 [W] It is responsible for wiring and properly reading the record flags for creating the printers.
00:19:04 [W] And as well as reading the information about the dry the dry run flag.
00:19:10 [W] Next one is the validate method the valid as I mentioned before is ensuring that there are no conflicting Flags past together or in case of a local it is verifying the file names.
00:19:27 [W] a dry run it verifies that
00:19:30 [W] the proper values are being passed.
00:19:35 [W] It is ensuring that enough amount of annotation is being passed. It is validating The annotation values themselves.
00:19:43 [W] And upon an error it obviously returns and their to the user.
00:19:52 [W] Finally. There is a run and here run is using a resource Builder and resource build their is part of the CLI runtime library that I've mentioned at the beginning of this presentation,
00:20:05 [W] Ink a resource Builder and resource Builder is part of the CLI runtime library that I've mentioned at the beginning of this presentation.
00:20:06 [W] Which allows to either read files from your local directory or it allows you to easily work with the resources that are present on the server?
00:20:18 [W] Here we are properly wiring all the flags to the Builder and then we are invoking something that is called a visitor. So for each of the resources returned from the Builder from the
00:20:33 [W] We are properly wiring all the flags to the Builder and then we are invoking something that is called a visitor. So for each of the resources returned from the Builder from the resource Builder
00:20:35 [W] We are we are applying the annotate The annotation that the user passed us.
00:20:43 [W] So with this, I hope that you'll have at least a little bit of experience how a properly shaped Cube cuddle command looks like and this will help you too.
00:21:02 [W] To submit your first pull request to the kubernative Repertory specifically to cube coddle itself.
00:21:19 [W] There are a couple issues that are very good or that are long long journey issues that I pointed here and the to our first one
00:21:27 [W] Of there are a couple issues that are very good or that are long long journey issues that I pointed here.
00:21:29 [W] and the two are first one is removing generators from Cube cuddle create commands and if you're interested in working on that the issue that I'm pointing here.
00:21:37 [W] Has links to their current work that has been done and all the necessary that needs to happen in the in the next couple of weeks or even months also.
00:21:51 [W] Zero and Arielle are responsible for for that particular work.
00:22:04 [W] So it would be good to sync with these two if you're interested in helping with this work.
00:22:10 [W] The next one is something that I was presenting just recently on up one of our six CLI meetings and it requires to be able to work with local.
00:22:21 [W] We have a code and Cube Cottle.
00:22:22 [W] That is being deprecated for quite a while.
00:22:30 [W] We would like to be able to remove it. But unfortunately upon removal that piece of code.
00:22:32 [W] Though local flag stops working all the details are in the issue and we are working with someone and we are looking for someone that is interested in in pursuing that particular issue.
00:22:47 [W] List, I'm hoping to create some kind of a spreadsheet with contacts and links to those particular issues.
00:23:12 [W] So if you're interested in make sure to subscribe to kubernative 6E like Google group and watch out for an email from me.
00:23:16 [W] Additionally every four weeks on Wednesday at the same time that I mentioned our main 60 Li meeting is which is 6 p.m.
00:23:29 [W] Central European Time or noon u.s.
00:23:34 [W] Eastern or 9 a.m. You as Western we are meeting and we are going through all the poor requests as well as box and we are either helping to assign them to particular.
00:23:47 [W] Viewers or be our closing with explanation whether it is working or it is working as a design or it should be a fixed during that box crop.
00:24:02 [W] Everyone can pick up bugs that they want to work on and the next meeting will be happening on August 19. So you are more than welcome to join that that meeting I would like to close my
00:24:12 [W] With again the dates for when we are meeting where to find us on the community six Eli slack Channel as well as the email group.
00:24:28 [W] I'm hoping to see on one of the are one of our next sick meetings.
00:24:34 [W] If you have any questions, feel free to reach out to me. You can either slack me or find me on GitHub, although I prefer slack its
00:24:43 [W] faster to get me there and thank you very much and enjoy the rest of the cube Khan.
00:24:50 [W] Welcome everyone.
00:25:00 [W] There was one question and the chat that I have already answered.
00:25:09 [W] Jeff cleric was asking about Sig that Kate's that I owe allí es and to shortly Bill and top on top of that the Alias is that you'll notice within the kubernative
00:25:19 [W] On top of that. The alley s is that you'll notice within the kubernative repositories such as K Ty o 6K Tayo the majority of them are used for go packages.
00:25:30 [W] So six that's Kate's that I owe actually is being
00:25:34 [W] it's being directed to GitHub.
00:25:39 [W] com / kubernative - 6 and this is where your find all the repositories such as customized or CLI runtime that we mentioned.
00:25:51 [W] Whereas the main case that I owe it's pointing to the main kubernative kubernative surface ettore.
00:26:03 [W] There was also a typo and the presentation probably there should be six that's K that case that I owe as well Arthur was a typo with regards to crew cut crew and Dex and not kewl
00:26:13 [W] Naser pituitary there was also a typo in the presentation. Probably there should be six that's K that case that I owe as well aren't there was a typo with regards to crew cut crew and Dex and not
00:26:15 [W] Does anyone have any other questions?
00:26:18 [W] Okay, I'm not seeing any questions being asked directly.
00:27:06 [W] I'll be definitely available on slack for the next at least an hour or even more.
00:27:11 [W] So feel free to ping me Nancy created a threat for this particular session.
00:27:19 [W] So I'm there or you can directly ping me on this cncf slack Channel and I can answer all your questions with regards.
00:27:26 [W] The sexy like you cuddle and the sub-project that I was talking about a minute ago.
00:27:33 [W] Thank you very much. Enjoy the rest of your the rest of the cube Khan.
00:27:38 [W] Okay, I'm not seeing any questions being asked directly.
00:27:46 [W] I'll be definitely available on slack for the next at least an hour or even more.
00:27:47 [W] So feel free to ping me Nancy created a threat for this particular session.
00:27:48 [W] So I'm there or you can directly ping me on this cncf slack Channel and I can answer all your questions with regards.
00:27:49 [W] The sexy like you cuddle and the sub-project that I was talking about a minute ago.
00:27:50 [W] Thank you very much. Enjoy the rest of your the rest of the cube Khan.
