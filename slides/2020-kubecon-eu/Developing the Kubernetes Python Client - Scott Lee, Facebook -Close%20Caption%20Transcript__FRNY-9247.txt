Developing the Kubernetes Python Client: FRNY-9247 - events@cncf.io - Tuesday, August 18, 2020 11:36 AM - 59 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:03:32 [W] Hey everyone.
00:08:29 [W] My name is Scott. And in this presentation developing the kubernative python client.
00:08:34 [W] I'll be talking about how the python client is developed a little bit about myself.
00:08:38 [W] I'm assistant engineer in the kubernative. Python client is one of the areas and kubernative.
00:08:44 [W] I contribute you in my free time.
00:08:49 [W] I've been involved with the python client for about a year now since last summer and I found it was a great way to start contributing to kubernative. He's at the time I wasn't comfortable with gold.
00:08:55 [W] So it was a good way to still contribute in a technical capacity.
00:08:59 [W] the expectation for the viewers of this talk is to understand The Primitives of kubernative is so you should know about and understand pods deployments and so forth and have at least some experience interacting with the kubernative cluster through Cube CTL also,
00:09:17 [W] The kubernative python client I'll be talking about how the python client is developed.
00:09:18 [W] A little bit about myself.
00:09:19 [W] I'm assistant engineer and the kubernative python client is one of the areas and kubernative.
00:09:20 [W] I contribute you in my free time.
00:09:21 [W] I've been involved with the python client for about a year now since last summer and I found it was a great way to start contributing to kubernative case at the time.
00:09:23 [W] I wasn't comfortable with going. So it was a good way to still contribute in a technical capacity.
00:09:24 [W] The expectation for the viewers of this talk is to understand The Primitives of kubernative Ace. So you should know about and understand pods deployments and so forth and have at least some experience interacting with the kubernative cluster through keep CTL also.
00:09:29 [W] To talk is about the kubernative python client basic understanding of python would be helpful.
00:09:30 [W] In this talk, I'll briefly go over some background about kubernative discuss the available clients and why they're useful and I'll go through set up for examples as well as demo some examples and lastly.
00:09:40 [W] I'll cover some GitHub repos for the python kubernative client as well as how you can contribute.
00:09:43 [W] As you may already know kubernative is has a distributed architecture while there are many components the two components that are important for this talk are first the API server, which is a part of a master node, whether you're interacting with the
00:10:00 [W] kubernative he's has a distributed architecture while there are many components that you components that are important for this talk are first the API server, which is a part of the master node, whether you're interacting with the cluster with Cube CTL or
00:10:03 [W] Yell or another method such as curl commands all calls go through the API server second the cubelet which is found on every worker node. All Communications to a node go through the queue blind.
00:10:14 [W] Kubernative has officially supported clients ranging from go and python to JavaScript and Haskell officially supported clients are found in the kubernative client repo are generated using open API
00:10:32 [W] His community.
00:10:40 [W] There are also several unofficial exported clients for languages including closure lisp Perl PHP.
00:10:44 [W] Ruby rust. And Scala.
00:10:47 [W] The cool thing is you can generate your own client, whether that's for learning purposes or just because you want to add features that are specific for your use cases.
00:10:55 [W] I'll talk more about how that is done later on this talk.
00:10:57 [W] Let's take a step back and talk about what clients are and why you would use them clients allow you to programmatically interact with cluster while you can string together a whole bunch of cute CTL commands by writing a bash script. This can easily become inflexible.
00:11:14 [W] One thing you can do with the client is to watch for events and then take an action. For instance. If the amount of space being used by persistent volumes in your cluster reaches a certain size or limit. You can send an alert to a slack Channel.
00:11:28 [W] Or someone tries to create a pod with an image version that is known to have a vulnerability.
00:11:35 [W] You can have the cluster destroy it automatically.
00:11:36 [W] With python being one of the most popular programming languages the python client provides a way for those who are unfamiliar with goaling to still reap the benefits of an interface to kubermatic to get started.
00:11:53 [W] All you have to do is run pip install kubernative. He's
00:11:54 [W] You can use a manage cluster like gke from Google Cloud platform or eks from Amazon web services the downside being it costs money unless you have credits.
00:12:14 [W] You can also run a self-managed cluster using something like you baby em, but this also costs money unless you have credits and ends up being more work.
00:12:23 [W] Another option which is free. So we're going to look at cluster on your computer to options are minikube, which is virtualbox and kind which is docker.
00:12:34 [W] I love using kind to show some examples of how to use the python client.
00:12:42 [W] I won't go through the setup for kind.
00:12:47 [W] But if you're using a Mac, you can use the Brew package manager and run Brew install kind then you can run kind create cluster as shown on the screen and it will create a kubernative cluster.
00:12:54 [W] The first example is the equivalent of running Cube CTL get pods - all - namespaces if this all pause across all namespaces in a cluster.
00:13:08 [W] the config download queue config line load secure config file found in your document directory, then it uses the core V1 API to list odds for all namespaces just as the method name says
00:13:22 [W] This is turns a list of objects that are properties like status or metadata.
00:13:27 [W] The pods IP address the namespace it exists in and the name of the pod.
00:13:38 [W] The thing to note here is that this group was called from outside of the cluster when I read the script it made calls the kind cluster and the kind cluster return data.
00:13:54 [W] This is important because in the next example, the script is called from within the cluster.
00:13:59 [W] This script is almost exactly the same as the previous scripts. It lists pause across all namespaces in the cluster.
00:14:04 [W] The difference is the config that load in cluster config light.
00:14:12 [W] This script needs to be called from a container running within a kubernative cluster.
00:14:16 [W] So instead of executing the file and getting result.
00:14:21 [W] I would need to create a Docker file and a pod manifest to run the script within the cluster.
00:14:22 [W] This is a Docker file.
00:14:27 [W] I will be using it uses a python Alpine image copies of script installs the kubernative package and runs the script.
00:14:32 [W] Here I'm applying them out of fast, and then I'll check the locks.
00:14:43 [W] You can see it's listening all the pods within the cluster which is pretty much the last example did difference being it's now running within the cluster.
00:15:00 [W] copies of script and salsa kubernative package and runs the script
00:15:03 [W] Here I'm applying them out of fast, and then I'll check the locks.
00:15:04 [W] You can see it's listening all the pods within the cluster which is pretty much the last example did difference being it's now running within the cluster.
00:15:05 [W] This script creates a deployment.
00:15:07 [W] It opens a file called nginx - deployment that llamo and uses the contents to create a deployment in the default namespace using the apps V1 API.
00:15:19 [W] equivalent of running qtl great - Chef nginx - deployment llamo
00:15:23 [W] This is a mo file that will be used.
00:15:28 [W] used. It launches three replicas of PODS running nginx.
00:15:29 [W] Once I run the script it will create the deployment.
00:15:35 [W] I talked to the appointments you'll see that the deployment has been created.
00:15:43 [W] And you can see the three replicas of the deployment within the listing of the pots.
00:15:51 [W] In this last example, the script uses the core V1 API to add a label with key Foo and value bar to a note.
00:16:00 [W] Before I run the script I want to show you that there's no labels with key of Foo on any of the nodes in the cluster.
00:16:11 [W] I'll run the script which will apply the labels.
00:16:20 [W] cluster
00:16:32 [W] I'll run the script which will apply the labels.
00:16:33 [W] You know, if I get the labels on the notes again, you can see there's a custom label with key of Foo and value of bar. If you want to see more examples, you can find them in the kubernative client python repo.
00:16:36 [W] There's an examples folder that contains the code of examples. I covered and several others.
00:16:44 [W] There's also a docs directory under the kubernative / docs folder within the python repo.
00:16:48 [W] for example
00:16:52 [W] the apps V1 API list the available methods that you can call with the python client.
00:17:00 [W] And most methods like the create a namespace deployment method of examples.
00:17:07 [W] parameters and return types
00:17:12 [W] There's also generated reference documentation on the kubernative.
00:17:17 [W] is that iof site? In fact, we can find the same API for the create namespace deployment method by going to deployment V1 apps.
00:17:27 [W] write operations in create
00:17:30 [W] Here you can see that the HTTP request Path apis apps V1 namespaces namespace parameter deployments matches what we saw earlier.
00:17:44 [W] If we go back to the top see that create new instance deployments also has a path of apis apps V1 namespaces seems to be spirometer deployments.
00:17:57 [W] Also lots of other useful information in this API documentation, so please take a look.
00:18:09 [W] Earlier, I mentioned that you can generate your own kubernative client.
00:18:16 [W] This is possible through the kubernative client Jen repo which uses the open API generator and custom generator scripts that are shared among all the client libraries.
00:18:26 [W] The read me does a good job describing how to use the scripts and you'll find the scripts and the open API folder.
00:18:33 [W] For example, here's the script that generates the python client.
00:18:39 [W] python shell.
00:18:40 [W] Next I'll talk about the repositories specific to the python client.
00:18:54 [W] Python client is one of the few official clients that is split into two repos Python and python base.
00:18:57 [W] The python repo is basically the output of the generator script python that shell from the Gen repo that I showed you earlier, of course, there's more to it.
00:19:11 [W] But if you explore the repo you'll see that a lot of the files are generated.
00:19:12 [W] Example go to kubernative client in the API client.
00:19:22 [W] will see that there's a comment at the top that specifies that this file is generated.
00:19:26 [W] The python repo is basically the output of the generator script python that shell from the Gen repo that I showed you earlier, of course, there's more to it.
00:19:34 [W] But if you explore the repo you'll see that a lot of the files are generated.
00:19:34 [W] Example you go to kubernative client in the API client.
00:19:35 [W] will see that there's a comment at the top that specifies that this file is generated.
00:19:35 [W] Watch out for these generated files, especially if you plan on contributing a change, there's no point in trying to change a file that was generated as it will just get over it and later in general.
00:19:43 [W] It's always a good idea to open an issue before making a PR so you can describe what change you want to make and why and more experienced contributors can give you feedback.
00:19:50 [W] Python-based repo contains hand-tuned pieces of code that are not in the standard restful API.
00:20:04 [W] This code is not Auto generated by the scripts in the generated file code in the python base repo is added to the python repo using get sub modules here you see
00:20:12 [W] Config hack stream and watch.
00:20:16 [W] if we go back to the python repo
00:20:20 [W] you'll see that there's the same reference files config Dynamic stream and watch.
00:20:30 [W] For builds and test the client repos you Circle see I you'll typically see a tool called prowl being used for other parts of the kubernative ecosystem.
00:20:48 [W] The reason that the client Repose don't use prowl is most likely because the client projects were started before proud was available, but circleci I can use to serve the client repository. Well, so there's no reason to move off of it.
00:20:57 [W] You'll see that there's the same reference files config Dynamic stream and watch.
00:21:03 [W] For builds and tests the client repos you Circle see I you'll typically see a tool called prowl being used for other parts of the kubernative ecosystem.
00:21:05 [W] The reason that the client repos don't use proud is most likely because the client projects were started before prowl was available, but Circle see I can use to serve the client repository. Well, so there's no reason to move off of it.
00:21:07 [W] The release versioning also works a bit differently. So I'll explain that here.
00:21:10 [W] Python client major release versions correspond to kubernative minor releases so python client 10 maps to kubernative 1.14 and python client 11 Lobster kubernetes 1.15.
00:21:18 [W] Like kubernative is though the python client supports the last year releases of kubernative.
00:21:30 [W] So python client 11 will support kubenetes 1.15 as well as versions, 1.14 and 1.13.
00:21:35 [W] If you're interested in contributing to the python client or any of the other officially supported clients, we'd love your help.
00:21:46 [W] Some of the types of work open source contributors can do include documentation issue triage releases bug fixes future development and increasing test coverage for the python client specifically.
00:21:58 [W] Tuition issue triage releases bug fixes future development and increasing test coverage for the python client specifically some cool features.
00:22:02 [W] We like to see our tie panting with my pie and creating more release automation.
00:22:06 [W] We have bi-weekly meetings on Monday mornings.
00:22:10 [W] For more information visit this Vlog Channel kubernative - client and that's the end of my presentation.
00:22:21 [W] I hope I have able to shed some light on how the planets on climate works.
00:22:23 [W] I look forward to seeing people contributing in the future.
00:22:25 [W] All right.
00:22:35 [W] Just want to say thanks everyone for attending my talk.
00:22:36 [W] I hope you learned some stuff about the communities python client.
00:22:42 [W] So I'll jump into some of the questions. The first question is more of a statement.
00:22:47 [W] It says I guess in my first example or my first couple of examples I shared how you can do both call configs both.
00:22:56 [W] inside the cluster and outside of the cluster and so
00:23:00 [W] here this just says it's possible to switch auto switch between in and outside cluster config by using an if statement and that's certainly true so you can do an if statement and check if there is
00:23:15 [W] Available and if not, you can use environmental variables to check for the keep config.
00:23:26 [W] So if you're not sure whether the script will be run inside or outside the cluster. You can create some logic there to check for config file or for environmental variable.
00:23:37 [W] So thanks for that.
00:23:38 [W] Second question is how is the automatic code generated from the open API spec?
00:23:50 [W] I think I covered that there is a kubernative /gen or kubernative kubernative - client / Jen repo. There's several generator scripts for various languages in there that you can take advantage of and like I said
00:24:04 [W] Is the automatic code generated from the open API spec?
00:24:04 [W] I think I covered that there is a kubernative /gen or kubernative kubernative - client / Jen repo.
00:24:06 [W] There's several generator scripts for various languages in there that you can take advantage of and like I said, you can generate your own client if you if you want to do that so you can use those scripts to do that, or you can just see how they're used in the actual.
00:24:12 [W] And generate your own client, if you if you want to do that, so you can use those scripts to do that. Or you can just see how they're used in the actual different officially supported client libraries.
00:24:18 [W] So just take a look at those scripts.
00:24:20 [W] I'm happy to answer more specific questions if you have them and there's a follow-up question.
00:24:29 [W] How is the optical thought that authentication part decoupled from the generated code? I don't have an answer for this. So maybe you can try asking the
00:24:34 [W] this in the kubernative slack kubernative - client Channel.
00:24:40 [W] next question is
00:24:46 [W] What is the recommendation on where to run or deploy the clients to kubernative is so I think this is in reference to the first couple of examples where you could run the client code both inside and outside of cluster.
00:25:03 [W] And there's no right or wrong way to do this.
00:25:07 [W] Just like the previous question about logic in checking multiple places to see whether it's run inside or outside the cluster you can do something like that. If you don't know whether your code will be run inside or outside.
00:25:18 [W] Cluster but um, yeah just depends on what you're trying to accomplish if you have something that is going to act as a watcher and some sense and that needs to continuously run.
00:25:31 [W] You probably want to run that in the cluster.
00:25:34 [W] So hopefully that gives you an idea of when you would use one or the other but yeah, there's no really right way or one method that you should use more of the other.
00:25:56 [W] It just depends on your use case.
00:26:00 [W] Next question is any recommendation about client machine and jumps are worse fortunately.
00:26:10 [W] I don't have much experience. If you have if you need a proxy or if you have trouble like Network permission issues on accessing a cluster, but that's I'm sure other people have run into this issue.
00:26:24 [W] So if you again if you want to check out the kublr any slack the kubernative stash client Channel, I'm sure there's someone who can
00:26:31 [W] And just give you some of their experience or share an actual answer on how to get this solved.
00:26:37 [W] Okay, the next question is how is it downwards compatibility of the client?
00:26:53 [W] We want to use a client for different kubernative versions 1.15 through 1.17. So yeah, we for kubernative client just like the actual kubernative use
00:27:04 [W] that'll support the last two versions of the client so client 9 and 8 and what they map to and kubernative he's so but you want to make sure that the client
00:27:28 [W] Touches the version of what the client maps to in kubernative. So for instance, I believe 110 are kubernative client end up to 1.14 so
00:27:44 [W] Sure, you don't want to use kubernative client 10 for 1.15.
00:27:50 [W] Hope that makes sense and
00:27:53 [W] that answers this question.
00:27:56 [W] The next question is for the CLI.
00:28:07 [W] Is there a recommendation to host my application CLI outside the cluster may be a separate dedicated VM or jump server?
00:28:13 [W] Oh, I see.
00:28:21 [W] So I think what you're asking here is if you want to run your python script outside of the cluster. Is there any way to host it?
00:28:28 [W] Yeah, I'm sure you can use can just run it on a VM if you're using if you're running your applications in the cloud or
00:28:36 [W] yeah, there's a
00:28:41 [W] yeah, you can use some kind of like cron system to periodically on your scripts or yeah, just use something like a knative to periodically run your scripts.
00:28:58 [W] So not sure that answers your question, but please feel free to follow up.
00:29:02 [W] The next question will the python client support fake clients from Ox?
00:29:12 [W] yeah, there's a
00:29:15 [W] yeah, you can use some kind of like cron system to periodically when your scripts or yeah, just use something like a knative to periodically run your scripts.
00:29:16 [W] So not sure if that answers your question, but please feel free to follow up.
00:29:16 [W] The next question will the python client support fake clients from Ox?
00:29:17 [W] Yeah, I believe it.
00:29:19 [W] Well, I don't have direct experience with this that we write plenty of tests for the python client.
00:29:21 [W] We could definitely use more that you can look at some examples there.
00:29:27 [W] And yeah, I'm sure mocks work here as well.
00:29:30 [W] And actually we do do some mocking in the testing. So yeah, I'm pretty sure this will work.
00:29:32 [W] Is there an Informer implementation in Python client if know what would be the alternate I believe there is not an Informer but implementation.
00:29:46 [W] I might be wrong here.
00:29:48 [W] Unfortunately, there are just some things in the client libraries that aren't go that aren't well supported.
00:30:01 [W] So that's where we Implement some things in Python base.
00:30:12 [W] So I don't have an alternative off the top of my head for you. But unfortunately some things aren't don't translate well to the other client libraries like python, so we're still working on getting feature parity.
00:30:17 [W] And there is a question asking if my slides are available.
00:30:25 [W] I did upload them to the schedule page.
00:30:26 [W] I don't know when those become available.
00:30:30 [W] But if for some reason you don't get access to my slides, I'm happy to share them and slack. So just ping me or just wait a little bit to see if the slides become available.
00:30:39 [W] So the next question is about the release cycle. Basically this person uses the python Community is client with saltstack to manage and deploy their kubernative cluster.
00:31:02 [W] It seems that python kubernative is a bit outdated according to the current kubernative releases.
00:31:10 [W] Yeah. So this is one area that we need help with which is release automation.
00:31:14 [W] We definitely could improve the pace that we release things. We are a bit behind so we currently are
00:31:18 [W] Trying to get out kubernative client version 12 which maps to 1.17. I believe of actual kubernative.
00:31:28 [W] So we're a bit behind.
00:31:30 [W] We're trying to be better about that.
00:31:39 [W] But you know, we could use people's helps people's help if you have time, but also, yeah, we are planning to be better about that in the future. So, please be patient with us. And yeah, thank you for hanging in there.
00:31:45 [W] This next question is for the kubernative client.
00:31:52 [W] Where is it run?
00:31:59 [W] If on an external server, should we ensure that the OS user on the client node and Cube CTL user token or coming from same identity system.
00:32:06 [W] So for this so the kubernative clients.
00:32:11 [W] serverless VM
00:32:17 [W] the only thing you need to make sure is that yes, you need to make sure that you the machine that's accessing your cluster does have permissions whether that's
00:32:33 [W] Or just user permissions. So, you know, that's something you need to make sure works.
00:32:40 [W] But other than that, you can pretty much run the client anywhere.
00:32:48 [W] said, you can run it outside of the cluster on your personal machine or you can have it running in a VM or you could have it just running on the actual cluster itself.
00:32:53 [W] The next question is I could not follow what you said running clients or CLI on the cluster to mainly create a seal iPod with shell access.
00:33:12 [W] Yeah, so, like I said, you could write a script using the kubernative client and how that run within the cluster.
00:33:26 [W] You have to create a pod. Yes to actually run the code that you've written that accesses that uses the client library to access the cluster so you I think I showed you that
00:33:36 [W] Where you are to writes a Docker file to package up your code and then you would write a manifest to actually deploy or met by manifest. I mean like a yam. Oh f*** kubernative Z Mo file. That would actually
00:33:52 [W] Solder the dockerfile into the cluster so that would run and you know deployed whether you want that to be a pod or deployment or whatever other options you can specify in the llamo file.
00:34:04 [W] Is the python client supported for red hat for openshift?
00:34:12 [W] I'm not sure about this.
00:34:24 [W] I've mostly seen users use this for just like vanilla career and he's clusters or manage kubernative clusters through AWS surgeon KS openshift might have their own client libraries, but
00:34:29 [W] And supported for red hat for openshift.
00:34:30 [W] I'm not sure about this.
00:34:31 [W] I've mostly seen users use this for just like vanilla career and he's clusters or manage kubernative clusters through AWS searching KS openshift might have their own client libraries, but
00:34:32 [W] Um, from what I understand about openshift its current IDs so I don't see why it wouldn't work.
00:34:43 [W] But you're welcome to ask more about this in the Koran is clients that channel to see you other people's experiences.
00:34:47 [W] Next question is you know kubernative.
00:34:54 [W] What is your recommendation to start learning to get sharp in a little bit of time.
00:35:02 [W] How can you be contribute to communities open source projects? So great question for if you are coming with zero background into mirantis, basically, you can start at the kubernative cri-o website.
00:35:11 [W] They have pretty good documentation, and there's tons of people writing blog posts.
00:35:16 [W] So there's a question about a specific part just Google it and there's plenty of articles.
00:35:19 [W] Logs and like I said, you don't have to spend any money to run a kubernative cluster you can use kind which just runs on your local computer.
00:35:29 [W] So that's pretty much free.
00:35:31 [W] So please take advantage of that and you know, the best way to learn is just to try it yourself. So definitely take advantage of using something like kind to run your own cluster and from the commands and try different things and next.
00:35:45 [W] The other part of the question is how can you be contribute?
00:35:47 [W] Yeah.
00:35:48 [W] It's really easy. You don't you don't even have to be
00:35:49 [W] Cool, just join the sectional or join the kubernative slack.
00:35:55 [W] just ask people questions.
00:35:56 [W] Kathy get her repellency.
00:36:06 [W] What kind of issues are posted?
00:36:10 [W] So even if you're not technical you can help with things like documentation issue triage.
00:36:16 [W] If you are technical, you know, you can do bug fixes. You can try to write new features.
00:36:21 [W] plenty of things to do. So, please don't think that just because you're new you can't contribute.
00:36:23 [W] Next question is does it make sense to collect metrics using the kubernative zpi with the python client Library?
00:36:36 [W] I don't think this is a produced.
00:36:39 [W] This is a usual use case of the Python client.
00:36:44 [W] A lot of people use Prometheus and Prometheus has its own client libraries to send metrics to Prometheus and there's other obviously there's other metrics systems that are available. But if you use something like
00:36:54 [W] I'm client Library both in go and python. So if this is something you want to do, I'd recommend that instead of the kubernative Python client.
00:37:04 [W] The next question is don't know about the in cluster config function looks pretty cool.
00:37:22 [W] What does it use to contact the API server with which permissions so this is a little bit difficult to explain over video.
00:37:31 [W] But yeah, you can set up.
00:37:33 [W] A resource permissions to make sure that things communicate well and I can talk to you about that offline if you want to pay me, but yeah, there's some ACL is that you would have to set up for this to work?
00:37:47 [W] And someone did post that the python client does work with openshift.
00:37:59 [W] So hopefully that's correct. So you can try it out of that then you can try it out.
00:38:05 [W] Another question is I was a quarter at one time but not anymore. I have taken application security area.
00:38:18 [W] I focus on application security since for the past few years.
00:38:19 [W] Can I still contribute in some way?
00:38:22 [W] Security is one area.
00:38:30 [W] That's like, you know always a consistent concern.
00:38:40 [W] So if you have anything to contribute, you know take a look at the repo and see if there's anything you notice and you know, if you have any questions people are usually happy to answer them.
00:38:44 [W] So try asking questions on GitHub or in the slack Channel.
00:38:46 [W] Do you have a recommendation for supporting multiple kubernative versions?
00:39:06 [W] I don't I do know this can be frustrating because kubernative does multiple releases a year.
00:39:13 [W] Yeah.
00:39:18 [W] I think it's best to upgrade just because things are changing so rapidly.
00:39:20 [W] Yeah, but fortunately a lot of it is Backward Compatible.
00:39:27 [W] So I don't have a specific recommendation for you right now, but I would say that yeah, this is could be frustrating if you have to support multiple clusters with different versions.
00:39:38 [W] Yeah, I might have to get back to you on this but feel free to ask in the channel.
00:39:45 [W] Best to upgrade just because things are changing so rapidly.
00:39:55 [W] Yeah, but fortunately a lot of it is Backward Compatible, so I don't have a specific recommendation for you right now, but I would say that yeah, this is
00:39:56 [W] Have possibility to go to non-local redundant sites.
00:40:01 [W] Typically you set up which cluster you specify which cluster you want the client to connect to through the cube config file.
00:40:18 [W] But yes, there is a way to use the API to specify which cluster you want the client to connect you.
00:40:26 [W] So if you are supporting multiple clients, I haven't done this myself, but I'm sure there is a way to work with multiple clusters.
00:40:27 [W] I watch cluster you want to access so this should be possible.
00:40:32 [W] I was so there's a question pods with shell access for CLI or client is not good from security.
00:40:58 [W] From the security perspective compromise to CLI podcast make damage the further application services or pods.
00:41:11 [W] So when you're using the client, you're not using shell access.
00:41:18 [W] I hope I'm Amber said I hope I'm understanding this but the not using shell access.
00:41:20 [W] It's just using the restful API directly.
00:41:25 [W] Chin, but it's not using shell access to be clear.
00:41:31 [W] Okay, I think.
00:41:39 [W] That's all the questions so far.
00:41:45 [W] Yeah, I can hang around for a few more minutes if anybody has any other questions, but like I said, I'm happy to answer questions in slack as well.
00:42:01 [W] Okay. Well that seems to be most of the questions.
00:42:48 [W] Thank you everybody for tuning in.
00:42:56 [W] um, feel free to either asking the channels or just DM me directly and happy to answer any questions or try to point you to someone who has the answer one last question before I go
00:43:11 [W] Is there any reason why you don't enforce the client to be running outside the cluster?
00:43:24 [W] I answer this in a previous question, but basically there's various use cases where you'd want.
00:43:27 [W] be running
00:43:29 [W] He's asking the slack Channel, but I think I might be a for now. So yeah, please ask me more questions inside.
00:43:54 [W] So thank you again.
00:43:55 [W] So, thank you again.
