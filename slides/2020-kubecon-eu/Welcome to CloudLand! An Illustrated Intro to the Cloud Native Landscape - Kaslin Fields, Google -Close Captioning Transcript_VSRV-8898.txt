Welcome to CloudLand! An Illustrated Intro to the Cloud Native Landscape: VSRV-8898 - events@cncf.io - Monday, August 17, 2020 10:52 AM - 192 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:02:30 [W] Hello and welcome to Q Khan Cloud native Connie you virtual.
00:02:35 [W] This is Welcome to Cloud land an illustrated intro to the cloud native landscape.
00:02:36 [W] I'm caslon fields and I'm a developer Advocate at Google.
00:02:44 [W] I'm also a cloud native Computing Foundation Ambassador and a member of the kubernative eyes contributor special interest group related to contributor experience.
00:02:51 [W] I focus on topics around Cloud native devops and especially things about containers and kubernative eyes.
00:03:03 [W] I also really like to explain things with illustrations and fun analogies.
00:03:10 [W] So you can find more of my work in that vein at caslon dot rocks and you'll see my illustrations throughout this presentation.
00:03:11 [W] You can also connect with me on Twitter at caslon fields.
00:03:15 [W] A common question that I get is tell me about Cloud native and this can be a really challenging thing to answer because the answer really depends on where you're at in your Cloud native Journey for a lot
00:03:31 [W] They're just at the very beginning and they want to understand what is cloud native.
00:03:36 [W] Where did it come from?
00:03:38 [W] Why do I need to care about it?
00:03:41 [W] And what do I need to do if I want to get involved with it?
00:03:45 [W] A lot of people are just getting started with kubernetes and you know a little bit about Cloud native, you know a little bit about a few Technologies related to Cloud knative, but maybe you want to know what the next step is and then there are
00:03:56 [W] Really deep into Cloud native and have been using a variety of cloud native Technologies for a long time and I want to go deeper on some specific Technologies or really Advanced topics.
00:04:11 [W] So the answer can vary a lot and I came up with this presentation as a way to kind of bring everyone together and it's very introductory level.
00:04:23 [W] So if you're really just at the beginning and you want to understand what is cloud native, where did it come from and what?
00:04:27 [W] Ecology is count as Cloud native.
00:04:32 [W] We're going to cover all of that here in this is a great place for you.
00:04:35 [W] If you're just getting started with kubernetes and you know a little bit there will definitely be some good nuggets of information for you as well for some additional Cloud native technologies that you might want to know about and maybe some background that you didn't know about and if
00:04:46 [W] Justin deep, there's probably not a lot you're going to get out of this presentation except maybe ways to explain it to people who are not as familiar as you are.
00:04:59 [W] So just a little bit about what to expect.
00:05:01 [W] And now let's start at the beginning and when we're talking about Cloud native starting at the beginning means talking about data centers. And for anyone who might not be familiar with them now data center is basically a big box in the
00:05:16 [W] Backside knative starting at the beginning means talking about data centers. And for anyone who might not be familiar with them now data center is basically a big box in the middle of nowhere that's full of computers, which generally generate a lot of heat.
00:05:21 [W] full of computers which generally generate a lot of heat thus the AC units
00:05:23 [W] so
00:05:24 [W] no matter what your business maybe today businesses of all types need computers in this day and age whether it's managing Logistics or payroll.
00:05:37 [W] There are all sorts of use cases where businesses of all types need computers and thus have these big data centers in the middle of nowhere.
00:05:50 [W] For example, we're going to be talking about a toilet paper Company CEO here so our CEO runs a toilet paper.
00:05:55 [W] Me of course, but still has one of these data centers in the middle of nowhere with a bunch of computers running things like Logistics and payroll.
00:06:03 [W] The thing about these boxes in the middle of nowhere full of computers is that they take up a lot of money.
00:06:11 [W] They are a very big budget item in terms of real estate expertise.
00:06:19 [W] You've got to have experts who know how to how to manage these computers the computers themselves the electricity costs and then the management of the software and software licensing costs and all that.
00:06:28 [W] There are a lot of different types of costs associated with this.
00:06:33 [W] It's all very important to the business.
00:06:34 [W] But looking at all of that on your budget sometimes makes toilet paper Company CEO feel like big box in the middle of nowhere CEO.
00:06:46 [W] So this makes our toilet paper Company CEO not so happy.
00:06:50 [W] Is where the cloud comes in?
00:06:55 [W] The cloud doesn't get rid of these data centers in that.
00:06:59 [W] It's just someone else running then there's a very popular sticker that says there is no Cloud.
00:07:01 [W] It's just someone else's computer.
00:07:03 [W] that's very much the case. The cloud is basically a business that runs these data centers for other businesses.
00:07:14 [W] So it changes the way that that looks on the budget and sometimes this can make toilet paper company CEOs very happy.
00:07:16 [W] And an important thing to remember with this is that the majority of workloads today are still being run in data centers.
00:07:29 [W] Majority of workloads have not been run into Cloud style paradigms.
00:07:34 [W] So this is still very relevant situation that's happening. Every day's companies are looking at their data centers and deciding maybe I want to switch to a cloud model so that that's something that
00:07:46 [W] Are really involved in Claudia. Don't think about as much AWS came around like 10 years ago.
00:07:59 [W] They're like, oh that's something that happened so long ago, but now this is very much something that people are still considering and struggling with today.
00:08:00 [W] So if a company decides that they want to start getting involved with the cloud.
00:08:07 [W] What does that look like?
00:08:09 [W] One model of doing this is lift and shift and lift and shift is basically take all that stuff that's running in your data center lift it up and shift it into the cloud as as is or as close to as is as possible.
00:08:25 [W] Option for a lot of businesses because you can take all that stuff that's running in your data center and just run it in the cloud.
00:08:33 [W] It's all very important.
00:08:34 [W] You still need it and that changes the way that your budget looks immediately.
00:08:39 [W] But the main reason that a lot of businesses adopt the cloud isn't actually this budget model at all.
00:08:46 [W] It's that they want to go through a process of app modernization.
00:08:52 [W] They want to take all of their existing applications and software that they have to run and they want to make it all easier and more streamlined and I think that running in the cloud will allow them to do that.
00:09:05 [W] And why do they think that that's where the whole concept of cloud native comes in the clouds?
00:09:09 [W] Is a unique place when you compare to a data center, let's think about a data center for a minute say that you want to spin up a new machine learning team.
00:09:19 [W] They're going to need special Hardware to do what they need to do.
00:09:24 [W] do. They probably have pretty considerable requirements for the computing power that they need so you might have to order new machines for your data center that you didn't have before.
00:09:33 [W] That means figuring out what to order placing the physical order waiting for that to come in and then having experts put all that stuff in your data center.
00:09:43 [W] Rack it up get all the cabling right and then maybe your team can start using it.
00:09:50 [W] And then maybe your team can start using it.
00:09:56 [W] So that's a lot of lead time from idea to development.
00:09:58 [W] Whereas in the cloud you have someone else running these Big Data Centers and you can just say hey, I want this specialized type of equipment right now and they'll just give it to you you'll have to pay for it of course, but it's you have the
00:10:05 [W] Opportunity to have those things more instantly. So running in the cloud provides New Opportunities and ways to run your applications and your workloads that you might not have had in a traditional Data Center and that's what we call Cloud knative.
00:10:20 [W] And that's what we call Cloud knative.
00:10:21 [W] It's using the unique capabilities of the cloud to your advantage and when it comes to moving from an existing data center into the cloud.
00:10:30 [W] If you want to modernize existing applications that often means considerable re-architecting of those existing systems, and it means that when you are designing new systems that are going to be totally Cloud native that you're going to need a different set of expertise.
00:10:45 [W] Think systems and it means that when you're designing new systems that are going to be totally Cloud native that you're going to need a different set of expertise that understands the cloud its benefits and the technologies that we call Cloud native.
00:10:52 [W] So too, let's hit this home with an analogy and some illustrations.
00:11:00 [W] So imagine microwave popcorn microwave popcorn is really convenient. And sometimes it's exactly what you want. But compare that to kettle corn or caramel corn that you might get at like an amusement park or a festival.
00:11:13 [W] It's a really special experience and it tastes really great. Right, but that's because they are able to use these giant kettles this very specialized Hardware to create that product at home.
00:11:26 [W] You might not have that an important thing.
00:11:29 [W] I want to mention here is that all of these Cloud native technologies that I'm going to talk about today?
00:11:39 [W] You can run at home in your own data center or on your own laptop or whatever the case may be.
00:11:42 [W] Just a little bit like microwave popcorn in that a lot of these Technologies were designed specifically with the capabilities of the cloud in mind.
00:11:58 [W] So you might find some weird things about how they work when it comes to on-prem some things that might not be quite as streamlined as it would be in the cloud, but you absolutely can still do them in your data center.
00:12:06 [W] So doing Cloud native type stuff in-house on-prem is a little bit like doing microwave popcorn sometimes in that you don't have the specialized equipment that may be that type of Technology was expecting but it's still good.
00:12:22 [W] Sometimes that's still exactly what you need.
00:12:28 [W] So don't let any of this prevent you from running Cloud native type Technologies in house you can do it, but you'll see that there are some things that are designed specifically to work with the unique capabilities of the cloud and that's Cloud native.
00:12:40 [W] So now that you've learned about what cloud native is, let's talk about how this works. Today. You're at Q Khan Cloud native con, which is run by the cloud native Computing foundation. And who is that?
00:12:53 [W] They are an independent nonprofit organization and their mission is to promote the growth and Adoption of cloud knative Technologies.
00:13:02 [W] This is really important and exciting in terms of cloud native Technologies, because a lot of businesses
00:13:08 [W] Worried about locking so say that all of the cloud providers were the only ones creating Cloud native Technologies.
00:13:18 [W] Well, they would be knative to their clouds wouldn't they?
00:13:26 [W] So the thing with Cloud native Technologies is a lot of them try to be clouded Gnostic you want to be able to run these types of Technologies on whichever cloud provider.
00:13:32 [W] That helps to support these projects is really important.
00:13:43 [W] So they helped us support and promote many Cloud knative open source projects and they also maintain a cloud native landscape that helps companies understand what types of cloud native software out there.
00:13:55 [W] And here it is this is the cloud native landscape.
00:14:04 [W] So, you know all about all of the different types of cloud native technology now, right Dan Kohn the former head of the cncf once showed this at a q Khan and referred to it as an eye chart and
00:14:14 [W] What types of cloud native software out there?
00:14:15 [W] And here it is this is the cloud native landscape.
00:14:15 [W] So, you know all about all of the different types of cloud native technology now, right Dan Kohn the former head of the cncf once showed this at a q Khan and referred to it as an eye chart and
00:14:17 [W] There's a lot on here so it can be kind of hard to figure out where to begin when you start trying to understand what cloud native Technologies are out there and how to use them.
00:14:28 [W] So that's what we're going to go over for the rest of this and these are the parts of the cloud native landscape.
00:14:33 [W] We're going to go over and I'm going to focus on the general topic of these sections of cloud needed technology rather than individual Technologies, but I'll give you a general idea of what all of the Technologies in this category do so that
00:14:45 [W] That as you go along you're clouding of Journey and you're ready for the next stage and you're ready for the next piece. You'll know where to look on this Cloud native landscape for the tools that you need.
00:14:57 [W] And really great quote here from Kelsey Hightower that I wanted to throw in. So you want to roll your own application platform.
00:15:07 [W] All you need is this big list of things there are a lot of different types of cloud knative Technologies. So creating these Cloud native application platforms is going to end up taking a lot of pieces.
00:15:21 [W] We're not going to pretend this is not complex and it's not going to involve a lot of learning but I think that you'll see hopefully that a lot of it is beneficial.
00:15:30 [W] useful to you
00:15:31 [W] so welcome everyone to Cloudland.
00:15:38 [W] We're going to be using an amusement park analogy to talk about all these different types of cloud native technology.
00:15:39 [W] So what are the most exciting and unique things about going to an amusement park or Festival?
00:15:46 [W] I loved the food and I originally created this for a talk in Tokyo.
00:15:56 [W] So I used some Tokyo specific Festival part Festival Foods and amusement park Foods. So don't worry. If you're not familiar, I will explain them, but we're going to start off with amusement park food analogies.
00:16:08 [W] and we're going to start with popcorn like we were talking about earlier really the core of a lot of cloud native technology is containers, which you've probably heard a lot about hopefully you've experimented with them a little bit
00:16:24 [W] A general overview of the benefits of containers actually sounds a lot like popcorn kernels.
00:16:34 [W] They're a very efficient way to package up the applications that you need and their dependencies.
00:16:43 [W] So it's an efficient way to store all of that information and then spin it up at the drop of a hat.
00:16:45 [W] Another really exciting thing about containers is that they are very portable.
00:16:53 [W] Generally we're talking about Linux containers here. If you want to talk about Windows containers love to talk about it. I just wrote a blog post on it recently. So let me know if you want that in the questions and I will totally give you a link but talking about Linux containers.
00:17:04 [W] Linux containers are based on technologies that are in the Linux kernel, so it's not like a virtual machine where you have to install a separate hypervisor or anything like that.
00:17:15 [W] They use existing Technologies within the Linux kernel, which makes them very portable to other distributions of Linux. As long as you have a supported kernel, you can run that same container on any distribution of Linux.
00:17:29 [W] You can also store your container image once and then spin up as many containers you want from that image on mess.
00:17:38 [W] The repeatable you're going to get the same thing every time and they're super quick to start up.
00:17:45 [W] So.
00:17:46 [W] One thing that people like to talk about when they're comparing containers and virtual machines is that virtual machines usually take a few minutes to spin up there another way that you could package up your application all of its dependencies and in some cases they may be the abstraction that you
00:18:02 [W] But they also require you to virtualize all of your Hardware your basically pretending that there's a whole other machine there and you also have a guest operating system on the machine, which means that they end up taking up a lot of extra resources so
00:18:18 [W] Have the hardware virtualization and they don't have the guest operating system.
00:18:30 [W] They're basing off of the existing Linux kernel, so that makes them very lightweight and quick to start up.
00:18:31 [W] And this is a lot like popcorn kernels.
00:18:38 [W] So I actually want to do a quick little demo of containers in case you aren't familiar and I'm gonna refer back to this example microservices a few times during this and so this like I said is an example
00:18:48 [W] Service and let's see which parts of this are containers.
00:18:52 [W] All of it.
00:18:58 [W] All of it is containers.
00:19:00 [W] So you'll see that with a lot of cloud knative workloads you end up splitting all of the pieces of your application into their own micro services that are run in containers and
00:19:12 [W] I want to
00:19:14 [W] show you this is what this example micro-service actually looks like.
00:19:24 [W] It's an example that's on GitHub from Google Cloud.
00:19:26 [W] It's this online boutique.
00:19:27 [W] You can click on an item add it to your cart.
00:19:30 [W] See it in your cart.
00:19:32 [W] You can place an order them to your cart keep browsing all the stuff that you'd expect from an online.
00:19:38 [W] Boutique.
00:19:39 [W] and
00:19:41 [W] I want to give you a quick demo of what this looks like.
00:19:49 [W] So this if I do get remote - of e you'll see that this is Google Cloud platform / microservices demo dot get so that's the architecture.
00:19:57 [W] I was just showing you on the slide and we're inside of that if you go into the source repo, let's go into runt end.
00:20:11 [W] So I was just talking about containers and that there are really easy way to package up your applications, right? So let's look at
00:20:13 [W] Docker file so this is an example of a container definition.
00:20:19 [W] It's got this from statement right here that basically defines the base layer of your container.
00:20:27 [W] So this is going 1.12 Alpine.
00:20:33 [W] And it's got going in it so you can run some kind of building application in this and then it's got all these instructions for how you're going to run your actual application inside of this container.
00:20:44 [W] So if we wanted to run this we would run Docker Bill and I'm just going to put a dot that means look in the current repository and find the thing called Docker file and just build that and it did so if we run Docker image.
00:20:58 [W] Sorry, dr.
00:21:03 [W] image LS. You'll see a variety of images here.
00:21:08 [W] I thought that I just built a new one, but it says 3 hours ago. Let's try running that build command again.
00:21:18 [W] It says it successfully built it so it's probably because I didn't actually change anything from the last time I built it three hours ago.
00:21:31 [W] So if I were to change something briefly, let's do it - tea keep going.
00:21:35 [W] So this is adding a tag to the image and that should actually trigger it to recreate.
00:21:40 [W] It just really tagged the existing image, but you get the idea.
00:21:49 [W] So we've created a container image here.
00:21:53 [W] And then if we wanted to actually run a container we would do Docker run grab.
00:21:56 [W] Let's say it unique part of the image ID we run that so you can see it out put it all this stuff.
00:22:06 [W] That means that it tried to run it it actually had a panic.
00:22:09 [W] So if we look at Docker PS that shows you all running containers, we won't see any but if you do Docker PS - A you'll see that there's this container here that exited 16 seconds ago, which is the container that we actually run great point about
00:22:23 [W] This is is that a lot of them just spin up do their thing and spin back down.
00:22:32 [W] So having a container like this that would you would hit the Run command and then it would just kind of dye is actually a an existing use case. But in this case it did that because it's supposed to be part of this whole micro service
00:22:45 [W] Spin up one single container, but hopefully this gives you an idea of container image versus running a container itself.
00:22:55 [W] So let's go back to our slides here.
00:22:58 [W] So if you want to try that out, it's on GitHub.
00:23:06 [W] So I just mentioned container images. If you have all these container images like your popcorn kernels, you need some way to store those.
00:23:09 [W] That's where containerd Registries come in.
00:23:11 [W] There are a whole lot of different ways to do that. You can use something online like Docker hub
00:23:18 [W] Bob you can pay someone to run a registry for you. Most Cloud providers will offer some kind of managed registry for you.
00:23:28 [W] But if you want to do this on Prem or you just want to own it, you can also run it yourself using something open source like Harbor which is under the cncf.
00:23:33 [W] So this is for it's basically a repository for all of your container images sort of like a bag of popcorn bag of popcorn kernels specifically
00:23:43 [W] One of the most important things that I talked about I think is containerd runtimes.
00:23:51 [W] This is the thing that when I hear about it, I'm like, oh, yes people need to talk about this more.
00:23:59 [W] So container run times in this analogy is a little bit like different types of popcorn.
00:24:07 [W] So we've got mushroom popcorn here and we've got Snowflake and mushroom is really commonly used for like caramel corn because it stands up to that really well.
00:24:08 [W] We're a snowflake kind of breaks.
00:24:09 [W] It's pretty brutal.
00:24:10 [W] So it breaks easily. So depending
00:24:15 [W] Various trade-offs in terms of the speed to spin up that container the security of the container what the Paradigm of security is, sometimes it's just trade-offs of different styles of security and then there's weight which means like
00:24:31 [W] Utilization in this case.
00:24:35 [W] So a couple really interesting ones here that I like to hear more about our G visor and Kata. So Kata actually uses a lightweight VM to wrap their containers, so it's still really fast.
00:24:48 [W] It's very minimal for a VM, but it's still a VM. So that changes the security model of your container rather than sharing the colonel jiva's are actually uses an application kernel that it spins up for each individual container. So it's not quite a VM, but there's kind of the spectrum
00:25:01 [W] Between VM and container when it comes to speed security and wait, so if you're interested in all those trade-offs definitely look into your container run times, you'll also notice that Docker which is the type of container.
00:25:16 [W] I just ran isn't actually in here but Docker uses containerd e which is Linux.
00:25:23 [W] sorry clown knative Computing Foundation project and also run see another interesting one here before I move on is lxd, which
00:25:31 [W] Is kind of the classic container project.
00:25:39 [W] So if you're interested in learning about the history of containers, definitely check that one out.
00:25:40 [W] So we're just talking about all these containers, but we're at Cube Conklin knative cotton, right?
00:25:50 [W] We're all about kubernative use which is where the cube comes from.
00:25:55 [W] So we were just talking about all of these containers, but we're at Cube con con knative cotton, right?
00:26:03 [W] We're all about kubernative use which is where the cube comes from.
00:26:03 [W] So what is kubernative kubernative use is containerd orchestration in this analogy.
00:26:04 [W] It's kind of like it's really more like the logistics of running your own popcorn business your own popcorn stall at an amusement park. So let's look at that micro service application that we were just talking about again.
00:26:10 [W] Remember all of this is containers.
00:26:13 [W] Imagine.
00:26:17 [W] You're a business that runs on this micro service Cloud knative Model. All of your stuff is in containers.
00:26:20 [W] And so this is one application that you run.
00:26:26 [W] I imagine you have a thousand of this you have thousands of containers tens of thousands of containers.
00:26:34 [W] You can even get up into the millions of containers every day that you have to run.
00:26:37 [W] How do you manage all of that?
00:26:41 [W] You need something to orchestrate all of those containers.
00:26:44 [W] So kubernative is all about operating containers at scale. It has things that allow you to set up how your containers can communicate with each other.
00:26:50 [W] It has a few kids bullet.
00:26:56 [W] He's around storage which we will talk more about later.
00:26:58 [W] It's pretty complicated topic but it has all of these Concepts and kind of the main key component of container orchestration is that there's still servers.
00:27:09 [W] They're still actual nodes compute nodes that you're using to run all these containers on and you can basically say kubernative is I need this many containers go make it happen on the computers that we've given you and kubernative will schedule
00:27:20 [W] Them on the nodes so you don't actually have to worry about where your computers are located.
00:27:27 [W] They can be in the cloud.
00:27:29 [W] All of that you need something to orchestrate all of those containers.
00:27:32 [W] So kubernative is all about operating containers at scale.
00:27:32 [W] It has things that allow you to set up how your containers can communicate with each other.
00:27:33 [W] It has a few kids bullet.
00:27:33 [W] He's around storage which we will talk more about later. It's pretty complicated topic but it has all of these Concepts and kind of the main key component of container orchestration is that there's
00:27:35 [W] There's still servers.
00:27:35 [W] They're still actual nodes compute nodes that you're using to run all these containers on and you can basically say kubernative use. I need this many containers go make it happen on the computers that we've given you and kubernative will schedule them on the nodes so you don't actually
00:27:40 [W] Things are scheduled on two nodes appropriately you can use labels to make sure that things are are scheduled in the right areas and things like that. So kubernative provides a lot of great container orchestration tooling.
00:27:44 [W] But if you're a developer, you probably don't want to care about all of that.
00:27:50 [W] In fact, it may as well be serverless from your perspective.
00:27:54 [W] And so there's this concept of serverless and this is a very Cloud native type of concept where you're really just focusing on the code.
00:28:02 [W] Technically.
00:28:07 [W] It's kubernative and containers running underneath but we just say hey give us the code. You need to run will slap it into a container and throw it on some hardware for you and run it so you just focus on code.
00:28:14 [W] That's kind of what serverless and functions as a service is all about.
00:28:20 [W] Here's a use case to help you understand it better.
00:28:22 [W] So say that you have a photo booth app on your phone.
00:28:25 [W] You take a picture of you and your friends.
00:28:28 [W] It sends that picture to storage in the cloud and then that triggers an event which triggers a function to spin up.
00:28:38 [W] Some code has to do the processing on that image.
00:28:43 [W] So put that in a function it will spin up and do the processing.
00:28:44 [W] And then it'll spin out and image and then that image processing function that did that just goes away.
00:28:56 [W] So this is a part we're running in the cloud has benefits. If you run this on like a cloud providers functions as a service offering you can say, hey run this processing
00:29:08 [W] Image comes in it'll just spin that up and run it and then spin it back down so you don't have to be paying for it.
00:29:17 [W] However, if you're running this on-prem that can be a great user experience for your developers, but you're still technically paying for the actual Hardware, right?
00:29:27 [W] Because it's in your data center and you're paying for it all the time.
00:29:29 [W] So there's no cost benefit there.
00:29:32 [W] So this is one case where it's really cloud native versus app modernization. So the next piece we want to talk about is
00:29:41 [W] sure as code.
00:29:44 [W] So this is a really great example for devops.
00:29:46 [W] It's all about managing your Ops like you manage your Dev.
00:29:52 [W] So this food is okonomiyaki, which literally means your preferences grilled.
00:29:59 [W] Oh and by the way, the serverless analogy was caramel corn. So it's popcorn because it's kubernative and containers under the hood, but somebody already did all that for you. It's prepackaged ready to go.
00:30:08 [W] So serverless, so for infrastructure is code.
00:30:14 [W] We've got okonomiyaki which literally is your preferences grilled. So things that you like grilled in the case of infrastructure as code that means the VMS that you want how you want your network setup to look like
00:30:28 [W] And they will make that infrastructure happen for you.
00:30:44 [W] This is also related to gitops. If you now have your operations all of your infrastructure stuff as code. You can do things like keeping that in Source control and have a way to look back at what your infrastructure looked like before and
00:30:57 [W] Back, so it's a really cool topic.
00:31:00 [W] Next is servicemeshcon service meshmark the basics. It's kind of what I think of as day two of kubernative. And my food here is Hannah me Dango, which is a specific type of Dango for flower viewing.
00:31:16 [W] And Dango is pounded rice ball.
00:31:20 [W] It's a sweet thing and it's grilled and specifically Hannah me then go is three different flavors all in one stick.
00:31:27 [W] As servicemeshcon mesh of tools that you're going to need to run kubernative.
00:31:37 [W] He's as you start to run things and kubernative use you'll start to see gaps and so servicemeshcon rides you a bunch of tools that help to fill those gaps.
00:31:47 [W] So once you get started with kubernetes at some point, you're probably going to have to start looking at servicemeshcon mind and these are a bunch of different options linkerd e is the cncf one and then there are other open source and
00:31:57 [W] Pay options as well.
00:32:00 [W] If we look back at our example micro-service, you'll see all of these connections kubernative allows you to open up the connections and allow containers to talk to each other. But then you have to actually make that happen and then you might want to consider things like who can talk to who policy
00:32:17 [W] Horse meant to also talk about later and all sorts of little gaps that you'll see so servicemeshcon come in and start to answer some of those gaps.
00:32:28 [W] and
00:32:31 [W] so I was going to talk about servicemeshcon or there we're moving on. So next. Let's talk about observability removing out of the food analogies here.
00:32:40 [W] So observability is all about knowing your system to know your business in the amusement park analogy.
00:32:51 [W] It's like that screen that you see all over the amusement park that explains the wait times and statuses of rides.
00:32:59 [W] So we're going to talk about these three different components of observability.
00:33:07 [W] The first one is monitoring and monitoring is all about knowing what's happening when it happens, you know elegy for this is a person running an attraction of some sort and they're at this control panel.
00:33:12 [W] And a problem light lights up.
00:33:16 [W] So something has gone wrong.
00:33:17 [W] So you're knowing what's happening while it's happening.
00:33:19 [W] And what was the attraction this person was in charge of well, let's just say it was important.
00:33:29 [W] The Velociraptor is have been let out of their Paddock.
00:33:32 [W] So now we need logging and in this analogy logging is the caretaker sign-in.
00:33:39 [W] Fluentd as what cncf has there and there are all sorts of other tools for logging tracing is all about following where the trail leads so say following the dinosaur tracks.
00:34:02 [W] So there are all sorts of various tools for looking into that and why is why is tracing in observability so important in these environments?
00:34:13 [W] So you see that we've got all of these different pieces and it's kind of a mess in our microservice. It's not actually a mess, of course, but
00:34:16 [W] If you have something that goes wrong say in payment service.
00:34:20 [W] You need to trace back and find out where the actual error happened.
00:34:26 [W] Maybe the are actually happened in front end.
00:34:27 [W] So tracing is all about tracing through this mess of of connections to figure out where the problem actually occurred. So very important in these distributed systems.
00:34:39 [W] Security and compliance. I mentioned earlier like enforcing policies is when challenged in these distributed systems open policy agent gets a lot of attention Falco gets a lot of attention here and it's kind of like having fences and park rules and the
00:34:54 [W] If you want people to do things, right you need to make it hard for them to do wrong.
00:35:08 [W] So that's where these security and compliance tools come in for cloud native Technologies is giving you the tools like fences to make sure that people are in the right place make sure that they're using the their applications are working in a secure way.
00:35:14 [W] Bubbling that up with tooling so streaming and messaging not going to say a whole lot here, but it's kind of like a log flume, right?
00:35:24 [W] You've got all this data coming at you all the time and it doesn't stop so that's sort of like streaming.
00:35:29 [W] So it's all about consuming data at scale and here are some of the tooling toolings available around that in Cloud native remote procedure call again, we've got all of these connections kubernative opened up the pathway so that
00:35:41 [W] But how do they actually connect how do they send commands to each other that's in this specific case. In fact grpc, which is a yeah, the connections the actual connections that are happening between here.
00:35:57 [W] Procedure call so if you've got distributed systems, you've got to worry about distributed communication. So remote procedure calls where you go for that.
00:36:04 [W] And this is the last thing we're going to talk about here, which is clowning of storage.
00:36:13 [W] So if the system is distributed, where is your data located?
00:36:16 [W] What are your tolerances for latency?
00:36:22 [W] So there are all sorts of considerations that you have to make in a distributed system About Storage. So there have been a lot of companies and a lot of projects that have tried to make tools to make this easier.
00:36:31 [W] You'll you'll have to decide for yourself what trade-offs you want to make within your system. It's a pretty difficult.
00:36:37 [W] Alan Jones just listening to Kelsey Hightower talk about storage still being one of the challenges that has a ways to go within Cloud native and distributed systems. But if you're looking for what Solutions exist today, you can check out this area
00:36:50 [W] Landscape now, so in this there was only one example of storage but there could be many so that's all I'm gonna cover for you today.
00:37:04 [W] Look how much you've learned.
00:37:08 [W] This is the cloud native landscape and you've covered all of these different aspects of it.
00:37:10 [W] it. I hope that you have a great time at Cube con Cloud knative Connie you and feel free to drop any questions into the questions box for me.
00:37:19 [W] Thanks.
00:37:20 [W] Have a great time.
00:37:21 [W] Hello out there.
00:37:31 [W] Can you all hear me?
00:37:37 [W] I'm here to answer questions. If you have any I'm answering questions on the chat right now.
00:37:40 [W] I'm also going to be over on the slack channel right after this. If I don't get to your question, the slack channel is to - something something.
00:37:50 [W] I've lost it now.
00:37:51 [W] The kubernative is 101 track within the slack Channel 2 - Cube Khan - 101 something like that.
00:38:01 [W] The question I'm answering right now. By the way is what is the color coding on the slides and that indicates the maturity of the project.
00:38:17 [W] Guitar bass is and how diverse the contributor basis from various companies so that it's well supported and then how common it is to actually use that tool out in the real world.
00:38:32 [W] How common it is in production? And that kind of thing.
00:38:40 [W] Yes to - que con - 101. So be sure to go there and please rate my session.
00:38:41 [W] We appreciate it.
00:38:43 [W] Please ask me questions in the slack if you have more I think we're probably running over time a little bit.
00:38:52 [W] Where to start for a rookie a sorry, so there's a great handbook that Google created about what the SRE role is and what people who are as always do and how to do that role. Well, so that's one thing I would look at if I was interested in becoming
00:39:10 [W] little bit
00:39:11 [W] Where to start for a rookie a sorry, so there's a great handbook that Google created about what the SRE role is and what people who are s res to do and how to do that role. Well, so that's one thing I would look at if I was interested in
00:39:13 [W] And not every company has the same titles.
00:39:21 [W] So if you're looking for a job that is SRE like then you can look for that title or you can look for a job descriptions that kind of match what you expect in a sari to do so, there's a little bit of advice there.
00:39:31 [W] Okay, I'm going to take one more Live question and then we're going to move to Slack.
00:39:37 [W] Can you run an actual database on Cube? This is one of my favorite questions.
00:39:45 [W] So yes, in fact, you can even run like an Oracle database on kubernative. Zon containers. There is an actual container image out there for Oracle database.
00:39:58 [W] The question is why are you doing that?
00:39:59 [W] And what do you want to accomplish databases in containers and kubernative can often be great for like testing because you can spin up a database really quickly. Maybe have an extra script to like load it.
00:40:09 [W] Things and then use it and then make that database go away really easily.
00:40:18 [W] But if you need a database that's going to stay up all the time with the same data and everything.
00:40:20 [W] Then you probably want it outside of kubernative.
00:40:24 [W] Yes, because the thing with containers is that they can go away and kubernative will just spin them back up automatically really easily.
00:40:31 [W] So it's generally things that you're okay with disappearing but you can do it and you can keep the data even that's in a database even if the container goes away using kubernative volumes.
00:40:40 [W] We'll talk about that more. Definitely. Hit me up in the slack. I love talking about it. So thanks everyone. I have to go over to the slack now, please post your questions in there too, and I will totally answer them.
00:40:55 [W] Thank you.
