An introduction to Helm: ZWVX-0240 - events@cncf.io - Wednesday, August 19, 2020 8:22 AM - 114 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:01:17 [W] Welcome to The Coop con bu 20
00:01:34 [W] May 28 Rhoda Helm.
00:07:17 [W] I'm Bridget crumb heart.
00:07:18 [W] May 2010 trota Helm.
00:07:19 [W] I'm Bridget creme. How about I live in Minneapolis podcast with requested devops lead the devops days conferences, and I'm a p.m.
00:07:27 [W] For open source, kubernative Z Co system software at Microsoft and I muc was am iMac or maintainer for the helm project.
00:07:39 [W] work for the IT department at the city of Montreal Canada where we've been using a Helm in production for three years now.
00:07:42 [W] I'm particularly happy to be part of Q Connie you because as a Montreal knative I speak French. So I see Keda kind of oppose education en Francais, even if a placeholder variable.
00:07:55 [W] Is your pop? Hello Francie, there's more.
00:08:02 [W] All right, so so here's what we're going to talk about today. First. We're going to go through some Helm fundamentals, like easily installing software and to kubernative then we'll show you how to get started with charts which are the packages
00:08:14 [W] Here's what we're going to talk about today first.
00:08:14 [W] We're going to go through some Helm fundamentals, like easily installing software into kubernative.
00:08:15 [W] Then we'll show you how to get started with charts, which are the packages used by Helm will also look at the migration from Helm version to to helm version 3 and that's that's very important for anyone already using
00:08:23 [W] And then we'll wrap up with a look at the helm community. And don't worry. We'll also have concrete demos throughout the presentation.
00:08:32 [W] All right. So if you're tuning in because you're hoping to find out what even is Helm and why do people use it Helm is a package manager for Cooper Nettie's like homebrewer apt yum.
00:08:48 [W] It's the de facto standard for packaging and deploying kubernative a supplications and homes superhero origin story.
00:08:58 [W] Is it started as a hack-a-thon project at all? Small start-up called dais in October 2015 shortly after the
00:09:03 [W] Children Eddie's project itself launched and then Google join the Home Project Microsoft acquired this and Helm became very important to many many people many people like for example the city of Montreal
00:09:18 [W] Startup called dais in October 2015 shortly after the kubernative project itself launched then Google join the Home Project Microsoft acquired this and how it became very important to many many people.
00:09:20 [W] Been using Helm since May 2017.
00:09:27 [W] And so we offer online services to our citizens and many of those services are deployed in production using help.
00:09:29 [W] And now since April 20 20 Helm is a fully graduated cncf project.
00:09:37 [W] It has tens of thousands of GitHub Stars over 2 million downloads of Helm CLI every month.
00:09:46 [W] Did you know that Helm is relied on by over 70% of kubernative users. That's a lot of users.
00:09:48 [W] Probably more by now think that was a number from a cncf survey maybe a year ago.
00:09:55 [W] ago. So it's probably even more now.
00:09:56 [W] Let's talk about what Helm does for all these users starting by managing complexity how it makes it easier to Define your applications as a mulch Arts.
00:10:12 [W] So you can abstract Away business logic and make your apps easier to install now so lets you update your applications in a consistent repeatable way so that you can mirror Behavior across all your environments you can
00:10:23 [W] Private charts in a decentralized way and then there's rollbacks which are technically roll forwards to a past State. I cannot stress this enough how I'm does not provide time travel.
00:10:39 [W] So this is important to understand with a rollback any data that's been changed and your database on your file system.
00:10:47 [W] It won't be changed back.
00:10:50 [W] It's not like restoring a backup or anything. What a rollback really does is it makes it very easy to read it.
00:10:54 [W] Ploy an old version maybe because I don't know the latest version you deployed had a big bug in it and you want to go back to a version that work before that's what the rollback does.
00:11:04 [W] Okay, but enough talk.
00:11:09 [W] Let's get our hands dirty. Now. Let's look at how to get started with helm.
00:11:12 [W] For the demos, we're going to assume that you already have Helm installed. But if you don't you can look at the helm documentation for the particular installation details that are right for you.
00:11:28 [W] Alright. So for our first demo we're going to show you how incredibly easy it is to install software into kubernative.
00:11:33 [W] He's when using Helm we're going to install a web server.
00:11:38 [W] So in nginx web server into a brand-new name space today. So the first thing I'm going to do is make sure that I have Helm properly installed.
00:11:43 [W] Kubernative cluster and it does that using the variable Cube config and a queue config file just like Cube City Islanders in this case.
00:12:05 [W] I'm going to use a kind cluster which is kubernative Xin Dockers, which is a test Buster just for today's demo.
00:12:15 [W] The first thing I'm going to do is create a namespace for our demo since we're installing nginx.
00:12:19 [W] Let me call it nginx namespace and then I'm going to show you that nothing's in it, so
00:12:24 [W] So nginx get that's a service as you can see. There's nothing get poddisruptionbudgets.
00:12:54 [W] I'm going to name what I'm doing the software.
00:12:58 [W] I'm going to run and the recipe for it the chart in Helm terminology, which we'll talk about in the second demo is bitnami nginx.
00:13:10 [W] So I'm going to this is the recipe I want to deploy and I can just send that command.
00:13:12 [W] Helm then creates all the llamo necessary ships it off to kubernative.
00:13:21 [W] A check for a service in my name space you can now see that.
00:13:32 [W] Oh, I have a new service for nginx demo for pods.
00:13:35 [W] I have a running poddisruptionbudgets.
00:13:54 [W] Has been deployed with Helm.
00:14:01 [W] So if I asked for Helm list into that namespace, it shows me that I have one thing deployed.
00:14:08 [W] I can also ask for the status also in the namespace of my nginx demo and then it prints me again some information the name the last time it was deployed the name spacing which it is
00:14:20 [W] Provision etcetera Etc and some information provided by the software itself Beyond installing extremely easily.
00:14:30 [W] You can also uninstall very easily. So you've seen that multiple things have been created a service pods.
00:14:41 [W] Config Maps deleting each one manually. If you want to get rid of that nginx is a little more complicated.
00:14:47 [W] So Helm provides you a way to delete the whole package at once. So you'll guess it's called the uninstall command.
00:14:57 [W] I also specify which namespace so I want to uninstall from that namespace and I just simply give the name of
00:15:00 [W] My release which is called nginx demo, so I send that command and then Helm simply wipes out everything.
00:15:13 [W] So if I go back and I look for my comfy map, it's gone the service, excuse me, it's gone and the Pod it's gone as well.
00:15:20 [W] Great intro Mark. So once we have the helm package manager installed, we want to manage packages with it, which means we need to find some of these packages which are known as charts.
00:15:36 [W] How am I taken a decentralized approach first charts unlike Docker hub for example, which is a centralized registry of Docker images.
00:15:46 [W] H and using a catalog you can find their Registries that have the charts you want to install it may sound complex, but we'll take a look at how this works.
00:15:59 [W] So for our second demo, we're going to dive into charts and we're going to show you how you can configure Helm chart to setup and install the software you care about the way you want it installed on your kubernative cluster
00:16:15 [W] Started let me just show you a little bit about Helm completion shell completion, which allows us to work with the helm command line tool much faster. So
00:16:26 [W] Helm provides the completion command which allows you to Source a script that's going to tell the shell all the available commands Flags arguments and you can use it to complete your commands much faster,
00:16:41 [W] Example once I set this up I can do Helm install, press Tab and it's going to complete it for me.
00:16:50 [W] So you're going to see I use it extensively throughout the demo.
00:16:54 [W] So now let's get started on charts.
00:16:59 [W] If you want to install a chart you first need to know which repository it belongs to so if I use the helm repo list command you're going to see that Helm 3 does not ship with a default repository.
00:17:07 [W] It's up to you to Define which repositories you want to use as we mentioned before.
00:17:12 [W] There are catalogs available like Helm hub for artifact Hub where you can go and look for charts. Once you found which repository they belong to you can tell Helm about it.
00:17:27 [W] That's by using the helm repo add command.
00:17:32 [W] And in this case, I want to install nginx, and I know it's on the bit Nami repository.
00:17:36 [W] So I'm going to add it to helm in this case when I list the repos now. I have a repository storageos.
00:17:42 [W] if
00:17:44 [W] I want to install a different software. For example Nexus.
00:17:50 [W] I would then look on the catalog.
00:17:54 [W] I would find out that it's stored in the summer type register Repository.
00:17:56 [W] And I can add this one as well.
00:18:10 [W] Helm Search Command
00:18:14 [W] By using this I can specify that. I want to search my repositories.
00:18:22 [W] I can say that I'm interested in the Nexus software and it's going to search all the repositories. I have configured and tell me what are the names of the chart so then I can know which chart I want to install. So now if we want to install nginx.
00:18:37 [W] I would do Helm search repo nginx and it will show me that I can find it under bit Nami nginx.
00:18:51 [W] Let's see if we have it installed already Helm list everywhere all names faces.
00:19:00 [W] I have nothing installed. So let's install nginx like we had done in the first time.
00:19:03 [W] So that's how you install tab.
00:19:07 [W] I specify the name space I can use completion again.
00:19:08 [W] I want to name it nginx demo as we had last time and I want bit Nami nginx.
00:19:22 [W] So as you sign the previous demo it's going to install nginx for us and Helm list will show us that it is now available.
00:19:30 [W] So what did I just do when I did an install bit Nami nginx. What is this bit Nami nginx?
00:19:37 [W] To actually download the charts locally so that we can look at what it contains.
00:19:49 [W] So Helm pull and I'm going to tell it to immediately on tar to download and I use the same name nginx from Vietnam.
00:20:00 [W] Do this and now it has downloaded for me repository called nginx. And if I look inside that's the actual content of a chart.
00:20:13 [W] So a chart is made up.
00:20:18 [W] Let's not go over everything but the chart is made up of a chart file which describe the chart and a template directory which contains all the different.
00:20:28 [W] Yeah moles that Helm will tell kubenetes to instantiate. So in this case, they'll be a deployment.
00:20:31 [W] There might be a horizontal thought to scalar and Ingress a service Etc.
00:20:43 [W] There's also a values that llamo file which gives all the different configurable values that I can change for my own release of nginx my own deployment of nginx.
00:20:54 [W] So if I look at that file
00:20:56 [W] I'm sorry. I have to go inside the nginx apposite or e or directory if I look inside.
00:21:08 [W] Cooked it specified that the nginx version.
00:21:24 [W] installing is this one 119 Debian 10 are 0 and by default. It has all kinds of different things like
00:21:27 [W] There's no pot annotation specified but you could specify some the liveness probe the Readiness probe.
00:21:34 [W] And many many more things. So now that I have this I also want to show you that you can look at this values file without having to actually download the chart itself.
00:21:50 [W] You can use the helm show command and show and Helm show allows you to show all the details about a chart only the is charts file.
00:22:01 [W] readme file or its values file. So in this case, let's show the values file.
00:22:05 [W] And again, I specify a bit Nami nginx type it to less and the same file that I just showed you Helm shows it to me by downloading it off the internet just for my browsing pleasure.
00:22:19 [W] All right. So we saw in the file here that the by default the tag that I've installed for nginx.
00:22:32 [W] Is this version? So let's confirm the nest actually installed on my kubernative cluster.
00:22:37 [W] I look at the image version.
00:22:46 [W] It actually tells me that yeah, that is correct.
00:22:48 [W] I've installed the nginx version 119 one Debian 10 R 0 let's say that I want to upgrade to a newer version.
00:22:57 [W] I would use the helm upgrade command.
00:23:02 [W] So that would be Helm upgrade.
00:23:08 [W] I can do the help and I get all the different flags that I can use to configure it to configure this command properly.
00:23:15 [W] So let's go back and say helm.
00:23:17 [W] Helm upgrade I want to upgrade in the namespace and I've been using nginx namespace.
00:23:26 [W] I want to upgrade the release that I've been using nginx demo. I want to use that bit Nami chart.
00:23:34 [W] Nginx, and if I leave it like this it's going to reinstall the same version of nginx. So what I want to do is tell it no, I'd like to use a different value for the tag. So we're going to use
00:23:50 [W] The flag set to tell the chart that I want to tweak it so that it set the image tag llamo value to a different one.
00:24:02 [W] So here I found a more recent version which is the R14.
00:24:07 [W] In stones nginx again with the new values.
00:24:21 [W] So in this case, it replaces the old one and if I do a Helm list - all on their faces, I see that I'm on revision 2 so I have upgraded my nginx version and if I look at
00:24:32 [W] Is I see that I'm on revision 2 so I have upgraded my nginx version and if I look at Cube CTL and again check the version I should now see the new are 14 version.
00:24:39 [W] Check the version.
00:24:40 [W] I should now see the new are 14 version.
00:24:40 [W] Let's see if that worked.
00:24:41 [W] And yes kubernative and now aware that it should be downloading the R14 version.
00:24:47 [W] The helm upgrade allows you to override certain values. Like I've showed you directly on the command line with the set flag, but when you have many commands that you want to override it's better to use a file.
00:25:06 [W] So how grade help again has here the minus F or - values flag, which allows me to specify a file where all my different overrides are set up. So if I
00:25:20 [W] So you I have here a demo values file.
00:25:25 [W] Which contains a new version?
00:25:33 [W] So let's say I wanted to the are 14 version had a problem.
00:25:35 [W] I wanted to downgrade to our 13.
00:25:38 [W] I can specify a particular pull policy. I can set resources which are potentially not set already.
00:25:47 [W] for example, let's look at the resources if I want to set this up.
00:25:50 [W] Let's look at what's currently set up.
00:25:57 [W] So if I look at my deployment and I grabbed for limits because I want to set limits if I graph for limits currently, they're not set.
00:26:07 [W] So I would use the helm upgrade command.
00:26:14 [W] But in this case, I would specify the - F5 and I would say use the demo values that llamo file that I just showed you.
00:26:30 [W] So it's kind of like using the - set flying multiple times. So it will override the image tag the pull policy and set the resource limits.
00:26:35 [W] So let's do this and then I should point to the right file which is the right directory above and now again,
00:26:45 [W] upgrades the nginx version follows my instructions and then if I do Helm list
00:26:53 [W] I can see I'm not revision3 and vision three. It should now have limits.
00:27:03 [W] Let's check to the same if I do a described on my deployment.
00:27:09 [W] We actually look at the details. You see that now I do have limits and they have been sent to what I had originally requested in my overwrite file.
00:27:18 [W] If I want to look at the content.
00:27:25 [W] That Helm has sent to kubernative.
00:27:48 [W] So in this case, I would do Helm get from the namespace. I want the actual command is I want to get the values file.
00:27:57 [W] I want to do it for my nginx demo and pipe it to less and then you can see that Helm tells me when I installed last I used these user supplied values if you want to look.
00:28:08 [W] at the entire manifest the entire llamo than Helm has sent you can say Helm get manifest again for the nginx demo and type it to last and you'll see all the different things that Helm
00:28:24 [W] B so there was a config map that was a service with different values in them.
00:28:31 [W] That was a deployment that was created.
00:28:34 [W] And that was it for our nginx to work properly.
00:28:40 [W] So now you've learned how to configure charts using either a values file or the set flag, but what if the chart that you want to use doesn't allow you to configure those particular things.
00:28:57 [W] Let's say you want to change something that is not configurable.
00:29:01 [W] Now, you're in a little bit of a pickle. What you want to do in that case is probably improve the chart itself.
00:29:11 [W] You probably want to make it more configurable than what it is right now. So
00:29:12 [W] You would download it using the pull command.
00:29:16 [W] I would get the bit Nami nginx chart and we go into that directory and then I could actually edit the templates and modify them the way I want so that I can do more things than what the configuration of the chart currently allows.
00:29:31 [W] And if you really want to be nice, you might want to consider open sourcing contributing that change to the Chart itself.
00:29:40 [W] So that future deployments other people can do the same thing and benefit from your improvements.
00:29:46 [W] Once you've done that let's say I've modified my nginx chart. I can tell him to upgrade using instead of the Repository.
00:29:54 [W] Refusing here bit Nami nginx, I would say no, I want to use my local version which would be done.
00:30:06 [W] So because I'm in the nginx repository. I can then upgrade to the recipe that's stored locally on my disk.
00:30:14 [W] Helm makes an upgrade Helm list.
00:30:17 [W] - A and you can see now I have yet another revision that has followed the content of the chart that I had locally on my desk.
00:30:26 [W] The last thing I want to show you is what if you have a product that you want to deploying to kubernative.
00:30:36 [W] How do you have how do you create a chart?
00:30:37 [W] That might not exist on it?
00:30:40 [W] So Helm helps you with this with the helm create command.
00:30:41 [W] It's very simple.
00:30:42 [W] Helm create and simply give it a name. So I would do my product and now I'm creates a directory here.
00:30:50 [W] Called my product if I do three it creates as I had shown you earlier in the demo charts file.
00:31:00 [W] If it you want to use dependencies in other charts templates is all the by these are example templates. You would put the templates that you want to use the young moves that you want to use and values file and then you can set that up and
00:31:16 [W] It's very simple.
00:31:16 [W] Helm create and simply give it a name. So I would do my product and now I'm creates a directory here.
00:31:17 [W] Called my product if I do three it creates as I had shown you earlier in the demo charts file.
00:31:18 [W] If it you want to use dependencies in other charts templates is all the by these are example templates. You would put the templates that you want to use the young ones that you want to use and values file and then you can set that up and
00:31:20 [W] Our own configurable chart for your own product and then you ready to go and install your product with Helm into kubernative.
00:31:26 [W] Awesome, demo Mark, of course, we can customize and even make your own charts and there's lots of details in the docs about that.
00:31:37 [W] So I have a link here.
00:31:38 [W] You can check that out.
00:31:42 [W] So maybe you yourself are just getting started with him, but your organization already uses home to and it works great.
00:31:53 [W] Why change well, the helm project is nearly as old as kubernative itself. So over the last few years kubernative.
00:31:57 [W] Has evolved a lot and as a result Helms original design. Well, it predates many advancements in kubernative is like custom resource definitions kubernative the arm back.
00:32:12 [W] So Helm three addresses all this seriously like your Helm three time is now we care about stability and reliability and version 2 is pretty finished with bug fixes
00:32:24 [W] Receiving security patches in November 20 20, so I understand everyone competes for your attention and it's hard to know which projects you have to undertake. And if you do have Helm to in your organization that you inherited now is the time to convince everyone
00:32:39 [W] And if you do have Helm to in your organization that you inherited now is the time to convince everyone that Helm 3 is the future or the present is a case may be absolutely so what's really different about Helm three the most important
00:32:49 [W] Most important change is that Helm three directly uses kubernative API server, and that's instead of Helms old server side component, which was called tiller.
00:32:58 [W] With that Helm is significantly more tightly integrated with kubernative.
00:33:09 [W] But really the real reason behind the getting rid of tiller is all about security Now, the entire kubernative is arm back system applies directly to helm was something very important for our users
00:33:18 [W] Hey, if you're new to helm, you may see names like Galloping hippo in the docks and think what all is fun animal names are no longer a default.
00:33:34 [W] But if you miss them, you can still opt-in with - - generate name. Otherwise instead of names being auto-generated.
00:33:42 [W] You'll get an error unless you request Auto generation. So you have to produce or provide the name when doing a release.
00:33:48 [W] Yeah.
00:33:49 [W] All right. Another Improvement in Helm 3 is that we now have Library charts a library chart as the name suggests is a chart that allows sharing functions across multiple charts.
00:34:05 [W] So for example, you could set security policies in the library chart and then they would automatically apply to all your other charts.
00:34:15 [W] Library chart does not deploy anything itself.
00:34:17 [W] you have to understand that what it does is Define elements to be used by other charts.
00:34:22 [W] Really?
00:34:23 [W] It's about Define. You'll see the actual code word Define.
00:34:25 [W] And in these charts are really all about code reuse.
00:34:28 [W] Yeah, and also if you're new to helm when you're reading docks and trying out tutorials keep an eye out for that mention of tiller which we mentioned before that means that those materials need to be updated for Helm three.
00:34:46 [W] Kubernative has improved to the point where tiller isn't needed anymore.
00:34:52 [W] So a side effect of removing tiller is that although the releases are simpler now, they're actually not backwards compatible.
00:35:05 [W] So Helm V3 stores its metadata in the same namespace as the resources it creates.
00:35:13 [W] So there's no more tiller namespace for those that have seen it none of that. So that's one of the incompatibilities between version 2 of Helm and version 3, so it implies that you can't use helm.
00:35:24 [W] With the helm to release you can't upgrade a home to release directly using Helm three what you must do instead is first convert your Helm to release to the helm three format using the helm
00:35:39 [W] Again was provided by the helm Community. Then you can start upgrading using Helm directly.
00:35:46 [W] Yeah, that's a good point.
00:35:53 [W] So let's take a look at what we can do with that Helm 223 plugin.
00:35:57 [W] All right, let's jump in.
00:36:08 [W] Let's look at how version now with Helm three. The first difference you note is that there's no more server version only the client because there is no more tiller in Helm 3 and there was much rejoicing so our first step is going
00:36:12 [W] Stalling the migration plug-in into Helm 3.
00:36:18 [W] And we can see it downloads it installs.
00:36:24 [W] We can see that the plug-in is installed and another difference.
00:36:29 [W] Is that we can see that Helm three doesn't come with the stable repository by default.
00:36:38 [W] is what we call foreshadowing.
00:36:39 [W] We'll see what to do with that in a minute.
00:36:44 [W] So let's take a look at the migration plugin.
00:36:45 [W] What it does is it can convert with leases and it can migrate configuration can also do some cleanup.
00:36:55 [W] Let's try a dry run.
00:37:01 [W] This is dry. Run mode.
00:37:02 [W] It'll just show us what it's going to do.
00:37:04 [W] It won't actually do it. So you can see that it will create a bunch of folders and you know data directories will copy over anything that was in our home to install
00:37:18 [W] Is it can convert with leases and it can migrate configuration can also do some cleanup?
00:37:19 [W] Let's try a dry run.
00:37:19 [W] This is dry. Run mode.
00:37:19 [W] It'll just show us what it's going to do.
00:37:19 [W] It won't actually do it. So you can see that it will create a bunch of folders and you know data directories will copy over anything that was in our Helm to install
00:37:21 [W] What's in our home to install right now?
00:37:22 [W] We have several repositories that are not the default repository.
00:37:28 [W] We've added a few other ones again Helm 3 has no repositories by default.
00:37:35 [W] Let's look at our plugins in our home to Cluster.
00:37:36 [W] We have a few plugins just to have some plugins.
00:37:39 [W] What plug-in do you think we have in home three? Well, we have the one we just installed. We have the migration plugin.
00:37:45 [W] But that's it. No other plugins.
00:37:48 [W] Okay, cool, so what we can do here is we can do the migration it warns us that we might lose V3 configuration so, you know obviously take precautions but this is moved the
00:38:03 [W] And do here is we can do the migration.
00:38:04 [W] It warns us that we might lose V3 configuration.
00:38:05 [W] So, you know, obviously take precautions, but this is moved the configuration again from our home to to our home three.
00:38:09 [W] Let's take a look.
00:38:09 [W] Hey, look at that Home Three, we now have all those repositories as an option and we have the new plugins from home too, but it didn't overwrite the two to three plug-in that we already had in our home.
00:38:23 [W] M 3 so that was plugins, but you may be saying well, that's fine.
00:38:30 [W] But I have a bunch of releases that already exists in my home to Cluster and I would also like to preserve them.
00:38:34 [W] I'd like to move them over.
00:38:35 [W] Okay. So again, we moved configuration.
00:38:39 [W] But let's take a look at what's in the home to Cluster.
00:38:45 [W] We have some stuff that was released yesterday and just to make sure you see we have nothing up your sleeve our Helm 3 has nothing installed in it right now.
00:38:56 [W] So say we want to pick one of these let's take a look at what the convert tool does.
00:39:02 [W] And of course it has a dry run option as well.
00:39:07 [W] well. It has options for if tillers in a different name space as options if
00:39:11 [W] He's not even running in your cluster.
00:39:12 [W] So depending on what your Helm to looks like.
00:39:17 [W] You may need some of those options, but we're going with a really simple path here.
00:39:20 [W] We're just going to convert that postgres release.
00:39:21 [W] We're doing it and drive read mode first. We can see. All right, it's just going to create a copy of that postgres release which we only have one version.
00:39:28 [W] again. This is the simplest possible case, but you can extrapolate from this.
00:39:33 [W] Virt tool does and of course, it has a dry run option as well.
00:39:35 [W] It has options for if tillers in a different name space as options of tillers not even running in your cluster.
00:39:35 [W] So depending on what your Helm to looks like.
00:39:36 [W] You may need some of those options, but we're going with really simple path here.
00:39:36 [W] We're just going to convert that postgres release.
00:39:36 [W] We're doing it and drive read mode first we can see.
00:39:37 [W] All right, it's just going to create a copy of that postgres release which we only have one version again.
00:39:37 [W] Umm, this is the simplest possible case, but you can extrapolate from this.
00:39:38 [W] let's take a look.
00:39:39 [W] Put converted the postgres release and note that it says that the V2 Still Remains.
00:39:45 [W] So again, this doesn't do anything to our V2 cluster that we already had running.
00:39:49 [W] that was hope, you know, presumably production and important and we definitely didn't want to break in. Anyway.
00:39:55 [W] It's all still there.
00:39:58 [W] But and this is what we're it gets interesting check it out.
00:40:00 [W] The helm three stuff that we just brought over.
00:40:04 [W] it was
00:40:06 [W] Running in the old cluster a day ago, and we've brought over that exact release that was updated at that exact date.
00:40:19 [W] We didn't do a new deployment of postgres who brought over the one from before.
00:40:20 [W] Nicely explained Bridget.
00:40:22 [W] That was very good.
00:40:25 [W] So let's talk about what we just saw.
00:40:26 [W] It's V2 and V3 have different resources defense. They have different ways of working with kubernetes.
00:40:33 [W] So what does it really mean?
00:40:43 [W] It means that you must take the time to migrate your Helm V2 releases the helm V3. You cannot simply do a normal In-Place upgrade using him. That's the whole point of the 223 plug-in Bridges has just shown you.
00:40:50 [W] Check it out.
00:41:04 [W] The helm three stuff that we just brought over.
00:41:04 [W] it was
00:41:04 [W] running in the old cluster a day ago, and we've brought over that exact release that was updated at that exact date.
00:41:05 [W] We didn't do a new deployment of postgres who brought over the one from before.
00:41:06 [W] Nicely explained Bridget.
00:41:06 [W] That was very good.
00:41:06 [W] So let's talk about what we just saw.
00:41:06 [W] It's V2 and V3 have different resources the facts. They have different ways of working with kubernetes.
00:41:07 [W] So what does it really mean?
00:41:09 [W] It means that you must take the time to migrate your Helm V2 releases the helm V3. You cannot simply do a normal In-Place upgrade using him. That's the whole point of the 223 plug-in Bridges has just shown you.
00:41:14 [W] So if that seems like a lot the tldr is you want to make sure you using Home Three today, but we're here to help the community has written a detailed fact that's on the dock site and we even did some cncf webinars all about
00:41:23 [W] Count 3 and the conversion process absolutely and I think people should know that Helm has a very active and welcoming Community if you want to get involved are many ways to do so you can improve documentation by doing
00:41:25 [W] You could work on them.
00:41:31 [W] Some of them are even marked as good first issue or help wanted the bottom line is that we look forward to meeting you and don't be shy.
00:41:36 [W] Yeah, and the project Twitter handle will tweet out releases and other news and kubernative slack. You can also connect with the project on channel Helm - users in China Helm - Dev and channel charts and we also have
00:41:52 [W] And the community call every Thursday you could hang out with us every week and thank you for spending your time with us today.
00:42:02 [W] See you in the community and happy humming everybody.
