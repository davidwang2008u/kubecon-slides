SIG Service Catalog Update: KNOZ-0657 - events@cncf.io - Tuesday, August 18, 2020 7:41 AM - 85 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:04:15 [W] Hello, everybody. I'm a little sister can see you software engineer at sap Labs poem.
00:04:23 [W] Today, we have a session about the service catalog and it's woven into action and some updates about the state of the cgroup.
00:04:38 [W] So this is the only section service catalog doing this Cube Khan and it's only 45 minutes. I will try to consume only 25 and the Resolute for the Q&A session.
00:04:51 [W] me go further and what you will learn.
00:04:54 [W] basically
00:04:56 [W] first what the use cases for having Since cattle car and next I will briefly show you what is powered by and then I will show you a demo and because it's a cube Kang will mean to talk about Young's and last but not least.
00:05:12 [W] We've talked about our plans for current mic stands.
00:05:17 [W] So let's start and before we jump into the surgical abuse cases, let's start with the background how the application are developed as we all know allocation of the most application are not
00:05:33 [W] Often the interface with some banking services like database is Billing System some caches and so on. What is important is that those services are necessary for your application to function properly.
00:05:48 [W] What do you as a developer Donald to focus on creating and Magic managing those services for you is important to have some essays, but mostly you don't care whether I running and who is managing them.
00:06:03 [W] And one lesson of light to ensure that we on the same page. I'm talking about Services. I mean apart from other services like an object store or third-party services ligand as your text analytics, but definitely not about equality Services which are used for the DNS discovery.
00:06:19 [W] And so we already know that application use some services and we also know which Services we are talking about.
00:06:30 [W] So the question is, how do I get one?
00:06:33 [W] We are probably familiar familiar with the inference probably your organization of so pleasant so mostly to submit a ticket and wait until the we take it and process it then you need to take
00:06:45 [W] Get some credentials and figure out how to store them. But the worst thing is that the process May differ between various services that you want to use and access.
00:06:57 [W] but what if
00:07:00 [W] are we told you that you can have a single place in sub your kubernative cluster called marketplace where you can find all those services for example, MySQL or mongodb and also with some variants MySQL right now have a free.
00:07:16 [W] Zeke and Enterprise variant it's like a t-shirt.
00:07:25 [W] So the Enterprise will be the most expensive one. But you as a developer can start with the 331 and the provisioning process is the same for all of them.
00:07:36 [W] So you simply select a service in a given variant and provision it then you can create a binding in this case binding means creating kubernative secrets with all the information you need to know to canonical.
00:07:47 [W] Connect to that instance.
00:07:52 [W] of course, you can create more than one binding.
00:07:52 [W] So have a separate set of credentials for each application. And that's what service catalog delivers.
00:07:59 [W] behind the scenes
00:08:02 [W] most use cases a classroom in registers broker and it's one time operation. Once the book is registered Since cattle queries that broker and makes it offering available in market place.
00:08:19 [W] And what is service broker service broker is an independent server running somewhere.
00:08:24 [W] It can be inside your cluster but doesn't have to it offers a catalog of services for example in ecosystem. We have a DCP broker.
00:08:36 [W] And if after installing it you will see a manager offering from the gcpd inside your Marketplace.
00:08:42 [W] So you as a developer.
00:08:46 [W] A pay provision me and mySQL database and if it's coming from gcp broker, then the service is created on the gcp cite you as a user don't care how its created or manage.
00:09:02 [W] It's a responsibility of that broker to know how to do that and provisioning is not only about creating some banking services.
00:09:10 [W] It can also trigger an action for example, subscribe to an API.
00:09:16 [W] So during the provisioning you can subscribe to a text analytics service from the Asia and later.
00:09:23 [W] You can create a binding we find use the secret in the credential inside it so to sum up basically I can do anything that can be split into actions first one provision.
00:09:36 [W] So do something on the back end second one by so retrieve all the information that I need to know to connect to that instance.
00:09:43 [W] Yeah, and this whole concept is powered by the open service broker API specification.
00:09:55 [W] The point of it is to obstruct the lifecycle of managing and application.
00:09:57 [W] It allows Cloud platform in our use case kubernative to interact with a broker and service catalog is a client implementation where you can register all those Brokers as you see on the diagram the beauty of it is that you have
00:10:10 [W] No place and unified way to manage all those services that are coming from a different brokers in a in your cluster.
00:10:21 [W] Also, if you are a broker developer, you can write your logical new ones and register across all platforms that support the openebs book exact specification.
00:10:31 [W] Yeah, as I said the specification is about the rest API. So communication between service catalog and service broker is done by RS course, but the specification is more complicated because it is quite also how to handle errors
00:10:49 [W] Gage says retries and so on but think of all those things are implemented only ones instead of cattle.
00:11:01 [W] So you as a user you should you should only trigger a provisioning but rest will be handled by service catalog.
00:11:08 [W] And right now, let's see it in action.
00:11:14 [W] So let me share my screen.
00:11:16 [W] Okay.
00:11:24 [W] And now you should be able to see my console with free comments that I already executed to just speed up the demo. First one is
00:11:36 [W] creating a kubernative classroom elotl machine.
00:11:40 [W] I used kind to do it next. What I did is to install service catalog using have free client next. What I did is to install minibar and minikube rocker is a lightweight implementation just for the demo purpose.
00:11:54 [W] My console with three commas that I already executed to just speed up the demo. First one is
00:11:55 [W] creating a kubernative classroom elotl machine.
00:11:56 [W] I used kind to do next. What I did is to install service catalog using Humphrey client next. What I did is to install minibar and minikube rocker is a lightweight implementation just for the demo purpose.
00:11:57 [W] All right register broker and should have something already in my Marketplace. But before we check it, let's check the status of the broker and maybe one small introduction right now for the demo.
00:12:09 [W] I will use as the cap and as we got is a CLI developed and published by us just to interact with the service catalog.
00:12:15 [W] It gives you more user-friendly experience when you want to talk to the service catalog.
00:12:22 [W] For example, you are not familiar with the kubernative.
00:12:23 [W] So what I can do is to type as we cut get broker. What I can say is that I have a one broker register be Market form and using status ready. So I should see something in my Marketplace as we got
00:12:38 [W] It gives you more user-friendly experience when you want to talk to the service catalog.
00:12:39 [W] For example, if you are not familiar with the kubernative, so what I can do is to type as we cut get broker.
00:12:40 [W] What I can say is that I have a one broker registered email platform and using status ready. So I should see something in my Marketplace as we got more customers.
00:12:41 [W] And yeah, I see couple of services what I see here is like + + + same as I showed you previously and in that example is that the broker that I installed is?
00:12:55 [W] And yeah, I see couple of services what I see here is like + + + same as I showed you previously and in that example is that the broker that I installed is?
00:12:57 [W] Somehow exposing and charts to service catalog as a class and plants and in that scenario plans another T-shirts.
00:13:09 [W] they are describing the version of the database.
00:13:12 [W] So, for example, I have more a DB mongodb MySQL and postgres red is with quite a lot of versions.
00:13:21 [W] What I can do next is to describe class so I can execute this week at describe Plus mariadb.
00:13:26 [W] What I see here is once again all plans connected with that class.
00:13:31 [W] So all variants that I can install I see the name tags and also from which broker that class was created. So I know that it's from coming from the mini broker.
00:13:43 [W] So let me let us assume that we want to have in our class for some application that means to connect to some database and it's a Maria DV.
00:13:56 [W] So what I can do if I speak at is to say SD card provision and the name of the application the instance.
00:14:00 [W] sorry class and plants that I want to provision. But before we do it, I'll just show you that you can simply say provision and ask for help.
00:14:12 [W] Here you will see the usage of it as I previously previously. We need to add some name also refer to plan and class.
00:14:25 [W] And it's all Maria DVD.
00:14:28 [W] So what I can do with a SIM card is to say SD card provision the name of the application the instance.
00:14:29 [W] sorry class and plants that I want to project. But before we do it, I'll just show you that you can simply say provision and ask for help here.
00:14:30 [W] You will see the usage of it as it's appreciated. Obviously. We need to add some name.
00:14:32 [W] Also refer to plan and class. So in that way your create a new instance of a service, of course, you can specify some parameters to override the default settings.
00:14:35 [W] There is a few different ways how you can do it using Secrets Jason's or just key value pairs.
00:14:37 [W] So also again provision.
00:14:41 [W] Demo Mario TBH.
00:14:47 [W] Let's hit the button what we can see here is that the request was sent there is no parameters defined during the provision request.
00:14:59 [W] in most of skater use cases. I can set the initial database has some size of the database the name of the properties and stuff like that.
00:15:05 [W] So right now I can check the status of it. So get instance.
00:15:09 [W] As I see I have one in stocks inside my default namespace which is in ready state.
00:15:21 [W] So right now I know that my broker should deploy a Gantt chart also entertaining space.
00:15:27 [W] So check that if we have some samples here and yeah, that's true just few seconds ago Chuckles deployed. And right now I have some instances, but still I do not know how to connect to that database.
00:15:36 [W] Entertaining space subject let if we have some some pots here and yeah, that's true just few seconds ago Chuckles deployed. And right now I have some instances but still I do not know how to connect
00:15:39 [W] Seems to follow gives you is an option to just bind to that instance so I can say since as we got bind the name of that instance and hit the button.
00:15:52 [W] Once again, I didn't send any parameters but more sophisticated for more sophisticated sophisticated classes.
00:16:00 [W] You can set their some roles that you want to have a sign for your users and stuff similar to that.
00:16:08 [W] So.
00:16:09 [W] Let's check the status of the binding.
00:16:11 [W] As I can see there is a 1 binding in my default namespace in real estate.
00:16:19 [W] So I told you during the demo that we pining Cisco should also create a secret in my name space with all the information that you can note the connector that instance.
00:16:28 [W] So let's check with I have some secret here.
00:16:29 [W] And that's true because I have it.
00:16:34 [W] it's here is a few seconds ago created and the name is exactly the same as my binding because I didn't overwrite it.
00:16:43 [W] So what I can do is to describe that secret scribe secret and as promised in under data, we have quite a lot of information at all of them are useful when
00:16:54 [W] after that instance
00:16:57 [W] and normally space you will just get that credential and inject into your application probably into your part in later on it can be consumed by your application and execute some business logic.
00:17:12 [W] And I showed you how all those commands using SD card because it's really nice.
00:17:19 [W] It gives you much better user experience when interacting with the service catalog, but still under the hood what since catalog does is to create a custom resource.
00:17:33 [W] So when I execute as we get provision, then it creates a custom source code service instance so I can check it if I have something like that and that's true.
00:17:43 [W] Of something like that in my pastor and Simon a space.
00:17:48 [W] It's almost the same output.
00:17:54 [W] But with the custom resource, what I can do is to also ask about VMware version.
00:18:02 [W] So I have more diverse and it's true. The status is quite huge because there is more information about it.
00:18:09 [W] There are also more information about the under spec field, but the most important ones are service class name and service planning. So let me go back to my
00:18:13 [W] presentation
00:18:15 [W] and the
00:18:19 [W] Just misses but we are only required field.
00:18:34 [W] This definition are equal to the SD card command that you can see below but this yum you can use to describe your infrastructure as code.
00:18:44 [W] For example, you can use it in your bus trips or bundle in some Helm child and deploy that into your Custard in some ci/cd.
00:18:55 [W] Which is watching own surveys and when you create a service instance the controller reacts and sent a race provisioning code to the correlated broker.
00:19:07 [W] And I'm general service catalogue has eight CR these are we not describe all of them.
00:19:16 [W] But what is worth to mention is that we have a cluster and misplaced code Brokers if you register a cluster a broker, then it's offering is available across all met spaces, but if you decide to go
00:19:29 [W] Then you will limit the of this offering to a given line space.
00:19:36 [W] is cool for example because of security reasons.
00:19:37 [W] And yeah with the arm, you also have more power having free access you can customize all Fields under spec. For example, I added catalog restriction which simply allows you to skip those services and to not
00:19:55 [W] Free access you can customize all fields on their spec. For example, I added catalogue restriction which simply allows you to skip those services and to not show them in your Marketplace.
00:19:57 [W] And you can of course create more sophisticated rules and that more stuff like how often the broker should be refreshed with the new offering.
00:20:07 [W] And yeah final summary of that story.
00:20:13 [W] Why are we doing this?
00:20:15 [W] The answer is quite simple.
00:20:17 [W] We want to help you to discover tip Party Services. And as a result, you can focus on writing your business application and at the same time be sure that your service is managed by experts
00:20:30 [W] And if you are a service provider, that is also awesome because the crazy thing is that you write a broker which is a platform agnostic so we can be integrated in all platform that supports open cgroup a specification for example at the
00:20:45 [W] Register it in kubernative and Cloud Foundry and serious about is a project located under kubernative cgroup o story.
00:20:59 [W] Of course, it can be deployed using Helm charts as I showed you in the demo.
00:21:03 [W] We also support him free currently.
00:21:06 [W] This catalog is in the beta version, but it's already used on production by sap and IBM and as we are already started talking about the stackrox.
00:21:15 [W] Datastax go into more detailed update.
00:21:20 [W] um
00:21:22 [W] Yeah, almost a year ago.
00:21:28 [W] We changed the architecture of the service catalog.
00:21:34 [W] And now we have all the free release which is the latest release available on our GitHub and
00:21:40 [W] So what change the new service catalogue as you can see on the diagram we could do we got rid of the API server and it is CD and replace that with cri-o these that simplifies a lot.
00:21:54 [W] We also did the web server which allows us to intercept crack request so we can set some defaults validate manifest before storing them in its City
00:22:08 [W] So query QR code so we can scan it because it's punch to our migration guide.
00:22:18 [W] Next. Yeah, this change Force us to have two branches master and ordered to for the API server version and according to the kubernative best practices.
00:22:39 [W] We supported the deprecated version for nine months.
00:22:41 [W] But what is important is that the support expired at the end of last month?
00:22:47 [W] So please take into account and use and submit issues only for old.
00:22:51 [W] free version
00:22:53 [W] Yeah other six service catalog. We have two sub projects or one is a mini broker.
00:23:08 [W] We just showed you during the demo and we also use it in the options dialog work for documentation.
00:23:12 [W] The second one is a open since Booker client written in go.
00:23:15 [W] It's simply abstracts rest call defined in opentelemetry API specification and you can use it in your go applications. Of course it also used in
00:23:25 [W] service catalog controllers
00:23:29 [W] next plans for for the service catalog
00:23:35 [W] End of last month, so please take into account and use and submit issues only for all the free version.
00:23:39 [W] Yeah, Alice accessories catalog. We have two sub projects or one is a mini broker.
00:23:41 [W] We are just showed you during the demo and we also use it in the options' catalog work for documentation.
00:23:42 [W] The second one is a open since Booker client written in go.
00:23:42 [W] simply abstracts rest call defined in opposite prepare API specification and you can use it in your go applications. Of course it also used in our
00:23:47 [W] service catalog controllers
00:23:49 [W] next plans for for the service catalog
00:23:49 [W] So definitely documentation has we want to combine with the Official Guidelines want to clean up the condition structure right more tutorials and also better describe what kind of features we already have in service catalog
00:23:51 [W] As we want to combine with the Official Guidelines want to clean up the condition structure right more tutorials and also better describe what kind of features we already have inside this catalog and what we come up in the
00:23:53 [W] Hmm.
00:23:57 [W] We want to be complying with the new offensive Rook API currently we support 2.14 which is a little bit behind the officials back because right now they are working on to the 16th.
00:24:10 [W] we to catch up on it.
00:24:12 [W] We already did a lot of work regarding see I Travis is still used for cutting your wrists. And the best option would be to use only one technology for our ci/cd.
00:24:27 [W] Migration of stability resources under seek control right now on the left. You can see the URL that we are currently supporting, but those URL were created were created by Sigma Turner's and we
00:24:43 [W] Them to the official ones and just be combined with the best practices.
00:24:48 [W] The decision of the future of the purpose and function as a huge topic and during the demo I showed you that you can create an instance, which is awesome later on you can redefining a lot of bindings if you want, but then you end up with
00:25:05 [W] Awesome later on you can create a binding a lot of bindings if you want, but then you end up with the kubernative secrets where you have all those information that you need about in entrance scenario.
00:25:12 [W] You have an application for which you want to inject those secrets and there is idea called process which gives you an option to inject secrets into your deployment later on what
00:25:27 [W] And even in Kuma project we created something called service binding usage which ci/cd to go to the controller. And we've that when you create that custom resource, we need to specify the binding and the target application
00:25:42 [W] Down by controller and under the hood.
00:25:50 [W] We are using purposes, but it's not the core functions of the service catalog yet.
00:25:52 [W] Maybe we will donate that.
00:25:54 [W] Maybe we'll come up with something else or maybe we'll decide that is out of scope for the service KakaoTalk. But yeah decision still needs to be made and your feedback is really welcome and the ideas how we can do it and your use case is about
00:26:07 [W] One more thing so recently guys from VMware have created a proposal for supporting data operations, which is really interesting topic for all service catalog users.
00:26:27 [W] Simply it is gives Brokers and option to describe generics extensions.
00:26:39 [W] So for backups for some gasping my service and stuff like that.
00:26:41 [W] So, please take a look and leave a comment on what you think about it.
00:26:44 [W] As you see a lot of things are going on and if you want to become a contributor then join our bi-weekly Sig meeting. It takes place every other Monday at 1 p.m.
00:27:00 [W] Pacific time.
00:27:00 [W] Yeah here we also have some useful links.
00:27:13 [W] The presentation is available on the coupon site website so you can download it from there and use those information.
00:27:14 [W] Yeah, and with that we finish the main presentation, but now I'm open for your questions.
00:27:24 [W] Thank you.
00:27:24 [W] Hi, so we're going to go into some of the questions you all have been asking. So let's just get down to it.
00:29:04 [W] First up can we limit services and plans to certain namespaces?
00:29:11 [W] So a couple people asked a couple variations of this I'm gonna answer them all at once currently.
00:29:15 [W] There's two mechanisms to limit access to Services.
00:29:22 [W] Hi, so we're going to go into some of the questions y'all asking. So let's just get down to it.
00:29:29 [W] First up can we limit services and plans to certain namespaces?
00:29:29 [W] So a couple people asked a couple variations of this.
00:29:30 [W] I'm going to answer them all at once currently.
00:29:30 [W] There's two mechanisms to limit access to Services.
00:29:31 [W] It's possible when you install a broker to install it as a namespace scope resource in which case it's dependent classes in plans will be available at only in that namespace.
00:29:33 [W] Additionally. It's possible when installing a broker to whitelist or Blacklist.
00:29:37 [W] Civic services on that broker to further show which ones show up in the system.
00:29:39 [W] Next up any support extensions for integration with logging and monitoring services such as Blanc or Prometheus So currently I don't believe we have any particular special integration with logging.
00:29:56 [W] Show which ones show up in the system?
00:29:57 [W] Next up any support extensions for integration with logging and monitoring services such as Blanc or Prometheus So currently I don't believe we have any particular special integration with logging.
00:29:58 [W] Way service catalog was deployed is just in a kubernative cluster.
00:30:05 [W] So provided you have any any integration with how cou panels it's logs you'd be able to plug in that solution to service catalog but we ourselves might not have any special implementation.
00:30:17 [W] All right.
00:30:18 [W] Yes 110 thing is that we exposing some metrics or from controllers and web hooks. So you can just create a service monitor if you have Prometheus in your cluster and in that way just got a low mattress and expose them to some graph another ports.
00:30:35 [W] Yep.
00:30:39 [W] Okay, what is the current state of adoption of service catalog by various firms?
00:30:46 [W] So I'm only sort of familiar with large like Cloud platform companies.
00:30:57 [W] I myself work for IBM.
00:31:00 [W] I know we use for bunch of services on our cloud.
00:31:03 [W] I know VMware uses it.
00:31:07 [W] I know.
00:31:08 [W] You're still on it.
00:31:15 [W] and I say p is at some point obviously relevant to you that.
00:31:16 [W] That's true.
00:31:18 [W] So I'm only sort of familiar with large like Cloud platform companies.
00:31:29 [W] I myself work for IBM.
00:31:30 [W] I knew use for bunch of services on our cloud.
00:31:30 [W] I know VMware uses it.
00:31:30 [W] I know.
00:31:30 [W] You still on it?
00:31:31 [W] I know I say p is at some point obviously relevant to you that that's true.
00:31:31 [W] Yeah, and then I know there's a whole bunch of smaller like individual vendors that offer their thing by service cat or via service broker.
00:31:34 [W] But I couldn't I couldn't really speak to those specifically.
00:31:38 [W] I just kind of work on the service catalog side of things.
00:31:39 [W] Can we customized The Binding secrets for can we customized The Binding prefix with for example a prefix to support multiple service bindings to a deployment so
00:31:59 [W] But I couldn't I couldn't really speak to those specifically.
00:31:59 [W] I just kind of work on the service catalog side of things.
00:32:00 [W] Can we customized The Binding secrets for can we customized The Binding prefix with for example a prefix to support multiple service bindings to a deployment so
00:32:01 [W] Secret is always the same as the name of the binding you the user can control the name of the binding so you can name it whatever you want. Additionally.
00:32:16 [W] There's nothing stopping you from having multiple Secrets bound to a single deployment.
00:32:22 [W] So hopefully answers this question. I don't
00:32:24 [W] Really get it if it doesn't.
00:32:27 [W] Yeah, I think that's mostly answer the question. And one thing is that if you we creating a secret there you have a key value Pairs and you can just drink the injection those secrets into your deployment. You can just specify the prefix and we also
00:32:43 [W] When the rejecting the same Secrets because there is a quite common to just name the key as a URL or password.
00:32:56 [W] So in that way we just during the injection of the secret. We just adding a prefix so we know that and I will ya
00:33:02 [W] yes, that's cause he's like quite painful with the same.
00:33:08 [W] That's like a kubernative thing.
00:33:11 [W] That's not a service catalog specific feature that many secret. Yes. Yes.
00:33:14 [W] How do you deal with the case where you have an application interacting with multiple cloud services, for example a cloud bucket and a queue will that lead to to I am roles being created or with the service catalog merge, the permissions needed in create one.
00:33:32 [W] Roles being created or with the service catalog merge the permissions needed and create one.
00:33:34 [W] I am role when both are bound to a single application.
00:33:36 [W] I think it's at least that question should be answered by the broker developers and from my experience because we use the gcp broker I can say that they have two strategies there so you can just create
00:33:53 [W] Or bunch of services and store those credentialing one secret and later.
00:34:02 [W] You can just provision few of them with their reference to that common.
00:34:08 [W] Not the common but shirt credentials.
00:34:14 [W] The other option is to just for each of the services create your own am so but yeah, it's a little bit depends on the broker developers and how they represent their functionality inside
00:34:23 [W] is create your own am so but yeah, it's a little bit depends on the broker developers and how they represent their functionality inside the service catalog because what we are doing is only to provisioning and
00:34:26 [W] we are doing is only to provisioning and binding to a given instance and
00:34:30 [W] I think that should answer the question. If you will just check the gcp broker side, then you can just check their approach for such strategies as I am.
00:34:43 [W] They are disabled are a lot of steps can answer to it.
00:34:51 [W] It's really beyond the scope of service catalog and it's up to the broker author how specifically they handle that sort of thing.
00:34:54 [W] Please share your views on operators forces service catalog.
00:35:03 [W] So operators are something we hear a lot about a sort of a competing solution to service catalog. But at least for the time being they aren't really trying to solve the same problem
00:35:14 [W] fully mature ecosystem for basically implementing cri-o is and then controllers the base are based on this year DS whereas the service catalog is more of an interface point between kubernative
00:35:30 [W] Infrastructure, there's like other weird stuff you can do with it, but that's that's how I do it.
00:35:39 [W] So I don't I don't know necessarily if they're competing.
00:35:45 [W] There are some people who are trying to build operators up to the point where they could be a solution to the same problem service catalog is trying to solve but I don't think it's quite there yet.
00:35:51 [W] There any brokers available for cloud provider services like AWS RDS or Azure Cosmos DB?
00:36:07 [W] I don't know about those two Services specifically.
00:36:16 [W] I do know many Cloud providers offer their services via service broker.
00:36:22 [W] I know as you're at least huge recently, so I don't know if they still do but like yeah, like she's you're saying I know gcp offers a bunch of their services via broker.
00:36:33 [W] I know here I am we offer
00:36:35 [W] anything you could ever want via broker.
00:36:39 [W] So I definitely think there's lots of stuff out there in the ecosystem right now today, but I can't speak to those two things specifically.
00:36:49 [W] You questions are coming in apparently as your stop supporting Heroes be implemented a s*** in favor.
00:37:09 [W] would operator.
00:37:10 [W] How does the upgrade of abound service happen is it part of the service catalog functionality?
00:37:21 [W] So assuming you mean like I provision a database I buy into that database.
00:37:22 [W] How does that day? That specific database instance get upgraded that isn't part of service catalog functionality yet.
00:37:36 [W] So that's really up to the service broker author at this current point in time to say when and how upgrades like that happen. The open Surface Pro crepey is
00:37:43 [W] The process of trying to add that mechanism to the spec to allow the platform to trigger or be aware of updates to instances like that, but that isn't quite there yet, but it might be in the very near future.
00:37:55 [W] Can you repeat the blacklisting and whitelisting aspect of services and plants? So when you first add a service broker to the catalog you can whitelist tag or Black List tag specific services from that Brokers catalog
00:38:12 [W] To allow the platform to trigger or be aware of updates to instances like that, but that isn't quite there yet, but it might be in the very near future.
00:38:13 [W] Can you repeat the blacklisting and whitelisting aspect of services and plants? So when you first add a service broker to the catalog you can whitelist tag or Black List tag specific services from that Brokers catalog.
00:38:15 [W] You know somehow filter the stuff that actually shows up in the the marketplace of services available on your cluster.
00:38:20 [W] How does the operator side of the Surface Pro curve look like what options are you aware of?
00:38:48 [W] So I'm assuming this just means like someone who operates the service broker not operators the kubernetes thing.
00:39:03 [W] So a service broker itself is just a if you actually go look at the spec.
00:39:06 [W] It's just a web server that implements five and points.
00:39:09 [W] Fetch catalog provision instance provisioned binding deprovision binding deeper Vision instance.
00:39:20 [W] So it's actually pretty simple and once you have that up and running, you know, it'll work with anything that hasn't always be implementation.
00:39:30 [W] I know there are libraries out there that allow you to quickly stand over Rook Grove done a couple myself just for fun, but it's not too difficult to stand up the actual broker part because it
00:39:39 [W] I am for today. So thank you all for coming.
00:39:50 [W] And thank you for coming to our talk.
