Notary v2 Outstanding Issues Working Session: CONV-3795 - events@cncf.io - Wednesday, August 19, 2020 10:46 AM - 1189 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:01:37 [W] Hello, this is well.
00:08:22 [W] This is says it's the nature of you two working session. Unfortunately due to the difficulties of recording and live everything.
00:08:29 [W] We've had to do the work for you, but we'll be doing some sessions shortly anyway, so I'm do come along but this is a summary of the work in progress for nature. Ev2.
00:08:40 [W] I'm Justin Cormac.
00:08:46 [W] I'm an engineer a darker maintainer of notary and I'm on the cncf TOC and I work with security and I've got a
00:08:47 [W] interest in security and Cloud native
00:08:51 [W] Hi, I'm Steve was Guillermo p.m. Architect on Azure container registry.
00:08:58 [W] I work on things like, you know, Tob for oci and registry workloads EI artifacts and auras and one of things that really enjoy is just the whole end and work flows from Registries for Dev to deployment where Registries play a key part of that.
00:09:11 [W] We've been engaged in this notary V2 thing for a while and we're excited to share our progress.
00:09:17 [W] So what is nature ev2 about that if you missed if you really want to see it from the beginning we had an intro so I shouldn't but you can which you can also what sure attend but the key things that we're looking for a notary V2
00:09:35 [W] Of missing from the existing nature eveyone version. First of all, registry knative what we really mean by that was that nature ev1 was actually implemented as a database that you and
00:09:50 [W] Mantid as a database that you and application that you run on the side of a registry, but that's because there's all sorts of issues. It turned out over the five years or so.
00:10:01 [W] We've been running it because it's not a native part of the registry and it doesn't it's not part of the registry protocols and signatures and artifacts are not actually registry objects. And that makes a lot of things more difficult.
00:10:13 [W] So we really want everything to be natively part of the registry.
00:10:18 [W] security there's a bunch of security things that were not ideal with V1 Trust on first use was one that was particularly problematic for a femoral ephemeral servers trusting things the first time they
00:10:32 [W] First time is the only time and so it doesn't really give you much guarantees, but there's other other security guarantees.
00:10:42 [W] We want to add as well portability we want as well as being registry knative. We want every registered to support notary and we want people to move artifacts around which was not a design criteria at all for notary V1, because at the time there weren't a lot of Registries
00:10:56 [W] Kind of registry multi registry workflow that we've seen in the last five years building up.
00:11:11 [W] This is kind of multi-tenant project for lots of people run very large Registries for lots of users. Some people who run private Registries themselves, but their that they're often multi-tenant use cases.
00:11:17 [W] There's lots of offline use cases that again weren't really an issue with V1. It kind of can be kind of persuaded to for to work with them. But it
00:11:28 [W] Really a use case that was thought of at the time and use a book you kind of works in the offline scenario your Gap because you can't move them.
00:11:35 [W] Anyway.
00:11:36 [W] Yeah, that's as well and then use a bit of say we really want it to be much easier to use so that everyone can use it. So notary V1 didn't meet all these requirements, but that's what we want to do is fee to
00:11:51 [W] And the usability is a big deal right here because if something is super secure, but you can't use it. Then people won't yeah, it doesn't matter.
00:11:59 [W] It's super secure.
00:12:03 [W] Yeah, absolutely. And I've got a balance that usability and security aspect.
00:12:07 [W] Yeah, and they want has not got the usage that we'd like and that's one of the issues.
00:12:09 [W] And I think a lot of that is about usability.
00:12:12 [W] So there's a bunch of requirements.
00:12:20 [W] Learn but you can't use it. Then people won't yeah, it doesn't matter.
00:12:27 [W] It's super secure.
00:12:27 [W] Yeah, absolutely and and got a balance that usability and security aspect.
00:12:28 [W] on V1 has not got the usage that we'd like and that's one of the issues.
00:12:28 [W] And I think a lot of that is about usability.
00:12:29 [W] So there's a bunch of requirements.
00:12:29 [W] So we've spent a lot of time working on requirements.
00:12:30 [W] This is just a very short summary of them really and there's lots more in the in the repo.
00:12:36 [W] So what some of the things that you know, we want is support for offline signatures.
00:12:41 [W] We want support for multiple signatures people want their keys to
00:12:43 [W] a scared and external places like top of those key voltage V1 has yubikey support but not it wasn't designed for widespread use of external key storage and
00:12:59 [W] And it should work, you know, whatever kind of user you are with your hobbies or an open source project or a large Van Der or anything so different, you know different kind of keys are suitable for those kind of use cases and
00:13:13 [W] We talked about a little bit before but that's something that's very important because that's kind of the essence of cloud native.
00:13:24 [W] Yeah, it's kind of like a little fancy word. I mean by a femoral clients while we just spin them up and down all the time.
00:13:30 [W] It's like that's what we do in Gladiator.
00:13:32 [W] It's like things are not long-lived and that's it, but it does affect the security.
00:13:35 [W] I mean just from cloudevents areas that we want you to be able to spin up containers Superfast and the ideas we have compute that sitting there waiting for all customers and when we hand it to you, you know, like Justin gets an instance to run his container.
00:13:50 [W] There's nothing on it yet. So he's got no previous state on it and that's what we kind of mean by the ephemeral clients is you get a something given to you you use it you toss it and there's no State restored from a previous point, but it want to make sure that if
00:14:04 [W] Model has to account for this those kinds of things.
00:14:08 [W] So we are trying to put together a workflow that we would be able to communicate and we'll spend a couple of slides here. Just talking about the communication model because when you have so many people working on something that is been the the coredns effort.
00:14:25 [W] So we have this example, we have the web at networks and Company and they're putting together a network monitor software.
00:14:32 [W] They build it off on their own.
00:14:35 [W] They've got their own build environment doesn't really matter whether it's in a cloud or not point is they have a build environment.
00:14:40 [W] Generating an image their Network monitor software.
00:14:45 [W] They have a bill of materials that says what's in it.
00:14:50 [W] They might even have some source for some open source projects for a GPL licensing requirements and so forth and they'll bundle all that.
00:15:00 [W] Well the bundle those separately the separate oci artifacts you could submit to a registry and you can put in oci index on it to say I want these things to be as one.
00:15:08 [W] one. This is the kind of model that people are looking to now the moment lot of people are just pushing images, but the whole bill of materials and
00:15:14 [W] and all the other requirements have been quite important for this situation as we've been discussing.
00:15:23 [W] So when they put these things together like a bill of materials and all of these things are only is good if you can trust them, so we want to make sure that the web at networks can sign it with their key.
00:15:30 [W] Woody they want to be able to push it to a well-known location like Docker Hub. Now as soon as you push it the docker Hub, we want to make sure those keys can go with it.
00:15:47 [W] This is the transportability thing that we were talking about.
00:15:51 [W] So now why would networks has got some content up on Docker Hub, but they're kind of in the community space.
00:15:57 [W] We don't really know if they're good or bad or evil or just some random person.
00:15:58 [W] They have a key.
00:16:01 [W] but don't really know about them. So what we want to be able to do is support
00:16:08 [W] Rio's where we could add another key for some trust so Docker Hub might want to say I want certified content and you can do that more than just a badge on the page.
00:16:19 [W] We could actually have it signed by Docker iot saying all right.
00:16:21 [W] This now has a secondary key.
00:16:29 [W] So if a company like Acme Rockets over here has a policy that you could only bring content certified content from Docker Hub, then they can now pull that and they might be blocked by pulling it when
00:16:35 [W] But networks wasn't certified as they get to you. No, no one trusts rabbit networks and other software they might trust those keys as well. So those are the kind of things that we're thinking about.
00:16:46 [W] But now as with any best practice, I want to bring that Network monitor software into the Acme Rockets environment because we don't want to deploy production stuff from public points of interest.
00:17:02 [W] And you can do that more than just a badge on the page.
00:17:05 [W] We could actually have it signed by Docker iot saying all right.
00:17:05 [W] This now has a secondary key.
00:17:06 [W] So if a company like Acme Rockets over here has a policy that you could only bring content certified content from Docker Hub, then they can now pull that and they might be blocked by pulling it when webinar Works wasn't certified
00:17:07 [W] Working or any of that even in the best case scenarios if wabbit networks is publishing a security fix which is still from them that doesn't necessarily mean it's going to work in my environment.
00:17:20 [W] They might have done something around doing security patching that affects how the software to run in my environment and might fail so we always want to have a certification process for any content we depend on and I might so in that case
00:17:30 [W] Have an Acme Rockets the key or assert a signature assigned to that content.
00:17:45 [W] So now I know that I only trust that from Docker Hub or web and networks, but I'm only going to deploy stuff that has been verified and proven verified by an acne rocket ski, I might have a deploy artifact that I'm also signing. Keep track
00:17:52 [W] And then you would have something like a policy management infrastructure, like open policy agent and the idea here is that we have signatures that attest to what it is, but we're not stating anything about policy.
00:18:08 [W] We're not stating.
00:18:10 [W] It has to be signed by three entities or anything what we're saying is that's more of the policy management software's responsibility and it can take that content and say alright it's signed with the Acme rocket ski, so and it comes from the Acme Rockets.
00:18:25 [W] Registry so I can actually deploy it in my environment.
00:18:30 [W] So that's kind of gives a sense of the workflow. We also can support air-gapped environments.
00:18:34 [W] That's also a core requirement. So all this validation and so forth can happen there.
00:18:38 [W] And air gap is kind of interesting because we used to think of air gap requirements as being you know, the submarine scenario or the oil platform.
00:18:53 [W] But what we're seeing more and more is customers that have been on prompt on-prem and reluctant neighbor to go to the cloudbees because they always have their private IP environment that we can provide that in the cloud. They still get a private Network.
00:19:02 [W] they have more trust around it and there literally is no public and points on inside of those environments or the public in points are very tightly controlled.
00:19:08 [W] So prototyping things is the interesting one. So there is as with any of these complex systems.
00:19:19 [W] The actually understands all these pieces together.
00:19:38 [W] So how do we establish this model for communication to bring people in every trying to we try to understand people's requirements and and because it's turns out that these things are not we're not totally clear and at all.
00:19:40 [W] So if I said we as everybody watching this we want to build a house together.
00:19:47 [W] What does that mean to you?
00:19:48 [W] Like clearly that's not the extent of the house and I guess it's close to an A-frame. But you know, if everybody's trying to picture that house that we're going to build what is your bias?
00:19:59 [W] What is your background?
00:20:02 [W] What is the the experiences that you've had that make you think about?
00:20:05 [W] What is this house going to look like and you know, I can write words down right? We can write requirements and all that but even those
00:20:11 [W] Birds get interpreted and we think about the story we hear about books, right we could all read the same book and Come Away with a very different perception experience of what that story really meant.
00:20:24 [W] We all go watch the same movie and we're being told what to think and see we might not all like the same movie but we kind of all saw the same way.
00:20:33 [W] So that's the next piece that we want to iterate on.
00:20:38 [W] So if I do this, you know have this bathroom drawn up and it's clearly it's got two sinks.
00:20:40 [W] sinks. It's got the separate part for the toilet. It's got
00:20:44 [W] Big shower and tub and the doors and everything like we're ready to go and you know best safest a of this has to go to be day.
00:20:49 [W] You know, what are you doing?
00:20:51 [W] Little bit day.
00:20:55 [W] I mean it's like it in the u.s.
00:20:57 [W] We don't think about that now maybe we should at the whole toilet paper covid thing. So there's definitely some learnings here is that to think about but I okay so we had a bidet.
00:21:07 [W] Now we can see that if we try to add it later really doesn't fit. We lost our door the showers like this weird closet now.
00:21:17 [W] So the point is we want this iterative approach.
00:21:23 [W] We want to make sure that we can bring all the subject matter experts in you know, you're one of our key Masters, right, you know all of our security work. We've got NEOS from AWS that's been awesome for thinking about Key Management
00:21:34 [W] The notary folks there that uh folks that have been working on all of the updates semantics and we each have our perspectives, but it's really hard to communicate with each other, you know without sketching these things out turns out
00:21:50 [W] Just enough, you know, if you look at the churches in Barcelona, right the church is not just there but other places they were big and you know, massive pillars inside a hold up these rules that were, you know concrete to
00:22:06 [W] Top, but they were just really massive structures.
00:22:14 [W] And Antoni Gaudi was had a different vision for what he wanted to see and he couldn't really figure out how to communicate that Vision very well or figure out how to build it quite frankly. So he'd make sketches and you look
00:22:25 [W] Awesome, but I don't know how to how we gonna pull that off.
00:22:32 [W] It's like going to collapse on itself for it'll just be so bulky.
00:22:34 [W] So he started doing modeling.
00:22:37 [W] He took his sketches and he was building models and prototypes and this one is really interesting.
00:22:49 [W] So when we can all travel again or search online the if you go to the scada Familia that you'll see that this is actually strings that are hung from the ceiling with little shot pellets that are in these little canvas
00:22:54 [W] Help shape the formation that becomes the pillars that holds up. The church has got a familiar and he did a lot of these iterations. If you just look up Gowdy models just see the amazing things that he put together and that was able to facilitate.
00:23:10 [W] Things that he put together and that was able to facilitate all the different trades to figure out where are they going to put the lighting?
00:23:17 [W] Where are they going to put the gas pipes whatever use for electricity back a hundred and twenty years ago.
00:23:29 [W] They didn't have actually had well that was trying to figure out so I guess what kind of Windows where they could put the candles without burning everything down.
00:23:34 [W] So you had to figure out how to get all these different trades to fit in whether it be stairwells or whatever and that's what he was able to build these.
00:23:41 [W] As models and everybody could look.
00:23:42 [W] all right, I can put the pipes here because the things are not there and so forth and you know, it's just an absolutely amazing sculpture and you can just see the pillars and the way they look like trees and so forth.
00:23:54 [W] So the point here is not just to appreciate Antoni Gaudi, but it's that, you know, communicate write things down sketch prototype and throw it out and start over again is the approach we've been taking with this project.
00:24:08 [W] So we've where in this prototyping phase at the moment. So prototype one kind of as Freddie says going to talk about in a second, but that's a kind of exercise in generic signing of content
00:24:22 [W] Context how that would involve.
00:24:27 [W] How can you can copy signatures?
00:24:29 [W] They are Gap tissues.
00:24:32 [W] We're going to look at key management issues and what kind of persistence and retrieval there is for signatures.
00:24:41 [W] Are they separate artifacts or the same or part of the same artifact?
00:24:46 [W] So, you know so detach keys or join keys. Are they all those kind of issues about what what what is a key?
00:24:53 [W] E in a register.
00:24:55 [W] What is the signature in a registry? And then that's going to lead into parallel. We're going through working on a lot of design decisions and then register nearly ready to start a bunch of other prototyping. So prototyping
00:25:08 [W] Looks like in a registry looking at the issues around rollback in a registry context and ephemeral clients were talking about so in a few nfu minutes.
00:25:19 [W] So as part of building this prototype and doing this iterative model, we want to carve out what we really want to chew on right now and what we're going to defer so we've got a prototype for an Envy to client and all it does
00:25:36 [W] So as part of building this prototype and doing this generative model, we want to carve out what we really want to chew on right now and what we're going to defer so we've got a prototype for an Envy to client and all it does
00:25:38 [W] Our fight it actually doesn't even know about a registry.
00:25:42 [W] It just knows how to sign content and verify the content related to that key.
00:25:52 [W] Of course, it can sign an artifact and we're targeting Ocio artifacts and there's a manifest for how those things come in.
00:25:53 [W] We'll talk about that in a second and based on that manifest the digest we can generate a signature once we have the signature and the artifact we can push it to a registry using something like the or as client which is again a good
00:26:10 [W] typing tool because it's really meant to be a library for other CL is but now we can see how we can Leverage The oci artifacts model for pushing additional content into a registry with these tools and we can get a kind of a rapid prototype going here.
00:26:21 [W] So we started with x509 certs and just an otaku bit more around how we want to expand the type of keys that we supported the key signing but what was interesting about this is she way who's been working on this part of it, you know.
00:26:37 [W] The bathroom analogy again.
00:26:44 [W] He created some artwork on the wall in this bathroom that we weren't really expecting and we're kind of all grokking it now.
00:26:51 [W] So let's kind of take a look at what this all happens. So we take an SSL.
00:26:53 [W] Sorry an x.509 key and the C name is the registry that the artifact was originally in. It doesn't limit where it can be pulled to it's just saying we're gonna have a certificate that has a registry baked
00:27:07 [W] Registry that the artifact was originally in it doesn't limit where it can be pulled to its just saying we're gonna have a certificate that has a registry baked into it.
00:27:08 [W] So we build an image we're tagging it with the registry The Source registry. Now. This is where to support offline scenarios.
00:27:19 [W] We needed a manifest locally manifest are typically generated as part of a push operation and you can get it from the registry.
00:27:27 [W] So here we actually choose built this generate manifest tool that you can you know, get a manifest locally and you just pass it the name of the image and you say output it to this net monitor Json file.
00:27:37 [W] So now I can take the env2 client and one of many methods we want to support is x509.
00:27:47 [W] So we had gpg and we pulled it out.
00:27:50 [W] We're trying to figure out how we want to do this best.
00:27:52 [W] But imagine there's multiple methods for now. We do x509.
00:27:55 [W] 509. I give it the web and networks key and the registry that I want to tag this thing associated with and I passed it in the net monitor view on manifest.json file because that's what it's going to sign and then the
00:28:10 [W] Signature object it generates is the debt monitor dot signature dot Json. Okay, so you got the docker build a generator manifest and then I'm going to sign it.
00:28:19 [W] So that net monitor signature Json object. What we have here is the top part is the references to the certificate, you know, the expiration not before and I was to get what I T stands for then what we
00:28:34 [W] Use its called a no see I described ter what this says is I am signing this artifact that's in the registry.
00:28:48 [W] It has a media-type for the whether it's an index or manifest manifest lists or index.
00:28:50 [W] Sorry manifest lists or manifest.
00:28:53 [W] So this is Representatives manifest.
00:28:57 [W] It has the digest that digest is the digest of that manifest and the size those three parts are referred to as an OCR descriptor.
00:29:03 [W] And then here's the interesting part that we're playing with is their certificate has to match the registry if you put it in here and it's only for a signing. It just means that I can't use the different key to x509 key to sign a
00:29:17 [W] It has the digests that digest is the digest of that manifest and the size. Those three parts are referred to as an OCR descriptor.
00:29:18 [W] And then here's the interesting part that we're playing with is their certificate has to match the registry if you put it in here and it's only for assigning it just means that I can't use the different key to x509 key to sign a
00:29:20 [W] That point the output of that is the bottom section that that is the actual signature.
00:29:32 [W] So this is the basically the config object that we will or the signature object that we generated and you'll see we have lots of conversations around the formatting of the white space no white space canonical and
00:29:40 [W] Adding of the white space no white space canonical and so forth, but that's one of the debates were driving.
00:29:46 [W] So now if I've got that file, I can push it to a registry as a notary V2 artifact so I can use the or as client. I say or S push to the
00:29:58 [W] It networks registry.
00:30:06 [W] I pass it a manifest config of the Json file the signature object and I'd given it a notary V2 artifact type.
00:30:08 [W] And the mediate the sorry the Manifest of that as it goes into the registry is a 0 layer object.
00:30:20 [W] It's got the config object right there.
00:30:22 [W] It was whole config object is the signature and now I've got you know the artifact and the signature in the registry.
00:30:29 [W] So go ahead say yes, I ke management obviously is an important positive thefts and that's something that like that this experiment has kind of illuminated a bunch of things about it.
00:30:45 [W] First of all, we used x509 actually one of the interesting things about notary V1 is that it gives you could choose to use x509 or kind of ad hoc
00:30:56 [W] And that was actually kind of giving people a choice was actually kind of weird because it meant that some that was functionality that you could do with x509 and like see who had signed an image much more easily,
00:31:13 [W] people that choice was actually kind of weird because it meant that some that was functionality that you could do with x509 and like see who had signed an image much more easily, but you couldn't rely on that functionality being there because some people
00:31:16 [W] Rely on that functionality being there because some people didn't use x 5 and 9. So it was kind of mixed bag.
00:31:24 [W] I think like some of the functionality was quite nice but no one ever like to rely on it because x509 keys are really mostly used for signatures as opposed to of TLS in the US government and a few other large organizations.
00:31:36 [W] As opposed to have TLS in the US government and a few other large organizations.
00:31:37 [W] They're not widely used elsewhere. And unfortunately, you can't use the let's encrypt for signing a normal object for reasons that I won't talk about now, but it does give this useful potentially useful binding but
00:31:50 [W] between the name and the what you're saying for, but maybe there are other means we can use some people are kind of in the gpg ecosystem which comes with this web of trust thing but really only
00:32:06 [W] Arif that and in these covid times, we don't go to key signing parties, even if we ever did it's not clear that the web of trust model is is real.
00:32:22 [W] I was wondering where you were going with this covid reference of key parties. Okay, and so ad hoc cases is which is what tough specifies although tough stuff. So you can use other kinds of cases as well which is why naturally was able to
00:32:33 [W] X509 is probably the most likely option but we're anyway, we're still going through the kind of options there.
00:32:43 [W] Definitely.
00:32:44 [W] We know we want to be able to manage, you know kids with existing tools particularly Hardware security.
00:32:58 [W] So things like Cloud keys or stores or hashicorp vault all the parsec project or yubikey is which measure eveyone has support for so there's a bunch of things we do know and there's a bunch of things that you know, we're still experimenting with there.
00:33:02 [W] And part of this is coming because you know, like we showed the bathroom and you know with the bodega conversation or the multiple Keys, you know, it's like one of the things we're debating is should we support multiple keys?
00:33:18 [W] Because we want the hobbyist to not have to pay anything and super simple and have baby the appropriate level of trust associated with that where larger software vendors words, or maybe it's a more critical workloads or even a company that wants to have their certificate more trusted.
00:33:30 [W] Realm as well.
00:33:34 [W] So these are this kind of the some of the things that we've been debating around because now we could see what this thing's starting to look like. I said as a yeah, we spawn Isaac a management grape on Fridays to k3s these issues.
00:33:44 [W] So the on the on the prototyping roadmap one of the things that really once we've experimented a little bit, you know, we know he got some sort of concrete experiment with putting keys in a CIA then there's a interest in
00:34:02 [W] Tapping the update framework into a CIA registry types because it's a design for files in a file system and mostly nature.
00:34:18 [W] Eveyone carried that over because it had a separate database but as we want to put things in the registry, there's some little differences. Some of them are just small things like oci descriptors include the mime type. Whereas the TUF pointers which are much the same
00:34:29 [W] I'm type of the so it's just a minor thing if we use external signature objects rather than tough signature object hits a tough signatures are in line if we standardizing on external signatures in the registry, then that makes little difference is that
00:34:45 [W] I mean that's just fine as long as it's it maps and it preserves the security properties.
00:34:51 [W] I mean tough does say that these are examples and not required but we need to do an exact mapping, you know, there are a bunch of options, but we need those to be a CIA asset to do with at least to some extent with the a cri-o structure because that's
00:35:06 [W] Garbage collection.
00:35:12 [W] We don't want signatures to be or tough Master data to be garbage collected.
00:35:16 [W] So when it and images that are pointed tufin do a bench.
00:35:22 [W] Well, yeah, eventually though we want them to be managed in the normal workflow of the registry and then there's some other questions about putting stuff in a registry that we've discussed a bit. So notary V1 made a tough repository equal to a
00:35:33 [W] Was it tree? I you know, so Docker Hub / just in Cormac / my program that would be one tough repo that meant they were a huge number of keys the tough team think that the whole Registries the right scope
00:35:49 [W] We haven't convinced the registry operator.
00:35:54 [W] is that that's not too large Escape.
00:36:00 [W] So maybe the answer is in between us the OG scope or anyway, so there's still some work there but that affects things like delegations work and there's a whole lot of complex issues around discoverability of
00:36:10 [W] anyway, so there's still some work there but that affects things like delegations work and there's a whole lot of complex issues around discoverability of information about signed objects and things that also if I design so so
00:36:14 [W] Things that also if I design so so it's a complicated thing that we as though we need to make some more progress on that.
00:36:18 [W] More Design work that we're having an ongoing discussion about rollback protection, which is a really interesting subject.
00:36:32 [W] I'm I'm writing some blog posts on this at the minute to just kind of sort out my thinking about this but this is and there's a bunch of articles that Justin capacitors written on this. So
00:36:44 [W] The TUF model is kind of assumes that you have a persistent history again of what's been going on and then so someone can't come along and you know just say, oh no, they haven't been any updates for the last three years. The latest version is the one from
00:37:00 [W] You know just say, oh no, they haven't been any updates for the last three years. The latest version is the one from three years.
00:37:01 [W] You should use that which is still signed by the Civil side.
00:37:15 [W] So so now it still looks fairly but you add should know you should know that there's actually been updates since and so one solution is to update, you know, the client and tell it and it's basically said that where the state of the world was
00:37:20 [W] That's more work.
00:37:28 [W] We've also been looking at the kind of there's a relation between transparency logs, which are kind of used for public as a station have TLS keys and see some things out there and there's a very interesting relation between
00:37:37 [W] And the kind of the rollback protection, but it's complicated and we're still working on that.
00:37:48 [W] You know, I think there's we know that if Emeril infrastructure is important. So we need to you know, work out how to use it effectively and keep it secure.
00:37:54 [W] Whose courage to we've been this is one of these are this is interesting debate is for deployment.
00:38:04 [W] We kind of follow this best practice that every deployment is a unique tag that you would never deploy latest.
00:38:06 [W] You should have been building on latest latest is good for like demos and trying to get things started or even a deployment right having a single tag in an environment.
00:38:15 [W] We have lots of nodes you want to make sure they're all running the exact same version.
00:38:22 [W] So we don't really think of the updates are being part of the deployment but on your build statement,
00:38:28 [W] You're from we do want to use what we refer to as stable tags.
00:38:30 [W] I want node 9 and when there's a new security updates and node 9 I want to get that without having to change my dockerfile to reference a new tag.
00:38:40 [W] So we definitely have these kind of semantics.
00:38:50 [W] It's just it's kind of where it is in the priority list. And where do we carve off? And we need to solve the complexity and the reliability of the this. Yeah. So I mean, I think there's some of the ways in which we
00:38:57 [W] Created and so, you know, we need to think about questions like over time it was you know, was that the right design and do we need to try and change that over time, but we
00:39:23 [W] Change that over time, but we one of the design criteria.
00:39:29 [W] There's project of we're not trying to change what people do we're trying to make what they do secure because changing these kind of thing is hard and if you tell people they have to change before they're secure. They quite likely to just not
00:39:40 [W] I'm big into care. So we have is difficult thing of trying to work with things as they are.
00:39:48 [W] Even if they're not necessarily ideal, but it's important to kind of explore how we could make things better by if by making changes, but we can't assume that we make those changes first.
00:39:59 [W] Yeah, so this is kind of summarize a little bit and the slide but you know the of these streng were concerned with updates, but there's not a good model in the registry of what up days are and I looked at the Ubuntu repo and dr. Hoffman is got
00:40:18 [W] bags and technically five of them and kind of latest are up to date and the other ones are can probably old and you shouldn't probably be using the most of the time and
00:40:34 [W] so this kind of thing, you know that we are discouraging use of latest and and people want immutable tags, but actually most of the most of the
00:40:49 [W] Mainly for historical interest and you shouldn't actually be running them right now because they are they are old so, you know, I actually I've been thinking about this quite a lot recently. I think we did make some you know, I do think there are some mistakes here
00:41:06 [W] Makes you know, I do think there are some mistakes here in terms of the way the design work. You're human.
00:41:16 [W] Well, you know these things happen, you know, these things have been around for a long time and there are some right things about them and and some you know, I think we need to tweak them a little bit but it's you know, these things are kind of
00:41:26 [W] the usages are kind of in in the sort of fabric of how people use things now and it's definitely going to be a challenge to change them.
00:41:37 [W] So, this is Sagrada Familia a couple of years ago.
00:41:50 [W] This is SpaceX rocket bike like Barcelona go off and make a pocket Silo in the top of this thing.
00:41:57 [W] So we're building this thing.
00:42:00 [W] It's not going to take as long as it got a familiar.
00:42:05 [W] We're actually, you know shipping things quite fast. Now, we've got, you know, we're next give con. We're going to have
00:42:09 [W] Prototype in the state that everyone can really play with it and get our hands on it before we shift it into production.
00:42:17 [W] So come and join us.
00:42:20 [W] The details are on the next slide.
00:42:22 [W] Yep.
00:42:24 [W] So we have weekly meetings do get in touch with us get in touch with me and Steve directly and we have it will be around to answer questions.
00:42:34 [W] Okay, great.
00:42:46 [W] I hope you enjoyed the talk do come and ask us questions on slack later.
00:42:50 [W] There's a channel over as a thread in the maintainers channel to keep going maintainers and we had a question about not changing the tag or signature just to make us to sign something sounds like your use case for
00:43:01 [W] Yeah, this has been a really interesting design point because that's this was a very strong requirement from a lot of users that they really wanted to be able to sign things
00:43:17 [W] It's changing the hash of the object and so detached signatures is the obvious solution to this, but it does have ramifications.
00:43:28 [W] It does mean that we need a new API inside a registry in order to find the signatures that pointed object X, which is kind of the river.
00:43:42 [W] So the way that lookups in a registry usually go. So we're working with the with the registry people on what that would look like and so on because that's
00:43:48 [W] so obviously a real consideration and it does seem that there's actually a mixture. So some people definitely some people want to check matures and as find some people also want to refer to the signature of
00:44:02 [W] The thing about detect signatures as you can still refer to that signature that points at the object and that's actually gives you a tag you point out for this object signed with the signature as well.
00:44:18 [W] So it's kind of does seem to be the Best of Both Worlds, but it's not a hundred percent backwards compatible.
00:44:23 [W] So we're still we're working on the kind of registry changes that will be needed to support that use case, but they it was really interesting because they were it was a very strong user requirement that we had their about.
00:44:36 [W] out about that
00:44:36 [W] In the slack Channel, we've added a couple of links to the notary project and what you have there is some of the evolution of that detach signature.
00:44:49 [W] So we were talking a little bit about the formatting and white space and so forth.
00:44:51 [W] So the current version is a JWT persistent version of that signature object and then we've also started talking about some of the distribution apis that we've been thinking about including using index to store the signature and
00:45:04 [W] It already has a way to reference it just in manifest. So we're trying to work to Justin's Point without making major changes or minimal changes to support what already in existence and the scenarios that customers have told us they really want to see
