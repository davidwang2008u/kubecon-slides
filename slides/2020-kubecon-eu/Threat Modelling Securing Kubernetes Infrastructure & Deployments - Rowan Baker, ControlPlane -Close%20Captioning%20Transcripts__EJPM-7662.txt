Threat Modelling: Securing Kubernetes Infrastructure & Deployments: EJPM-7662 - events@cncf.io - Thursday, August 20, 2020 6:54 AM - 59 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:03 [W] Hiya red welcomes fight so confront Wordly secure and kubenetes infrastructure and deployments and the head of security at control play and where consultancy specializing in cloudevents of security out of London.
00:06:08 [W] I'm also a contributor to the gkc is Benchmark and cncf financial User Group kubenetes attack trees.
00:06:18 [W] need to start by acknowledging that a lot of the thought behind codified controls automated testing and compliance and the role of a tech tree is presented here.
00:06:22 [W] Are those of John Meadows who founded the cncf financial services use agree.
00:06:31 [W] We were supposed to present together today, but unfortunately couldn't owing to circumstances beyond our control in this session. Today.
00:06:37 [W] We're going to introduce threat modeling and threat the link you veneti.
00:06:42 [W] We're going to show you how your threat model helps Define your control sets subsequently.
00:06:50 [W] We will look at how tests associated with your threat model and controls assist with stock integration and addressing compliance culture shock and we'll finish with some gotchas.
00:06:53 [W] and a tldr
00:06:55 [W] so to start with a Baseline and go to very quickly describe the threat modeling process with the five W's and a how in fact if this is all you take away from the talk and act on with your own kubenetes implementations. That's a good thing.
00:07:10 [W] So what is threat modeling it seems to be used interchangeably as a noun and a verb.
00:07:24 [W] Well, the definition of threat modeling will use takes the form of the verb and it's not just about defining the risks to the system about how they are addressed.
00:07:28 [W] So why should we do any threat modeling at all?
00:07:33 [W] Well threat modeling can prevent you from finding out about security issues when it's too late.
00:07:37 [W] If done properly establishing a threat modeling program provides the opportunity for the right kind of cloud Cuba knative migration where your developers drive from the capability and experience perspective and security compliance developers work in tandem.
00:07:48 [W] To enable that secure compliant fashion using the threat model effectively.
00:07:55 [W] This means shifting security left in the development process and identifying the security requirements for the developer.
00:08:03 [W] So you should really start threat modeling as early as possible as soon as our shared understanding of an architecture starts to develop.
00:08:09 [W] You should be threat modeling this provides real benefits.
00:08:16 [W] Do you find a security issue early and are able to change the architecture to be more secure before anything has been
00:08:18 [W] demented you will have saved a huge amount of rework and likely arrived at a more secure and usable implementation.
00:08:29 [W] If security issues are picked up later in the process.
00:08:30 [W] You'll be trying to retrofit security into the architecture.
00:08:38 [W] You may be successful. But the chances are you'll end up with a more complex and compromise solution. So threat modeling just doesn't stop with the first release once you've got an in-flight project with an existing threat model.
00:08:47 [W] When the tickets in features are defined for each release evaluate and update the threat model around a specific features and tickets.
00:08:54 [W] So who should contribute your your threat model? Basically everybody each stakeholder something to contribute and their own unique view of the world and how Architects have a vision for the system.
00:09:09 [W] If that system is already a nice then devops will know how that works in practice and they'll know about those little tricks and deviations. They have to get things working that may stray away from the intended architecture.
00:09:24 [W] Your security operations center your pen test teams you threat intelligence teams are also useful people to have board these people know about the tactics techniques and processes that attackers use bringing these teams to the threat modeling sessions is
00:09:40 [W] After all, these are the teams who are skilled at breaking into your systems.
00:09:48 [W] He better to validate your assumptions on what is secure. Another point to note here is that if you are threat modeling an existing system a powerful technique could be to take the threats you've identified ask one of the pen testing team to attempt to exploit those threats.
00:10:00 [W] Great validation of your threat model. If you start identifying threats with the real-world evidence produced by the pen testing teams.
00:10:10 [W] Last but not least include product owners business analysts and internal users in your threat modeling sessions. These people know as much as there is to know about their data and they can help determine the boundary between necessary business
00:10:26 [W] option security
00:10:27 [W] Now a few words of caution here.
00:10:33 [W] you start work shopping with all of these stakeholders that only works best if they're completely familiar with the project and the solution.
00:10:43 [W] I've been in a few sessions where that hasn't been the case and frankly. It's been chaos.
00:10:47 [W] So if you need to arrange them Preparatory sessions to establish a baseline amongst all these individuals first.
00:10:56 [W] Always make sure that you have some documentation or architecture diagrams available.
00:11:04 [W] But detail how the system works to refer to during the sessions. Also, if your threat modeling early early on with that t this set of stakeholders and you've yet to define the architecture there just prepare to draw a
00:11:15 [W] mockup architecture diagrams
00:11:17 [W] sadly threat modeling is really done best in a ring with a white board. Unfortunately, we all know it's just not possible right now additionally if you're at a large organization, it's actually likely that your stakeholders will be globally distributed anyway.
00:11:35 [W] So videoconferencing it is and with that you'll be at the mercy of the collaborative tooling that you're allowed to use by your organization to be wary of that when you're planning your sessions.
00:11:47 [W] Finally, how does one actually perform the threat model?
00:11:53 [W] Well, here's the basic threat modeling process as defined by Adam szustak in adopted by OS there are four simple steps.
00:12:03 [W] What are you building?
00:12:05 [W] What can go wrong? Once it's built. What should you do about those things that can go wrong?
00:12:10 [W] And did you do a decent job of analysis?
00:12:15 [W] So for the first thing what are you building steps all about information gathering and context setting understanding the nature of the data criticality the system or the architecture is and how its provision to maintains.
00:12:22 [W] Second step is obviously the point at which own abilities in the system resulting threats are identified and crucially prioritized.
00:12:29 [W] Following which you're going to create the backlog of mitigating security requirements you architectures bug fixes and so forth in order to answer.
00:12:39 [W] What should you do about the those things that could go wrong?
00:12:40 [W] The final step is to identify what you did a decent job your threat model.
00:12:47 [W] So you're going to review the outputs from the previous three steps.
00:12:48 [W] You're also going to incorporate external sources such as pen testing at this point.
00:12:55 [W] Once the threat model has been established for system.
00:12:59 [W] It's this step that's repeated just to make sure the answers to the first three questions are relevant to the system at the current point in time.
00:13:04 [W] That's quite tall being quite abstract sofa.
00:13:09 [W] But what is this threat modeling process look like for kubenetes?
00:13:14 [W] Well, the four C's of climate of security our Cloud clusters containers and code.
00:13:21 [W] So to secure your full stack here going to obviously need to consider the configuration of the cloud service provider the cluster what containers comprised of and how they can forget to run and the security of application code itself.
00:13:34 [W] Now we can broadly address the security of the latter three through the design of the cluster and the ci/cd pipeline and regardless regardless of whether you're a small or large organization.
00:13:49 [W] It's good practice to provide standardized components for application teams to consume.
00:13:58 [W] So you'll provide a cluster for them to use or a means to provision in scale their own clusters.
00:14:01 [W] You'll Define the Baseline configuration of that cluster and you'll Place some restrictions on what that what applications can do.
00:14:05 [W] times of configuring that cluster
00:14:08 [W] You know said obviously providers application teams with ci/cd pipeline used to build container images and deploy those to your to your kubenetes cluster. So for each of these patterns, you're going to end up creating reusable threat models.
00:14:24 [W] And those threat models are going to generally going to be along the lines of cluster provision in the scaling cluster runtime across the configuration and then threat models for the application ci/cd Pipeline and the outputs are those threat models will Define the architecture
00:14:39 [W] Of the standardized components and patterns your application teams. We use.
00:14:44 [W] This always has a really important point.
00:14:48 [W] Doing a runtime threat model is not enough. You need to ensure you think of the architectural solution from an end-to-end perspective.
00:14:57 [W] You need to ensure that you're truly thinking through things through right from the client experience through deployment Telco operation stuff utilize your your clusters solution.
00:15:09 [W] You can have the most secure system in the world at runtime, but if it's exploited because you forgot about supply chain security and and deploying the system in securely then you've wasted your time.
00:15:25 [W] You really have to think this through from an end-to-end perspective.
00:15:26 [W] so defining what you're building any good architectural diagram will do you can also use open source tools like Cloud mapper to get as much info as possible on your environment, but just to mention data flow diagrams here
00:15:42 [W] They to play diagrams are really important really useful for breaking down what you're building into flows processes trust boundaries and stores within the system.
00:15:57 [W] Once you have that depiction that makes a technique called stride, which I'll describe in a couple of slides that makes it a lot easier to do.
00:16:03 [W] So if your architectural diagrams aren't fit for purpose consider drawing the data flow diagram instead.
00:16:07 [W] You can draw data flow diagrams of a specific interaction like a Cuban eight is problem CH4 the whole system like this depiction of a simple ci/cd.
00:16:18 [W] Again, you may need to create multiple diagrams just to reflect the end-to-end the M20 solution.
00:16:28 [W] So now you have these architectural diagrams and you have all of this information.
00:16:36 [W] You need to start identifying what can go wrong.
00:16:41 [W] Now. If you're experienced in the threat modeling in the security space then brainstorm to your heart's content and it take the architecture diagrams make copious notes as you let your imagination run wild.
00:16:50 [W] If he's not fit model before it'll be helpful to use a straight edge framework stride and past ask them for two examples.
00:16:58 [W] So straight, it's an acronym stands for spoofing tampering repudiation information disclosure denial of service and elevation of privilege.
00:17:08 [W] one can use stride to characterize and identify the kinds of threats that affect processes data flows stores within your system and their most common and Striders most commonly applied or used in conjunction with data flow diagrams because as
00:17:24 [W] Earlier, they to play diagrams diagrams that do explicitly display those processes.
00:17:32 [W] They deflate stores within your system.
00:17:33 [W] There are more other more explicit sources of threats.
00:17:40 [W] For example, the might attack Matrix and also reverse engineering benchmarks can also form a valuable source.
00:17:46 [W] One morning. The thing to bear in mind is that you need to Define when to stop identifying threats. If you're not careful, you can threat model in an endless spiral of Despair picking out every issue out there.
00:18:02 [W] So when do you stop?
00:18:04 [W] If you're experienced in this space and everybody is familiar with kubenetes and climate of solutions.
00:18:14 [W] You can time box your activities because you'll know roughly when you're done.
00:18:18 [W] Otherwise, if your threat modeling for the first time if you have one really good stride attack her element represented in a data flow diagram.
00:18:27 [W] That's a okay first pass. Finally when you're identifying threats. There are great a wealth of great talks and existing threat models available within the
00:18:35 [W] So it's no surprise that I'm going to talk briefly about cncf financial User Group attached trees.
00:18:43 [W] So in conjunction with other members of the cncf financial User Group, which right model with the whole kubenetes system by asking what can go wrong looked at the text of the API server subsidy kublr. It's exploiting aspects of
00:19:00 [W] And iot Si, we looked at compromise workloads in the various permissions can mrs.
00:19:07 [W] Configurations. That could be accidentally granted.
00:19:11 [W] It also looked at some Cloud private provider integration letter a data API pilot X and these are Tech trees are open source in GitHub for your use.
00:19:18 [W] Now attack trees are a highly useful threat modeling tool and you should use them whilst identifying your threats.
00:19:30 [W] They provide a full methodical way of describing the security systems based on varying attacks.
00:19:34 [W] Basically you represent a text against the system in a tree structure with the goal is the root node and different ways of achieving that goal as Leaf nodes.
00:19:40 [W] It's factories were coined by Bruce schneier in 99, and we've got a brief or simple example of an attack tree to the right here.
00:19:48 [W] It's simplified for the point of explanation a tech trees can be quite large and slowly difficult to present on PowerPoint slides.
00:19:56 [W] So we've got this Abridged version here.
00:20:01 [W] So to start drawing an attack tree you start with a negative outcome that you want to avoid.
00:20:03 [W] So in this case, it's at the top and it's malicious code in the workload. You subsequently asked how
00:20:10 [W] oh, it could be achieved to flesh out the rest of the tree to explain the key on the right the shape of each node dictates whether the node is an end or or and nodes require both conditions joining the node From Below
00:20:23 [W] the tree whilst all nodes indicate that What Lies Beneath a multiple ways in which they note can be realized so
00:20:31 [W] one way
00:20:32 [W] to have malicious code running as part of the kubenetes workloads to deploy a poison containerd image.
00:20:40 [W] And if you look below that note in order to deploy that poison containerd image.
00:20:49 [W] you need to poison the image within the container registry and the image needs to be deployed.
00:20:53 [W] And in this case, it was deployed as part of the normal police going further down the tree in order to poison the image in the container registry.
00:21:03 [W] you will obviously need to obtain image whole secret and you're reliant on that pool secret having right and overwrite privileges within the container registry.
00:21:09 [W] Finally Direction three different ways in which you could obtain the image pool Secret.
00:21:18 [W] You could make a kubenetes API request.
00:21:20 [W] Or you could use a running container with host file system access that's like setting the password on the host or we can obtain it from a cubic using the an authenticated call. For example.
00:21:31 [W] now it actually is useful tools for collaboration between Dev teams and security security teams who aren't necessarily a failure with all the cloud native Technologies often recognized the high level outcomes that must be avoided such as information disclosure
00:21:47 [W] By trucks filtration and so on.
00:21:50 [W] When these when they went straight into the face with new technology to don't know exactly how they achieved protector is a great way of fleshing this out with with technical detail below and helps establish a common point of reference between development teams and security.
00:22:06 [W] when discussing the April security posture of the
00:22:11 [W] the system
00:22:13 [W] now if you don't want to use the tech trees as I said create tables are gonna take your and diagrams.
00:22:21 [W] There's a threat model of the cluster at runtime.
00:22:24 [W] It's not pretty but it's perfectly valid just labeled all the things that could go wrong in an architecture diagram.
00:22:31 [W] don't get too precious about your diagrams and architectures, you will be redrawing them in updating and countless times as you build your threat model. So initially don't worry about your connections with a little bit off because you'll be rejoined. There's light soon enough.
00:22:45 [W] Now you could have identified.
00:22:48 [W] Well, what are you going to do about that which is divine your control sense evaluate and prioritize your threats.
00:22:54 [W] Then that controls directly onto them you could end up with a particularly busy architecture diagram like so what you could annotate your attack proves by breaking different branches out with inappropriate control or talk
00:23:07 [W] Bit more about attack trees later.
00:23:09 [W] So when you look at selecting controls what controls you have to choose from?
00:23:17 [W] Well, frankly, there's loads. Here's a here's a quick menu of controls.
00:23:22 [W] Just like any good menu, then order everything it will make you sick.
00:23:26 [W] We'll talk about how you minimize the number of controls. You need to implement later.
00:23:33 [W] So in the networking space if you're concerned about the compromise of a container and subsequent pivot cross, the network is kubenetes Network policy for starters if you're running a servicemeshcon.
00:23:47 [W] Are you sure you've got em for firewalls, whether they whatever they may be called for your Club provider.
00:23:54 [W] Yes security groups or meckel's or simply just firewall rules.
00:23:59 [W] These will provide you with networking restrictions are than o than sublet subnet layer level at layer 3 and 4.
00:24:04 [W] Also some containerd knative IDs and IPS systems can now be configured to restrict the network connections made by running containers. Well worth considering
00:24:13 [W] what controls can you use to constrain a compromise container at runtime, maybe one that would attempt to break out into the host.
00:24:24 [W] The first thing is just to get the basics right to find the security security context.
00:24:28 [W] We were positive detainers.
00:24:29 [W] Usual stuff - Nan Reed then allow privilege escalation before you in the next capabilities and use a partner profiles wrestling X if you can.
00:24:39 [W] Containing compatible IDs and IPS systems are pretty prevalent to to use them. Once like Falco. There are also paid solutions that offer a lot more capability than just runtime protection with container image scanning admission control Patel.
00:24:55 [W] So if you're all blends to throw money at things that needs a world-class user just finding over the last few years sandbox and isolation technologies have started to emerge now implementations differ.
00:25:07 [W] But the goal is the same to isolate the running workloads from the hosts kernel as much as possible. The three that are currently the most prevalent of Keda G visor and firecracker.
00:25:17 [W] It's a space to watch with interest the currently a few limitations to investigate before you dive into using these for everything for example servicemeshcon Pat built.
00:25:25 [W] So whether accidentally or maliciously your users are going to miss configure your clusters workloads or just accidentally break things again getting our back right is one of the basics.
00:25:41 [W] It's not easy though. But thankfully there are plenty of Open Source tools to help on that front.
00:25:47 [W] Make sure you enable the kubenetes admission controllers.
00:25:52 [W] The CIS benchmarks have recommendations on that front on what you should enable and finally no talkin kubenetes are back or poddisruptionbudgets.
00:25:56 [W] This is complete these days without mentioning open policy agent provides the ability to enforce custom policy and appears to be the future in their pod security policy space there a couple of implementations you could use as a mission controllers.
00:26:10 [W] So kubenetes knative implementation informed gatekeeper, you can still use plain Opa to enforce your you had a custom policy if you say wish
00:26:18 [W] Now the majority of the controls that I've just mentioned the to protect your cluster from a compromise container it goes without saying that the most important element in preventing.
00:26:30 [W] This is embedding security within ci/cd, which is talking itself as a wealth of information on Security checks and turning each stage of table built by
00:26:37 [W] Tonight of increasing importance and focus particularly needing Financial Services is the ability to attest that a container in which you have built has been subject to all of the security test implemented as part of your pipeline.
00:26:52 [W] This involves collecting metadata from each stage of the pipeline and validating it at cluster admission time graph is paired with critics and in-toto work for the open source Technologies to consider in this space.
00:27:01 [W] So you might read all of that.
00:27:08 [W] You might have a threat model with loads of threats in it.
00:27:13 [W] And then you might pull together all your controls to say to enforce the defense in depth and end up with this an example cluster from the infra perspective.
00:27:20 [W] see how the infrastructure controls segregate nodes and I want to enforce controls on networking at the infrastructure level and theoretically segregating the cloud permissions or workloads can access the instance level.
00:27:31 [W] That's the reticle with suction that later.
00:27:33 [W] Even more complicated when you look at all the services and configuration that will need to be configured within kubenetes itself.
00:27:42 [W] My advice is not to do all of this particular straight off the bat unless you have a really really good reason to your threat model will justify it.
00:27:51 [W] instead start simple
00:27:55 [W] after confirmation of this complimenting control sets is absolutely no need to implement an entire category of controls to demonstrate the pencil depth you security architecture needs to be simplest possible to mitigate the threats you've identified to an acceptable level bear in mind
00:28:10 [W] The most security the more complex your security architecture becomes the more automation you need to provision to both provision and automatically test clusters in affect the stability to provision a cluster supported services are run a full Suite of tests from just one push of a button.
00:28:25 [W] The only way to ensure that complex solution is maintainable and scalable.
00:28:30 [W] So when choosing the minimum set of controls risk has to be the determining Factor prioritize the threats in your threat model according to the risk, they pose that will help you go from a lengthy list of threats to understanding where to start first,
00:28:46 [W] Which threats are significant enough to eliminate the starting set of controls required.
00:28:50 [W] At this point I'll again extol the virtues of a tech trees which controls the device labeling and plotting them onto your attack to this as a means of breaking the branches are great way of showing you how your security controls can theoretically combined to stop at X
00:29:06 [W] And also demonstrate another means of Defense in depth not by doubling up on controls for certain category, but sharing how seemingly unrelated controls can mitigate attackers from working their way through your system in order to later.
00:29:21 [W] Testing is often overlooked when implementing controls of codified patrols just like in mainstream software engineering you wouldn't dream of releasing code without testing.
00:29:34 [W] So to with codify strictly you must write tests to validate the efficiency of the control of the efficacy trial.
00:29:36 [W] If the first time your control this tested by the attacker is at runtime you're in for a bad day.
00:29:44 [W] So the only way to validate control implementation is to do so repeatedly using automated tests in some cases.
00:29:55 [W] You may be able to focus on implementing the controls and such a way that you can automatically test them at runtime in addition to the sdlc.
00:29:57 [W] This gives a continuous security monitoring capability like the Holy Grail of automated security.
00:30:05 [W] It's important to note you test the threat to be mitigated not
00:30:12 [W] Specific implementation you've coded your Patrol in other words check to make sure you can't access your S3 bucket by HTTP rather than validating your code is as you expected while implementing it this is a common.
00:30:21 [W] Mistake often encountered by Jimmy developers who test their implementation or the happy path rather than truly checking the intent of the code.
00:30:30 [W] Finally in the test space one potential project to be aware of his proposal made to seek security secur kubernative end-to-end via configuration and codified controls tests for the Department defense
00:30:47 [W] I'm in this talk. We discuss the importance of ensuring that your threat model from an end-to-end perspective and ensure that the sock and other operational teams are involved.
00:31:01 [W] Well taking this to its logical conclusion. We must Implement controls for our threat models and ensure we Implement any appropriate detective controls with our soccer teams.
00:31:13 [W] Also ensuring we have suitable automated testing in place.
00:31:16 [W] After all what good is a detective control if it isn't written appropriately to genuinely alert soft team member or process.
00:31:21 [W] Step 1. Do you threat model?
00:31:25 [W] Told you how to now if you go and do it step 2, we could use the attacks identified repeatedly against test clusters and gather the signals step 3 take these signals and work with the sock to configure the same tool
00:31:42 [W] You may need some training at this point.
00:31:47 [W] You may want to use your attack trees. So your sock host situational awareness in order to understand how the signals they're receiving relates to an attackers path through your system and so forth.
00:31:59 [W] You'll probably need to review audit configurations during this step just to make sure logs and either for the two full or to slim finally you want to rerun your test cases and make sure the sock lights up and you want to keep iterating on this so as
00:32:14 [W] Your system develops, you're identifying your threats. You learned identify new protective controls. You need to keep going back to the sock.
00:32:20 [W] So if your organization is new to Cloud your in the middle of a kubenetes implementation and you haven't thus far engage the compliance and info SEC team be aware that they are likely to be in a state of absolute shock as they evaluate your architecture for the first time.
00:32:35 [W] you're going to need to approach them prepared scaring them straight into a no is a real risk here.
00:32:43 [W] So come armed with your security documentation and threat model show them. There's some precedent followed in terms of Standards a deity like the CIS benchmarks for kubenetes and related.
00:32:49 [W] to test results from kubenetes
00:32:51 [W] Oh, so tonight if you're in gcp is that Google have open sourced GK patterns that demonstrate a difference to PCI DSS?
00:33:02 [W] And I believe that's the subject of another tool kit.
00:33:03 [W] Keep Calm again.
00:33:07 [W] If you're following this pattern or using this pattern you're demonstrating precedent and adherence to standards.
00:33:12 [W] You can also get one step ahead of the curve by mapping controls to your compliance requirements.
00:33:18 [W] Thus your tests prove your compliance and you move the assessment away from something that is just checked us-based.
00:33:23 [W] Realistically though not all requirements bestowed upon you by your organization will be testable or even applicable to collaborate of so if policy rewrites are required then use that as an opportunity to write policy in such a way.
00:33:38 [W] compliance can be demonstrated. We automated tests.
00:33:41 [W] She's going to finish with a couple of gotchas.
00:33:51 [W] So I mentioned that segregation earlier on as a as a tool for implementing security. You can put firewall rules around your different nodes at the infrastructure level.
00:33:58 [W] You can also make sure that your nodes have different instants permissions so that your workloads are not able to or only able to assume a minimal set of roles that you could keep privilege rolls on different nodes.
00:34:09 [W] Well,
00:34:10 [W] That's still too much thinking on the happy part of the so Tim. Oh Claire and grid Castle gave an excellent tool kit give consent Diego on how using node segregation does not guarantee security within a kubenetes cluster there. They may show the tax that included being able to reschedule malicious
00:34:27 [W] Well, it's another notes.
00:34:31 [W] These were historically possible and should be possible now, but the talk is worth revisiting and taking into account in deciding how important note segregation really is within your security architecture.
00:34:41 [W] So if you run a servicemeshcon your cluster it will need some Linux capabilities.
00:34:52 [W] That would not be authorized if you had implemented a restrictive policy curity policy. So for example with this year if you have an installation that does not use the sto cni-genie.
00:35:09 [W] Now if I recall from about a year to 18 months ago the sto could take this back then around with bleep.
00:35:19 [W] Maybe the privilege flag and Route don't quote me on that but it appears that things are much better now regardless, you will still need to relax your pod security policies to allow these capabilities now the
00:35:32 [W] Light among you will recall is racist talk from Keep Calm 29 teen and North America on the dangers of cat that rule. However, the attack from that talk doesn't succeed within this geocell servicemeshcon. It's the asterisks.
00:35:46 [W] So regardless if you want to lock this down the solution is to implement some custom policy using APA within a allow list for issue containers specifically.
00:36:02 [W] So the largest got you of them. All is that large regulated organizations with existing on-premise infrastructure tend to take that mindset into the cloud.
00:36:14 [W] So be wary and keep in mind that introducing Cloud native and kubenetes into a large regulated organization requires as much of a cultural change.
00:36:17 [W] technological change
00:36:18 [W] as you all know large regulated organizations, like Financial Services organizations have numerous compliance requirements that results in security architectures that place special emphasis on a few areas strict Change Control standardization of security architectures
00:36:34 [W] Extensive logging all that protected monitoring requirements.
00:36:43 [W] Unfortunately, the byproducts of that Focus over many years within an on-prem environment have resulted in the following practices heavily manual change control processes, which are slow time and resource consuming Reliance on detective rather
00:36:54 [W] Preventive controls within the security architectures.
00:37:09 [W] So an example of that would be the manual Change Control process that involves admin click Ops and then Reliance on the sock to detect any Miss configuration made by that admin after the event.
00:37:12 [W] Now neither of these practices are particularly secure maintainable all scalable within cloud and so obviously red flags to be wary of as you start your migration to Cuba nettings or cloud.
00:37:22 [W] So in short, I know we're running a little bit over threat model during the early on get everyone involved. Keep it up to date draw a tech trees.
00:37:33 [W] They're really useful.
00:37:36 [W] They break down high level throughout comes into discrete steps providing a great resource for security and for writing tests.
00:37:45 [W] They allow you to determine the controls needed to secure Your solution without overriding the cake. They provide they also provide a great source of situation awareness for the sock.
00:37:50 [W] Make sure you apply and test your controls in an automated fashion remembering to test the threat the control mitigates, not the implementation of the control itself. And once you've done all of this you'll be able to run.
00:38:06 [W] these automated tests against test infrastructures. So that integrating with the soap should be relatively easy.
00:38:10 [W] So we'll finish with the obligatory hiring float and thanks for attending the talk.
00:38:15 [W] Afternoon everyone. Welcome to day 3 of Q Khan and thanks for attending my talk start with the Q&A session.
00:38:30 [W] The first question is on threat modeling the runtime in Cuba Nettie's and the role of static analysis versus test detects. Actually the threat model starts almost well before
00:38:41 [W] Got a running cluster whilst you're designing your cluster.
00:38:46 [W] It starts as a theoretical exercise.
00:38:51 [W] But once you have a running cluster running your own tests and experiments and running tools, like Q punter kubenetes performing static analysis with tools like Opa and the audit mode or cube Seck.
00:39:02 [W] They will inform the contents of your threat model.
00:39:09 [W] They're an integral part of discovering threats and vulnerabilities in your system.
00:39:20 [W] So there's going to be a split between workshopping and they've sort of theoretical element and going out and proving or probing your your system once it's running.
00:39:23 [W] So hopefully that answers that question.
00:39:24 [W] I've got another question here, which I'm just going to publish their with me.
00:39:30 [W] One moment.
00:39:33 [W] And this is a question that comes up all the time, which says in a threat modeling session as it's based on brainstorming, how can you assure that crucial feasible nodes in an attack? Three don't get overlooked you recommend a checklist or something similar for this
00:39:49 [W] This now.
00:39:52 [W] The if you use a checklist, there is a drawback that you won't you just revert to just looking for threats based upon what you have in your checklist and you'll miss something crucial or
00:40:08 [W] Thing unique about the way in which your particular system works that the checklist doesn't doesn't.
00:40:15 [W] Doesn't doesn't contain.
00:40:19 [W] So again, you have to strike a balance. If you're all experienced in your, you know, no communities and Cloud native inside out then very quickly within a session.
00:40:34 [W] You'll be able to identify what the key concerns are if you're a little bit newer then yes start leaning on the on the checklists and sources of information.
00:40:47 [W] One thing we tend to like to do is we tend to run the initial sessions as as brainstorms particular when people are familiar.
00:40:51 [W] with the solution and then once we start writing up the notes of those sessions, we actually go and look at sources of information like my turret a tree I know there is I believe there was as your block
00:41:04 [W] with kubenetes specific attack Matrix
00:41:09 [W] And the other references are we start basically baselining with the the the contents of our brain storm session with the information that's out there.
00:41:23 [W] So we make sure we don't miss anything don't have any howlers.
00:41:28 [W] Hopefully that answers that question.
00:41:29 [W] If I can add one more eye there's a there's another another question on.
00:41:36 [W] moving from Dev and Ops into security and into threat modeling and what the best way of doing that is firstly if you're moving from devops into security you're in a fantastic position because you have all of
00:41:52 [W] The engineering and Cloud native expertise that you need.
00:41:58 [W] So it's a great position to be in the first thing actually to move into security and the sounds a little bit abstract, but it's really important is to have an understanding of the process of risk management because ultimately what you're doing
00:42:11 [W] Securing the system is your mitigating the risks that concern you the most there are a lot of exciting things at a low level and Engineering level with insecurity.
00:42:27 [W] But sometimes they they aren't necessarily the most important things that go into securing your system.
00:42:37 [W] So my recommendation on where to focus on when when starting a laterally for devops into Security is to understand
00:42:40 [W] Where what the role that security architecture controls play in the risk management process?
00:42:46 [W] So there's a there's a question on a test at automation Frameworks for security requirements.
00:43:07 [W] Hope that one up on the screen now.
00:43:11 [W] In some of the organizations that I found I've been in it.
00:43:25 [W] It's been very interesting where the security and threat modeling teams are in their infancy.
00:43:26 [W] And the most state was the security threat modeling teams of becoming more familiar with Cloud native Technologies.
00:43:40 [W] We started they've started writing using behavior-driven development practices and using the gherkin syntax to write their security requirements.
00:43:53 [W] But what that enables them to do, is it enables security Architects to in Fairly plain language, right?
00:44:00 [W] Right high-level security requirements even working and then engineer's using an appropriate appropriate framework.
00:44:09 [W] then take those high-level requirements and engineer tests around them and in terms of which test framework she use it actually depends on
00:44:23 [W] what the approved languages are within your organization because ultimately you want everyone to contribute to the security tests that you write.
00:44:36 [W] And so you need to look at what your organization is is most fluent in from a programming language perspective.
00:44:42 [W] Safe, he's telling that to see if there are any more.
00:44:51 [W] There's a question on whether you can have controls a different layers of the infrastructure. And his question is are there any suggested tools for automated control testing that cover many layers when people
00:45:20 [W] use a collection of specific tools
00:45:24 [W] the answer in my in my experience has been the latter people use specific tools to to evaluate specific layers of of infrastructure cluster and application but if
00:45:42 [W] that is anyone that knows of a tool that
00:45:46 [W] that traverses those layers of be would be interested in hearing about it.
00:45:52 [W] There's a there's another classic question here.
00:46:05 [W] How do you deal with threat modeling in Agile development where infrastructure might not be clear yet or ever changing.
00:46:10 [W] well ultimately
00:46:15 [W] Threat modeling should be done within the scrum team that that is building the infrastructure. Now that is that is the dream state where threat modeling is a practices embedded throughout your
00:46:33 [W] our organization and you don't have threat modeling as a service where a development of infrastructure team goes to the security architecture team asked for some threat modeling at a point in time and then and then
00:46:49 [W] You know the infrastructure evolves to the point where the threat model is no longer valid.
00:46:55 [W] ultimately where you need what you need to aim for is to install it instill a culture of threat modeling throughout the entire awk and that means that
00:47:05 [W] That individual teams will be threat modeling their own applications clusters, whatever it may be as it's being built the so what?
00:47:20 [W] there's a few different approaches to this which is if you're within that team every time a new feature in your Apple system is is being developed or forms part of a release you threat model that increment and so you keep your threat model up to date
00:47:37 [W] Infrastructure as it evolves over time.
00:47:47 [W] I think that's all we've got time for now. So thank you very much.
