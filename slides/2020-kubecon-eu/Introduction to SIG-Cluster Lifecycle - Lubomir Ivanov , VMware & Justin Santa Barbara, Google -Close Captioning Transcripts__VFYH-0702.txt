Introduction to SIG-Cluster Lifecycle: VFYH-0702 - events@cncf.io - Wednesday, August 19, 2020 8:21 AM - 116 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:02:49 [W] Hello, everybody.
00:08:40 [W] Welcome to the introduction to Sig cluster life cycle.
00:08:42 [W] Barbara I am one of the Sig cluster lifecycle co-leads.
00:08:46 [W] I'm also a software engineer at Google.
00:08:52 [W] My GitHub handle is just an SP Lumiere and myself are going to be giving this presentation together, but we are representing the work of a great many people within the sake.
00:08:57 [W] Hello.
00:08:59 [W] My name is suvarov.
00:09:00 [W] I'm a sequential.
00:09:02 [W] has a cocoa lead software engineer at VMware has open source program office and my GitHub handle with snail it one two three.
00:09:11 [W] Okay. So what are we going to talk about today?
00:09:17 [W] We're going to talk about cigs and what's it cluster life cycle is trying to achieve we're going to talk about how we're trying to achieve that through multiple sub projects.
00:09:25 [W] We have time to highlight only a few of those sub projects.
00:09:28 [W] So we're going to talk quickly about kubevirt IAM cluster API and componentconfig.
00:09:33 [W] And finally we're going to tell you how you can get involved and ask you to start your involvement today by filling out a survey that will help us figure out what we should prioritize and say cluster life.
00:09:40 [W] What is sequence life cycle?
00:09:43 [W] In kubernative took a special interest groups also known as 6 and sequels to life cycle is one of those all the six also have chartered documents and the charter document is something that defines what are the goals and
00:10:00 [W] SQL select Cycles objective is to simplify the creation configuration upgrade downgrade and teardown of kubernative coasters and their components.
00:10:11 [W] Also special interest group. You also have a vision to develop the tooling necessary to build a highly automated method quote.
00:10:28 [W] America called here means imagine something that is a Cooperative sequester that can be deployed on any quad provider. We want to avoid the pitfalls of the past because you had some unsuccessful experiments in the past
00:10:35 [W] Should be declarative API driven arcades, like deployment type of style and managing. These questions should be as easy as managing the kubernative subjects like pots.
00:10:51 [W] that is a familiar pattern to everyone what to make the 80% use case simple and the 20% use case possible always consider a simple configuration available to everyone but there has to be
00:11:05 [W] Advanced configuration that is still possible to the rest of the users.
00:11:10 [W] We also want to commoditize or standardized Kate's cost of deployment.
00:11:20 [W] So if somebody's looking at your quest, sir, eventually, they're going to know that okay, this is following a standardized way a standardized pattern for Costa deployment.
00:11:29 [W] So on this slide, we have a diagram of the current stack of tools that we are working on at the bottom we have had cdms EDM is potentially a manager of its requesters a COI and a library that is working progress
00:11:47 [W] High level tools on top. We have q beta M cubed m is a coaster bootstrapper as all people should know already it costs around us is a project where we are working on standardizing the way
00:12:03 [W] Sir, the poet and a coarser and their manage the lifecycle like how do you upgrade them how to downgrade them question API or of people should be familiar question API as well.
00:12:18 [W] This is a project where you can create questions using a declarative model.
00:12:21 [W] It's very similar to the kubernative declarative patterns.
00:12:29 [W] patterns. So if you combine these two these tools you can potentially produce artifacts that you can then feed to image Builder and image Builder canonical.
00:12:33 [W] In create like a virtual machine image for you and the virtual machine image can then be fed to the casa provisioner, which is a layer on top the casa provisional can create you a question sir. That uses this virtual machine image.
00:12:48 [W] Finally on the left. We have componentconfig componentconfig.
00:12:57 [W] Saadia is that we can configure all these components on the right side with declarative API that is very similar to the Co-operative CPI. And in fact, it uses the same machinery.
00:13:07 [W] As a group we are also trying to follow a particular philosophy and that is arguably the Unix philosophy.
00:13:22 [W] We want to make each program do one thing and do it very, well the boundaries between the separate projects should be clear and the should not be ideally that much overlap every computing.
00:13:33 [W] Project that initially meets one need. Well, we were eventually expanding scope to only meet several needs poorly.
00:13:44 [W] This is something that we have to avoid.
00:13:49 [W] We also expect the output of every program to become the input of another program and combining all the tools that we have.
00:13:54 [W] We want to create this Voltron like software.
00:13:57 [W] On this slide, you can see upsell dough Voltron example.
00:14:08 [W] It's a immutable note update type of scenario.
00:14:12 [W] So the left side we have a CI at triggers are rebuilt of artifacts notifies an operator to update customer effects that are potentially consumed by the questor API the Costa Rica
00:14:24 [W] Rolling update then a booster a provider which in this case is kubeedge M to trigger the new nodes to join the coaster.
00:14:34 [W] In this section, we would like to highlight some projects that we are currently working on.
00:14:43 [W] The first project we would like to highlight this Cube adium. Our of you should be familiar with kubeedge about this point could be DM is a Costa botes rapper.
00:14:54 [W] It has a simple task.
00:14:59 [W] It should create a best practice kubernative sequester for each kubernative version.
00:15:05 [W] It should have a simple user experience and the concern should be reasonably secure kubectl has a limited scope its intended as a building block only deals with the local file system in the covering this API. It does not deploy a cni-genie.
00:15:14 [W] Network for you, this is out of scope and you have to manage this yourself, you can pick a cni-genie mission and apply it over the cube ADM created coaster as an atom it has a composable architecture
00:15:29 [W] Thing is divided into phases.
00:15:33 [W] Mostly everything. It was for high-level tools through break down the face process and pick the elements that they want and such high-level tools are for example chef and puppet.
00:15:45 [W] On this diagram you can see example usage of cube ATM.
00:15:53 [W] So the first layer is the infrastructure provider that can give you machines such as a control plane machine designated for that role and also a regular nodes. The second layer is where the bootstrapping happens and also the community
00:16:07 [W] And finally the third layer is where you can apply others.
00:16:14 [W] That is the infrastructure orchestration also coaster apis there. So based on coaster API specification, you can trigger a certain implementation of the concept of pi/2 reprovision infrastructure for you.
00:16:26 [W] The cube ATM project has a roadmap.
00:16:34 [W] We want to simplify day to operations to do that.
00:16:46 [W] We want to create a cube a the operator The kubernative Operators idea is to allow the users to manage some features that are currently missing incubate them for instance.
00:16:47 [W] We mentioned earlier a tool should be designated to do one thing and it's our discomfort debate them to manage all the nodes because cubed m is run on a particular node. It does not.
00:16:58 [W] Know about the other nodes in the cursor on the infrastructure level. So you should be able to reconfigure this nodes using the Q beta operator potentially by utilizing a declarative pattern.
00:17:13 [W] We want to support different Workforce like changing the consider Behavior overall or certificate rotation.
00:17:21 [W] We want to make you BDM friendly for high-level tools.
00:17:24 [W] What to do that by enabling machine readable output currently machine readable output is only possible for some of the commands.
00:17:33 [W] Operator potentially by utilizing a declarative pattern we want to support different Workforce like changing the questor behavior overall or certificates rotation.
00:17:39 [W] We want to make Cube ATM friendly for high level tools, but what to do that by enabling machine readable output currently machine readable output is only possible for some of the commands.
00:17:40 [W] want to enable it for all the commands and we want to make the phases.
00:17:43 [W] For Kube ADM anything join retractable and where possible? It is important. We also want to increase the flexibility around adults and it's CD by leveraging some of the ideas. Of course.
00:17:51 [W] There are rules. We want to transition our coordination Q proxy deployments which are currently the core adults incubate them to operators and we have to also lower the barrier between what is considered low
00:18:06 [W] We want to simplify componentconfig management.
00:18:13 [W] We are going to talk about this later in the slides and also very importantly move cubed M out of 3 out of 3 means the kubernative kubernative repository and around that we have to define a new release process and build automation.
00:18:25 [W] This will allow is a van during for those that wish to consume cubed M as a library.
00:18:32 [W] If you want to learn more about Cuba DM we have q beta M Deep dive session at coupon Europe 2020 that's on Wednesday, August 19. The presenters are going to be Rose GE GE from VMware and
00:18:49 [W] see
00:18:51 [W] Okay, I'm going to highlight another one of our projects the cluster API cluster API is building a declarative kubernative style API for creation and management of clusters. It also manages some of the infrastructure that
00:19:09 [W] I hoped things like networks or I am policy from your cloud provider.
00:19:18 [W] It's focused around a declarative specification of the machines that become the nodes of the cluster some important things to understand.
00:19:29 [W] This is different from the kubernative cloudbees Vidor, which provides workloads Cloud resources, like volumes and load balancers. This is provisioning similar infrastructure, but for the cluster itself,
00:19:38 [W] And one of the important design decisions was that the specification of a machine is immutable, but it's interesting in that cluster API still provides the ability to upgrade the cluster.
00:19:51 [W] You may be asking yourself.
00:19:56 [W] How is this possible?
00:19:58 [W] How can the machine be immutable yet?
00:20:01 [W] The cluster can be upgraded and therefore be mutable and the answer is that we follow a similar pattern as kubernative does we don't just want to use kubernative CR DS.
00:20:13 [W] We want to follow the kubernative API design patterns. And in kubernative is there is indeed a similar design pattern pods are immutable but pods are wrapped by replica sets. Which runs a number of them.
00:20:23 [W] A replica set remains immutable but a deployment creates mutability over those replicas sets.
00:20:36 [W] It is able to create a new replica set and scales down the old one and scales up the new one.
00:20:39 [W] Like a pod is immutable a machine has a number of replicas in a machine set like a replica set and a machine set is still immutable but a machine deployment can create a new machine set scale down the
00:20:55 [W] Machine set and scale up. The new one a machine deployment is just like a deployment and that's how we can achieve mutability at the machine deployment level.
00:21:11 [W] The machine is the same ci/cd whether this is on AWS or gcp or VMware and there's an analogy here to storage class has in kubenetes. There is similarly a machine class machine class is a kubenetes object that
00:21:21 [W] Scribes attributes of the machine that are specific to that cloud provider just as a storage class describes attributes that are specific to a particular storage back-end.
00:21:30 [W] Cluster API is a newer API and we've actually developed our thinking around this design pattern over time machine class objects are actually typed objects.
00:21:42 [W] It has a different kind on AWS than on gcp AWS is an AWS machine. Template.
00:21:50 [W] GCE is a GCE machine template this allows for the fields of a machine class object to the to be specific to the cloud or infrastructure provider and that allows us to get richer.
00:22:01 [W] Type checking and validation then we do in the storage class where a storage class has the same kind across all the storage back ends. So not only re use but also evolution of the kubernative design patterns.
00:22:16 [W] So let's talk a little bit about the cluster API roadmap cluster API is still in Alpha.
00:22:24 [W] So how does it get to Beta? Generally the main goal is to get it into widespread real world use and continue to get feedback on whether our expectations match how this thing is used in production more
00:22:37 [W] This goal both automation of testing and of the project processes, but the next couple of Alphas are going to focus on some of those blockers robustness of the control plane a few features like Auto scaling and spot instances some improvements to the
00:22:53 [W] user-facing tool called cluster of CTL and in the alpha after that resiliency of the nodes extensibility of load balancing using the latest features from some of the other Sig sub-projects in order to get to Beta the really big thing we need
00:23:08 [W] our documentation which goes hand-in-hand with more feedback from Real World users like you
00:23:14 [W] Also getting an integrated into some of those higher level tools. So for example cops is planning to support cluster API initially for the notes and getting the existing kubernative Z 2E tests using cluster API on gcp and on AWS
00:23:30 [W] As you can tell cluster API is an exciting and rapidly evolving project nadir and Cecile are giving a deep dive talk on Wednesday. So if you'd like to learn more, I highly encourage you to attend that.
00:23:45 [W] Hello project that we wish to highlight this componentconfig corporate coffee is a Cooperative style API for configuring components and componentconfig is trying to solve some problems.
00:24:01 [W] The first one is that the core kubernetes components are not consistent in how they are configured.
00:24:14 [W] They use a lot of flags and oftentimes the flags across the different components that do exactly the same thing have different names the solution.
00:24:16 [W] Notice that the core components should implement componentconfig.
00:24:30 [W] And in fact, most of the core components have already started doing that. Another problem is that it's pretty hard to write a Kate's like componentconfig Clarity of coffee.
00:24:34 [W] So adding a cup of coffee itself is not that easy.
00:24:44 [W] So the solution for that is that we should Factor common Logic for component related code in the repository designated for that. That is componentconfig.
00:24:45 [W] For configuring components and componentconfig is trying to solve some problems.
00:25:01 [W] The first one is that the core kubernetes components are not consistent in how they are configured.
00:25:01 [W] They use a lot of flags and oftentimes the flags across the different components that do exactly the same thing have different names the solution for that is that the core components should Implement componentconfig and in fact
00:25:02 [W] to use the same tool kit
00:25:03 [W] componentconfig gives us a lot of benefits. It has maintainability.
00:25:13 [W] So when a component has a flag set that grows over 50 flags configuration becomes painful upgradability.
00:25:24 [W] So for upgrades version configuration is arguably easier to manage them Flags since flux our own version programmability configuration expressed as Json in the objects and also consistent
00:25:32 [W] In introspection and also possibility many types of config simply cannot be expressed as key-value pairs.
00:25:40 [W] And finally, it's also declarative open API information can be exposed using componentconfig and use for generating documentation for your config to learn more about componentconfig.
00:25:56 [W] You can watch this talk that Lucas kallstrom gave the previous Cube call and if this stock you can actually see some of the details implementation details around how we are actually implementing componentconfig in existing
00:26:09 [W] Or how do we want future components to implement it?
00:26:15 [W] In kubernative we have a working group that is called components standards.
00:26:27 [W] It's a combined effort between sequence alive cycle and seek API Machinery trying to tackle some of these problems around componentconfig to get engaged of fight more about it.
00:26:36 [W] You can follow these links.
00:26:37 [W] I wanted to talk a little bit about how you can get involved most of the projects.
00:26:45 [W] We've described are not yet in GA Cube ATM is some of the high-level provisioning cluster provisioning tools are but otherwise the projects are in beta in alpha or even pre Alpha.
00:26:58 [W] So we need your help and I'd suggest this is also an opportunity. Sometimes as a kubernative contributor. It can feel like everything that can be done has either already.
00:27:08 [W] Done or there are ten existing issue stating why you can't do it that is very much not the case in Sig cluster life cycle.
00:27:16 [W] There is a lot of work still to do that work is very concrete and we are very oriented around encouraging contributors.
00:27:24 [W] Along with our community page many of the sub projects are excellent to triaging issues.
00:27:43 [W] They label issues with good first issue or help wanted to try to steer you to issues that don't require the in-depth knowledge that you'll likely gain over time. A great way to get involved is with documentation or even just trying out different things and Reporting any issues you
00:27:50 [W] Counter there are a number of zoo meetings.
00:27:56 [W] There's an overall Sig cluster life cycle. We meeting bi-weekly and many of the sub projects have their own bi-weekly meetings as well.
00:28:03 [W] So, please attend ask questions introduce yourself introduce yourself on slack.
00:28:11 [W] There's a very active slack Channel where you can find people at all hours of the day and night if you're not yet a kubernative contributor. I encourage you to attend the new contributor sessions that are run by C contributor experience.
00:28:19 [W] In general the kubernative is community philosophy is that you earn your place at the table by chopping wood and carrying water by taking on the tasks that need to be done.
00:28:35 [W] So everyone is expected to get involved and the flip side of that is that you are there for welcome and encouraged to get involved.
00:28:38 [W] If you want more C cluster lifecycle content, there are two other talks of particular relevance to see cluster life cycle on Wednesday.
00:28:49 [W] There is a talk about minikube and on Thursday talk around componentconfig Dynamic configuration with componentconfig and the control Loop.
00:28:59 [W] Sig was the life cycle is running a survey for 2020 in this survey.
00:29:07 [W] We have some generic questions like a constant sizes different mechanics uses of quality providers. But also we have some questions specific to sub-projects that Cube ATM equals 3 pi.
00:29:19 [W] Is survey it will be very appreciated.
00:29:24 [W] We have reached the end of the presentation.
00:29:30 [W] Thank you very much for your time.
00:29:32 [W] And now we can have a Q&A session.
00:29:34 [W] I can probably fix this awesome. Thank you for joining us today.
00:29:49 [W] I'm Justin the to my right is Loop mirror.
00:29:54 [W] The there is a sort of Q&A where you can type questions.
00:29:57 [W] I think we're about 10 or 15 minutes to hopefully get through as many of those as we can.
00:30:01 [W] There are two early in there. But please do add your questions and we can make sure to get them. I think there's a I also say after those
00:30:10 [W] There is a slack Channel.
00:30:12 [W] I think it's going to be posted in this room shortly and the slides are in there in PDF format looks like so that was one of the questions where can I get the slides and another question that was
00:30:25 [W] And then we are posted also the the URL to those slides in the in the response that first question Dimitri asks. Can you say something about ci/cd ADM as well?
00:30:36 [W] Yes.
00:30:44 [W] So at CD @ çd ADM is one of the you know components of our of our modular strategy and the higher the sort of tools along the top cops and
00:30:51 [W] You know components of our of our modular strategy and the higher the sort of tools along the top cops and also kubevirt DMR intending to use Seda
00:30:56 [W] Mr. Intending to use Seda DM to manage at CD both of them to date have had their own management solution and that doesn't really fit
00:31:07 [W] And that doesn't really fit the goals of circleci life cycle in terms of you know, modular reusable components. And so we are as a community investing in that effort.
00:31:18 [W] I'd also say it's very early it is
00:31:22 [W] Not it's a ci/cd ADM is actually a combination of a couple of projects in the community one called Seda tm1 code STD manager and then we're still sort of merging it and making sure
00:31:38 [W] So it is a great time to get involved. If you want to have I guess disproportionate impact. It is perhaps not yet production-ready and not a great thing to be running in production and say right now but please get involved and you can help
00:31:54 [W] Those are the questions we do have I do want to call attention to the survey. The survey is definitely worth finding out yoseob. If you find the time, please
00:32:13 [W] Important for us to gather some feedback on the projects require is your quest to usage.
00:32:20 [W] So yeah, it's very important for us.
00:32:23 [W] Do we have more questions in the what form?
00:32:30 [W] I don't see any more.
00:32:33 [W] We have more time. So if you have questions, please ask them.
00:32:36 [W] Our way anymore questions also like you know, I don't know if everyone got it from the picture that we looked at. But you know, we have these five or six like main some projects and some of those have other, you know repositories but beneath
00:32:57 [W] A lot of repositories but I guess five or six main sub projects and some of those are very mature and GA like kubeedge VM and some of them are at the other end of the spectrum like at CD ATM and so whatever
00:33:14 [W] want to you know, whatever your
00:33:19 [W] approach to development shall we say like we've talked in the past are like pioneers and settlers and the different personas that exists in open source development.
00:33:31 [W] Whatever. Whatever your persona is. There is a presumably a Sig cluster lifecycle project. Which matches your persona.
00:33:38 [W] I'm much more of the I guess Pioneer type.
00:33:47 [W] So I'm probably more interested in like the Seda DM side of things and other people are probably more interested in the more stable projects that kubeacademy.
00:33:49 [W] But yes, I highly encourage you to get involved and there are many ways to get involved not just coding but you know trying things out particularly the more mature projects, but even even the ones which are going to be a rougher experience.
00:34:04 [W] always a problematic or difficult to particular with so many scenarios out there and
00:34:11 [W] even during the survey is very helpful to us. Like one of the hardest things to know is what to prioritize and so the survey is not a how was the video of what was the speaker?
00:34:27 [W] You know, what was your experience? Like? It is a Sig cluster lifecycle prioritization survey. Like what do you use and what do you what do you think we should be working on?
00:34:30 [W] Also, please join the sequester lifecycle channel on the kids. Like it just ask us a question. Like hey, I have this set of knowledge has I want to contribute to a certain area. We can give you the area that is more appropriate for your
00:34:48 [W] To teach so just drop us a message or in general. If you have questions about any of our soup projects we can try to answer them.
00:34:57 [W] So it seems we have no more questions to the platform.
00:35:14 [W] We can continue the discussion on the cncf slack. The channel is to - Cube Khan - maintainer so you can find us there we can continue the conversation. It's like
00:35:19 [W] Thank you.
00:35:22 [W] How about great? Keep calm.
00:35:23 [W] Thank you.
