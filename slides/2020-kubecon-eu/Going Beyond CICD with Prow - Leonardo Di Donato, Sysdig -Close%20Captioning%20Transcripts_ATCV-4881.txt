Going Beyond CI/CD with Prow: ATCV-4881 - events@cncf.io - Thursday, August 20, 2020 6:54 AM - 57 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] hello everybody this
00:00:03 [W] Is Leo today?
00:05:34 [W] We got a story for you folks.
00:05:36 [W] Guess what?
00:05:41 [W] It's a tale about Falco, but not that kind of tale about DPF Cisco rules runtime security and so on that I usually stress people about sorry not Sonic today is different.
00:05:48 [W] I promise today.
00:05:54 [W] The important tools for Falco to adopt Pro the same ci/cd system kubernative ceases to automate the whole set of workflows and policies that the governance of an open source project requires anyways.
00:06:05 [W] My name is Leonardo didonato.
00:06:09 [W] I'm an open source software engineer sysdig.
00:06:12 [W] You are my daily job is to called Falco a velvet and maintain it as an internal Falco.
00:06:22 [W] I also have to Advocate and presented stackrox G and all the hard work we do to continue using profit as a softer and as an open source project.
00:06:24 [W] So here I am is this a photo of me moving ends like a real Italian Falco swag to the first one guessing the exact meaning and since it's very very likely that they will do other Italian and gestures while spiffe.
00:06:36 [W] You please don't give up if you don't get this one.
00:06:40 [W] There will be other opportunities. You can usually find me on Twitter guitar been generally the Weber's with the nickname loaded.
00:06:51 [W] Oh, feel free to drop me a line ask me questions about Falco EPF Colonel, whatever no problem at all. I like to socialize
00:06:56 [W] when I first joined sysdig to work full-time on Falco, which is now the first runtime security project incubated by cncf.
00:07:08 [W] Honestly, the contributor experience was not that good Falco creating 2016 2 parsec kernel and containerd events and the tech security threat from them was just donated to the cncf at that time.
00:07:19 [W] Initial efforts to provide healthy open suse governance were already being put in place by they were not structured at that time.
00:07:30 [W] Yeah, we had an initial continuous integration system built on top of Travis CI, but it was honestly causing more troubles than benefits.
00:07:45 [W] We still had the building and testing infrastructure for Falco drivers kernel modules and the ppf probes internally at sysdig and we needed to bring it in the open the one here in the mummies made the first days. I joined the most years ago like
00:07:55 [W] The repositories in the Falco security GitHub organization had zero or near zero automation there were policies but no one or nothing enforcing them nor they were easy to discover for the community
00:08:13 [W] After marriage Dean by the same outdoor without reviews there was not a clear transparent auditable performant a nurse.
00:08:23 [W] not mention external contributors. Please good counting, but you get the point.
00:08:27 [W] So hey, no blame. We are all here to learn and improve and do things better and better open source is about culture.
00:08:41 [W] First of all, the only problem was I didn't have enough time to build a custom ci/cd system for Falco.
00:08:51 [W] We all know that testing and automatically verifying the code we merge into our repositories a crucial step towards the creation of good maintainable and successful software, right? But that's just one of the thing that drove all around the code, especially
00:08:58 [W] on the open source code
00:08:59 [W] But neither I did have spare time to create an automatic easily configurable and optimal policy enforced system. And for the same reason spending hours by reviewing and double checking every single action performed on GitHub from other contributors where they were
00:09:15 [W] Following the policies or not, whether they were expecting contributor workflow or not on various repositories in the Falco GitHub organization has never been an option. I mean for evident reasons this cannot be a task for a human.
00:09:30 [W] I mean at the time the team working full-time on Falco was just the two of us me and my friend Lauren. So therefore we needed to focus on riding ebps code and C C++ to improve Falco.
00:09:44 [W] First of all not reinvent the wheel.
00:09:52 [W] However, we couldn't leave out or ignore this topic at all.
00:09:54 [W] So how did I solve this problem? I started thinking of other successful open source project from which the borrower ID.
00:10:00 [W] Us and best practice I asked myself to look for something already implementing most if not, all our needs to create a healthier open source environment and better open source software a typical example of a social problem solving. I mean
00:10:16 [W] Coping I saw look at the kubernative sand here came into play pro.
00:10:24 [W] You might not know it's Pro. But if you contributed to kubernative sore interacted with some of the issues, it's Perico's. He's for sure you somehow already interacted with it. If you've ever met kubernative CI robot, that's just one of the
00:10:38 [W] faces of pro
00:10:39 [W] pro is advertised as a continuous integration system based on kubernative.
00:10:48 [W] Well, it turns out it's way more than that.
00:10:55 [W] It's a platform for automating our open source key tab called life cycle to it was built for kubernative on kubernative because kubernative already shipped some of the features needed for continuous integration continuous deploying systems and automation.
00:11:04 [W] Leveraging pads, you can contain arrays your bills craft astronomers that will execute your test Suites making everything more self-contained and reproducible.
00:11:19 [W] But since pods are just a bunch of containers. You can also check out your open source code by using in it containers.
00:11:24 [W] You can share volumes upload bailed or test results using sidecar containers and so on a lot more by using comfy maps you can also check in a
00:11:33 [W] Of configurations in our declarative way with secrets. We are ready have credentials management and do not forget custom research definitions.
00:11:47 [W] They come in pretty handy if you want to be like continuous integration system because they let us Define controllers interact with custom resources dedicated testing with custom controllers.
00:11:56 [W] You can also Implement different triggers for different events. For example, you can write a controller that listens for the taboo book payloads or gitops.
00:12:03 [W] Bien, sûr. Even one polling at the fixed interval some other get platform. You can schedule customer resources on different clusters or in a different room space and so on a custom controller could watch over the status of the customer uses
00:12:18 [W] On and whenever it's completed can perform other actions.
00:12:26 [W] So basically they are very powerful mechanism that makes scheduling allocation customization flows easier.
00:12:36 [W] Furthermore. Kubernative gives us the freedom to do not worry about scaling and scheduling 6, it's distributed its fault tolerant and it's the clarity. These are all the features that Pro in edited.
00:12:42 [W] Also Pro can span across different repositories and different GitHub organizations if you want.
00:12:50 [W] This means we were able to deploy the same system of every Falco security project. So to provide to the Falco Community the same contributor experience disregarding the precise repository of project.
00:13:06 [W] They are contributing to for all these reasons.
00:13:08 [W] It seemed perfect for me.
00:13:09 [W] And in the end Pollyanna the name we give to it help us spending a lot less time caring about ci/cd and open-source automatic governance allowing us to invest that time in more Falco coding.
00:13:22 [W] Reading it in place since more than one year.
00:13:27 [W] I also notice in that having the same recognize and mostly automated contributing process in place for different repositories helps people.
00:13:40 [W] increases their confidence in contributing because after the first attempt or contribution, they don't have to learn and adapt to different process for doing the second one maybe on a different but related project honnestly as a cncf maintaining trying to
00:13:50 [W] Software while also increasing its community and making it healthier I couldn't ask more.
00:13:55 [W] But what's Pro?
00:13:58 [W] let's give a deeper look at its architecture and now it's made its composed of various Microsoft services that they take advantage of the kubernative functionalities as said to provide a set of core components mainly the one depicted in this diagram
00:14:14 [W] These architecture as you can see it's pretty module are it allows for extendibility and eventually replacement of components the copies from which to start is the project custom resource for sure. It lets us toward the state in the kubernative
00:14:29 [W] CPI server every Pro component is a custom controller dedicated to managing programs somehow and for some purpose for those interested in more details about life of a pro job.
00:14:43 [W] I put a cooling to read in this light anyways provides different types of programs the type of apple job specifies when in doubt it will be triggered. The more common one is the one called presubmit.
00:14:55 [W] These type of projects of rants or pull requests and it can be triggered automatically or be triggered by as life common.
00:15:10 [W] They usually run as kubernative pods and reportedly status to get up in form of GitHub status checks, but you can also run programs resources on different execution platforms like 1080 vote for Jenkins if you feel brave enough,
00:15:19 [W] I mean we can't we get them for different purposes to we can trigger them for building testing even publishing the artifacts of our project.
00:15:34 [W] We can run them when a pull request is merged in or just periodically they give us a lot of options. But what's the component that manages the life cycle and exclusion of this job.
00:15:43 [W] It is plant Plank is the main piece responsible for running the jobs within Pro it sits there watching for changes to
00:15:51 [W] to the custom resources, which means it looks for jobs created by Pro with agent kubermatic.
00:15:58 [W] It starts them updates their state and terminates duplicated press add new jobs, which is a useful functionality when you push another change to your pulley can see soon after the previous one.
00:16:08 [W] So that's a pro job not to have a pod plan creates it the probe does have a power that is marked as completed plank updates the program status according to the job.
00:16:19 [W] Start to see the passed or failed it also stores the logs of your job. But only on Google Cloud Storage buckets. Last time I checked anyways, I know there are ongoing efforts to parties functionality also to other platforms instead.
00:16:34 [W] Are all our gym is the service responsible for scheduling periodic / jobs in a put the definition of periodic per job and working on for the Falco security GitHub organization.
00:16:47 [W] It implements a pro job which scope is to Mark issues with more than 90 days of inactivity as the real issues by letting our Box O Yanna commenting on such issues with the
00:17:01 [W] Come and which in turn invokes the lifecycle plug-in as you can see here.
00:17:16 [W] It's very simple to create prove job and decide the frequency is just a bit of Yama. You can put Iran most whatever you want in form of a Docker image also containerd that runs test periodically and things like that.
00:17:21 [W] The only limit is your imagination.
00:17:24 [W] Another essential part of proactive texture is the oak component and the plug-in system it to write it all starts with GitHub or bucks, but what gitops were booked up.
00:17:39 [W] Well, they are mechanisms that GitHub provides us to listen on its events it tell us who generated an event who sent it when what the content was and other related info when I get up with book is directed
00:17:50 [W] Ward's our Pro cluster it reaches the / Shook and point exposed by the deck component will see in a bit.
00:17:57 [W] Or our GitHub or box will go through this endpoint that simply pipes their pillows down to component which in turn depending on what we're book payload content was will trigger the relative plugin.
00:18:11 [W] In fact do component is just a tiny go server that accepts guitar billions map them to actions and acts as a plug ins agent.
00:18:26 [W] It's basically a dispatcher of GitHub events to Pro plug ins to simplify.
00:18:29 [W] I suggest you to give a look at it by clicking on the link in this slide as you have probably started to imagine the previous slide with plugins. You can do house on things like honking at Old pull resources of your friends. Like I do all the time grpc.
00:18:41 [W] Aside Pro comes with some cool plugins by default. You can find all of them in the link provided into the slide, but it also support external ones. And this is really cool thing.
00:18:56 [W] Some of them react to comments on the table containing / Commons implementing a kind of chat tops flow others, simply watch over other types of guitar events, like comets reviews merge and so on.
00:19:09 [W] Inaudible one is the config updated plugin for sure.
00:19:18 [W] We would like to redeploy our controllers. Every time there is a configuration change, right?
00:19:20 [W] These plug-in handles it it acts like an agent that a drastically react to events happening on the configuration files.
00:19:26 [W] And we love it instead the trigger plug-in determines which job to run depending on the config files and creates the corresponding probe resource responding to the / okay to test or / retest commands.
00:19:41 [W] There are also plugins like the old one that labels a pull request with a label that block it to be merged by TD another important component.
00:19:50 [W] We are going to talk about soon or the approve or looks good to me and Blunderbuss plugins.
00:19:55 [W] The latter provide statistical means to select a subset of reviewers found in the owners file for reviewing and approving a pull request.
00:20:11 [W] Then reviewers can take a look at it and Mark it with the /l G TM common to Signal the code is okay, or at least looks okay in their opinion.
00:20:18 [W] Anyways, the poorest will be ready to be merged in only when an approval will approve it either by the / approved government or by clicking the approve green button on the top.
00:20:27 [W] Do you want to see what's going on on your pro cluster?
00:20:31 [W] The answer is deck this component provides a dashboard to look at all the young guy and put the routers what's buying them to be merged in their current state in detail and recent programs.
00:20:44 [W] As a glance of the queue of Puri case is scheduled for all the Magic by the tea that service. Finally. It also provides the help on plugins and / commands available for every repository you enabled through for these works pretty well
00:20:57 [W] Matthew open source workflows and policies when you want onboard new contributors in an easy way.
00:21:08 [W] I just mentioned today to times right? Well today is simply amazing.
00:21:15 [W] I don't know if it's pronounced TD or tidal, but forgive me it lets your but automatically merge pull request is when they relative required the tab status checks are okay.
00:21:24 [W] You don't have to do it by hand anymore.
00:21:26 [W] It uses the GitHub search query to inspect all the marriage requirements.
00:21:32 [W] For example in the fall cookies.
00:21:40 [W] It ensures that the poor Regus is not merge until it got through approvals from antennas comets are signaled off.
00:21:41 [W] There is no hole from antenna pull request. It's not a work in progress or a draft progressed. The history has been based on top of the current master of Falco the porous cup boost EXT contains a release note block for the future change lat.
00:21:57 [W] And finally, all the context is which can also be external continues Integrations jobs. Not only probs are green and you can have a look at all of these margin requirements.
00:22:10 [W] They can vary from report to report to enough visual form inside that you can even see what precise label is blocking a Perico's from being merged in or if anything else is preventing it to be merged when t - shows up in the form of
00:22:22 [W] I did tabs that you check into your Perico sees as you can see in the screenshot Iran, right?
00:22:33 [W] It's very clear about what the public has. He's missing to be put in the March Q finally T that lets us decide the merge strategy we want to use which is something I love because it helps me keeping the Falcon GT stirring linear now,
00:22:43 [W] Suppose we have Pro running from Mom's maybe about two years like in our case. The Seeker components enters. The scene its main duty is to delete completed project jobs and remove leftover pods.
00:22:59 [W] It also ensures to keep around the most recent periodic jobs, because prodyna needs them to calculate when to trigger the new ones. So as not to lose the state its kind of the garbage collector of pro after two days. It deletes completed projects
00:23:12 [W] After 30 minutes, it cleanups completed pods, but you can also configure these values. If you want at this point. We just need a mechanism to get notified when our job is complete, right?
00:23:27 [W] We don't want to stay at Google Cloud Storage old a or other things like that here enters the scene the crier component. It detects changes to prove job custom resources and reports in status changes it can
00:23:38 [W] To get tab which will cause GitHub statuses to show up or it can report to pub/sub services to Gary tortoise luck notice. It overlaps a bit with blank as a producer. You only want one of the two to do this job, but no worries you can
00:23:53 [W] Said will be table reporting plank adding the - - skip - report to flag to its deployment read more if you want in the provided links now that we know all the pieces in the landscape.
00:24:07 [W] What's the resulting workflow?
00:24:08 [W] They Implement?
00:24:13 [W] Let's see for example, the poor ecosystem contribution workflow implemented with proof of Falco for the sake of recent Tatian.
00:24:19 [W] I'm going to simplify it a bit but you will get the sense. So we have two participants here a contributor.
00:24:23 [W] And that a viewer.
00:24:24 [W] When the contributor sends a fantastic player ecosystem Falco him happy but what happened Sunday loodse GitHub and sends our box to the Pro or component containing the details about this just open it to recast the
00:24:41 [W] Component. This patch is the payload of the Weber Q to the proplugger in which analyzing the owners file of Falco understands that no approval has already reviewed and approved doriga's so the approved plug-in in the form of our beautiful
00:24:56 [W] Bodkin piranha creates a comment on the Perico's to notify the public is is not yet approved and needs to be at the same time the same payload get this patch to other Pro plugins like the sides plug-in that simply
00:25:12 [W] Labor support you guys depending on the number of line changes.
00:25:15 [W] In the meantime the dco plug-in verifies all the Comets of the poor ecosystem ensure the outer signal of them because our contributing process requires the developer certificate of origin at this point do component
00:25:31 [W] Reviewers to the guitar bull recast and the tab notified them either via email or via notifications or buff depending on the edit tab settings soon. After Leo being a paranoid maintainers comes to look at this
00:25:46 [W] You to recast Max eat with looks good to me / common, and eventually triggers some praise.
00:25:53 [W] I mean job with some other / comment in this case, the trigger plug-in enters the scene and contacts the kubernative say Pi server to ask it to create a proper job custom research.
00:26:08 [W] kubernative does all its magic and runs this program when these jobs completes depending on its axis the GitHub the rigorous is
00:26:15 [W] Is updated accordingly now a maintainer can finally approved you how some contribution either by using the / approved command or by pushing all the green buttons on the top there proof plugins wake
00:26:30 [W] Again verifies that the An approver approved leaves a comment in the purest about these and label sit with proven the label.
00:26:38 [W] In the meantime today sitting there glaring at all, the GitHub pull reader sees it notices that you're curious as now all the marriage labels required that it got the correct number of approvals from the maintainers and supports
00:26:54 [W] It into the merge Q finally a minute or two later.
00:27:00 [W] You're pouring gas will be merged in the default branch of Falco and you will officially become a Falco country Builder.
00:27:07 [W] Congratulations.
00:27:10 [W] I know I know now you want your own Proto, right? So, let's see the minimal steps needed to have one.
00:27:17 [W] Programs in any kubernetes cluster with no or minimal changes. So first thing first create a kubernative cluster, I will not show you how to do it.
00:27:28 [W] Sorry, then you need to do three things.
00:27:31 [W] First of all create a GitHub account for Peru to use it would be your fantastic but acting on behalf of pro like our piranha we call it that way because it's the Italian name for a kind of liquor Falcons by the way,
00:27:47 [W] Probably ignore most Vita Bivens generated by this account.
00:27:52 [W] So it's important.
00:27:56 [W] This account is different from any other you wish to interact with Pro also ensure this butter candies are no remember of the organization's you plan on ending and that it has write access to the specific repositories.
00:28:08 [W] It will operate on once created this new GitHub account create a personal success token with public ribbon and reposted two Scopes in case you plan on
00:28:19 [W] making it and align the tab organizations also add the admin or dork scope for private repositories.
00:28:28 [W] It needs the wall repo scope at this point.
00:28:31 [W] It's time to deploy a pro.
00:28:33 [W] It has a utility called tackle that guides you through the deployment of Prague components in a couple of minutes.
00:28:47 [W] Otherwise, you have to put on your hiya Mel engineer hat and manually write the deployments the cluster will bindings and everything.
00:28:49 [W] By hand, this is how I did it and we are going to see it in the next slide and do not forget to create the secrets from the GitHub tokens generate an hmac token for validating the guitar box and the oauth2 token we created
00:29:02 [W] What's left to do now?
00:29:08 [W] Well the usual Kuma CTL apply.
00:29:15 [W] The last step is to add what book to get up you can do this manually, but I suggest using the update you utility that comes in really handy as shown in the slide you now have a working prototype Custer welcome to the club
00:29:23 [W] there are other steps and vitamins that can be done like configuring our Google Cloud Storage bucket for persisting logs exploring the upcoming integration of pro with AKs and as free, but for my sanity, I'm going to skip this
00:29:39 [W] And I left you as an exercise anyways, in case you want to take inspiration from our poliana. You can take a look at prodyna rectory of the Falco security / testing for repository.
00:29:54 [W] You can find some little help deploy you Pro, for example, you can use the deployments rule bindings and rules backs. I already did to create piranha in the subdirectory named cluster and save some effort you will find here also the Chrome job for the branch protector
00:30:06 [W] Wouldn't talk much about it, but it's very useful to enforce policies on your get branches.
00:30:15 [W] For example, I use it to private anyone even me to push to the Falco Master yet. You could do it manually by clicking the tab buttons. I know but were Point here is to do it in an auditable wave for the community.
00:30:28 [W] So this way anyone know it's in place.
00:30:31 [W] Why it's there when it was activated or maybe a plated everything is transparent.
00:30:38 [W] Then you can also use the make file I put in place to reproduce by our installations.
00:30:47 [W] If you run make Pro it will look for the files or - token each mark - token and a splash token from which to create the kubernative secrets and then automatically apply all the previous yum files
00:30:59 [W] Mentioned remember to create those tokens files, especially than Splash one. It is required by the goose plug into aren't everywhere.
00:31:08 [W] Jokes Aside after make Pro you can now run me come fix common and then make plugins one.
00:31:17 [W] They will create config maps from the config zebrium all and from the plug-in cri-o file.
00:31:29 [W] We say that problem games are just subcomponents of the hook binary that register even tumblers for various type of guitar beans, right?
00:31:32 [W] These event handlers are provided with clients and agents that give them access to the configurations the probes GitHub owners fight secrets and move anything that receives GitHub with books can be configured to
00:31:49 [W] Forward Diamond act as an external plug-in and this makes probe even more powerful allowing in cluster or even out of the cluster plugins and Integrations with other Bots or infrastructures.
00:32:04 [W] Well, let's make a plan together to create a simple custom plugin for piranha.
00:32:10 [W] We need to do the following things right a little go cereth a tendency in coming with book referring to issue and per week assist comments. We can use the same go package.
00:32:21 [W] He's Pro uses for its own internal plugins.
00:32:23 [W] So the task is not that difficult as you'll see in a second because those packages make our life easier by providing us a lot of value pairs for obtaining the come fix the secrets and an already configured GitHub client and so on then
00:32:36 [W] We have to create a Docker image exposing these little server and create a kubernative service and deployment using it at this point.
00:32:47 [W] What's left usual Kuma CTL apply?
00:32:54 [W] But remember we also need to add the external plug-in in the plugins comfy map of our Pro cluster how by creating a poor record stores our testing for Repository.
00:33:02 [W] Once it will be approved emerged. The config updated plug-in will take care of automatically update the config Maps.
00:33:07 [W] I wanted to make a are aware of wait. He's for this reason. I created a plug-in that gives it the ability to reply when / prodyna command is used.
00:33:19 [W] It's called Say My Name Pro plugin.
00:33:20 [W] It's under my GitHub.
00:33:28 [W] I put the link to a tear in the slide so you can inspect it later, but we are going to see a bit of its code right now.
00:33:29 [W] It's very simple.
00:33:31 [W] Here. We are.
00:33:33 [W] Let's briefly look at the main method of the say.
00:33:37 [W] Custom external Pro plugin as you can see, it's pretty simple.
00:33:44 [W] We instantiate of the plug-in by using the helpers that provides us I mentioned before we validate those options then we use utilities
00:33:56 [W] to grab the secrets
00:33:59 [W] and with those winds and sit a GitHub client.
00:34:04 [W] Once done we can pass down this GitHub client.
00:34:10 [W] to the server
00:34:12 [W] also Pro Bowl ads eyes.
00:34:16 [W] Also provides us an interrupt Library which is used for ending the interrupts of the server and emitted to serve.
00:34:28 [W] The help of the plug-in year. I created the serving CTP metered to make our servers tracked instance implemented and ler interface that the HTTP
00:34:44 [W] server request as you can see, all I do is validating the were booked through the
00:34:51 [W] facility that provides us the validate will book method and then I pass down.
00:34:58 [W] the web app payload to the Handler
00:35:02 [W] as you can see such Handler just signals every even type.
00:35:10 [W] Different than issue comment when the event is an issue comment it basically and Marshalls the payload and spawns a go routine to handle such comment
00:35:26 [W] This girl thing holds the End early should comment meted which basically first checks the issue is not closed.
00:35:35 [W] And across the comment was just created at that point. Basically, he loves some information and it matches the string by checking their the content of the comment contains the /
00:35:51 [W] Come and if that's the case, it randomly chooses a announced.
00:36:00 [W] we're from an array from a slice and then use another pair to form at the response commenting on the same GitHub issue.
00:36:08 [W] As you can see any way in this Repository.
00:36:14 [W] I also provided the the dockerfile and make fight build it and push and an example deploy a model that you can use to deploy these custom example external plugin for Pro on your own instances.
00:36:27 [W] And here we are this was the result.
00:36:39 [W] I can tell how happy I was when I started spamming all these issues and progresses with these new / common.
00:36:42 [W] I was not a she so it was in night time in Italy and my colleagues started riding me.
00:36:47 [W] Why what are you doing?
00:36:50 [W] Well, it's not me.
00:36:51 [W] It's Pollyanna.
00:36:53 [W] It's easier to stop the drama in case you do want to have some fun, too.
00:36:58 [W] Here are some ideas in the probe topic that came to my mind. Well, first thing we need to do is to enable the GitHub API proxy to optimize Pro again study table API limits.
00:37:12 [W] we could also think of spawning projects bath on kubernative but also an external executors to verify the Falco drivers installed correctly on different operating systems different kernels, either when containerized and
00:37:23 [W] You can use what you already say it about creating external plugins and you can help us creating custom plugins for linking the C++ and this image files of Falco against a set of conventions or even
00:37:37 [W] Third we can create together a custom plug-in that automatically prepares a pull request to release Falco version and updates the change log using the release notes in the poor ecosystem when it detects the corresponding Milestone
00:37:52 [W] Being completed there's a lot more. So it's just your call.
00:38:00 [W] Join our Wednesday Community Cole so we can sing some tasks to you, please.
00:38:01 [W] Also if story has come to an end, thanks so much for coming.
00:38:08 [W] Feel free to drop any questions you have now are to contact me later.
00:38:13 [W] Also, we work on a lot new contributors.
00:38:15 [W] Have you seen the previous light?
00:38:16 [W] There's always a lot of work to do now.
00:38:20 [W] We are piranha in place for more than a year.
00:38:22 [W] Everything is place for a healthy transparent thing a clear path to participating in open source. So it's very simple to contribute one of the Falco projects even
00:38:33 [W] To boil itself as saying anyway, my dark messages are hoping you can find me with loodse any claim on Twitter on the table and the kubernative lock.
00:38:42 [W] Feel free to get in touch with me for everything about open suse Falco idpf and so on.
00:38:47 [W] Ciao.
00:38:48 [W] So hello everybody.
00:38:58 [W] I just want to answer life a question from Pamela Kelly.
00:39:06 [W] That as asked do you think that Pro can by itself replace ci/cd stop on Jenkins? Good question.
00:39:19 [W] For asking it basically what I think is that yes Pro can itself replace continuous integration. Continuous deployment set up on Jenkins in fact
00:39:32 [W] Out the new version of Jenkins Jenkins X is itself based the and must completely on Pro this because I said bro is built was built for kubernative and is built on kubernative
00:39:46 [W] Which makes it very extensible and very customizable for this reason as explained and the modularity that I tried to explain during this
00:40:02 [W] Olga
00:40:04 [W] broken help you implement any sort of custom continuous integration continuous deployment flow because you could write custom a custom controller custom kubernative controller that were chubaofs.
00:40:34 [W] Thank you for asking it.
00:40:38 [W] What else if I replied other questions privately into the Queen the chat if you have any other question, I'm glad to reply all the questions on the kubernative
00:40:57 [W] On the cncf slack channel to - could become - ci/cd. Also if you have other questions in the coming days in the coming
00:41:13 [W] The future may not. Feel free to contact me over slack or our Twitter has said I'm happy to socialize and to reply all the answers that I can. Thank you very much. Everybody for being here was a pleasure for me.
00:41:26 [W] Bye.
