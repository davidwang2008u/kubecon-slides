The Building Blocks of DX: K8s Evolution From CLI to GitOps: OXWA-8853 - events@cncf.io - Wednesday, November 18, 2020 3:02 PM - 37 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hello everyone.
00:00:00 [W] My name is Katie Comanche and currently I am an ecosystem advocate for the cncf.
00:00:06 [W] I have joined cncf quite recently and my responsibilities within this role is to grow the end user Community, but more importantly to close the gap between the end user feedback and the projects currently residing within the cncf landscape
00:00:21 [W] I would like to talk about the building blocks of DX more specifically if you could bring it as Evolution from the CLI to gitops.
00:00:28 [W] And to do so I would like to firstly introduced the cluster CLI known as skip CTO and how it provides this knative way of interacting with kubernative.
00:00:37 [W] I would like to follow that very few dings enhancement section, which is going to focus on how can we further extend the keeps it all commands and rub them for graphical representations such as web in terminal you eyes and lastly I would like
00:00:52 [W] To conclude by introducing. How can we automate most of the operations within the clusters by in-toto King about the application Alps? And in this section, I'm going to mention the click lips gitops and even she tops which is a way to manage your clusters
00:01:06 [W] using Google spreadsheets
00:01:08 [W] Before I move forward to the topic, I would like to introduce the echo system which allowed these Evolution all the way through the CLI to ghettos.
00:01:15 [W] If you look six years ago, the container orchestrator framing space was very heavily Diversified. We had tools such as local sperm Apache methods kubernative and all of them provided a viable solution to our containers with scale.
00:01:31 [W] how to keep any distance of lead in defining the principles of how to run this containerized workloads nowadays kubernative his known for its portability and adaptability but more importantly for its approach towards declarative configuration and Automation
00:01:45 [W] And this can actually be seen in numbers. When you look at the cncf survey in 2019 more than 50 percent of the companies are using kubernative in production. The our 42% are actually prototyping kubernative as a viable
00:02:00 [W] Solution to move forward when a transition color is the contributor Community.
00:02:05 [W] There are more than two thousand Engineers actively collaborating towards future feature build-out and Bug fixing and we will look into the end user Community more than 23,000 at and he's registered at the campgrounds around the world.
00:02:18 [W] this were the in person events, which were in Europe China North America
00:02:26 [W] and this flourishing Community around kubernative has been extremely beneficial because over time multiple tools were built around it to extend its functionalities.
00:02:34 [W] And this great effect today.
00:02:36 [W] We know as the cloud native landscape, which resides Under the cncf Umbrella or a cloud knative computing Foundation.
00:02:42 [W] Now, if you look into all of these doing some of them are going to provide similar capabilities such as servicemeshcon twerking storage and time and many more and a more diverse tooling. That means we
00:02:55 [W] Have a more diverse user base as well because Engineers with different capabilities. When you to interact with the cluster a very to manage the cluster or deploy to the cluster a search. We can identify free main personas
00:03:10 [W] Three main user groups here the application developers application operators and infrastructure operators.
00:03:17 [W] The application developers are the engineers which don't necessarily need to interact with the cluster.
00:03:23 [W] How are they will need to be aware that they can take application is going to be containerized a such they will focus on the business logic, but at the same time they'll need to be aware to develop important such as liveness and writing is probes the
00:03:38 [W] Location operators of the other side are the engineers which will interact with the cluster and deployed application.
00:03:44 [W] They will be aware of all the resources within the cluster and any components that are necessary to make sure that the application is up and running at all time and infrastructure operators are the engineers which will not only understand all the resources within the
00:03:59 [W] Stir but they'll be aware how to create manage configure And Delay the cluster from scratch now usually speaking the application developers in application operator rules sometimes our overlap.
00:04:11 [W] However, it does not always the case and current organizations, hence.
00:04:15 [W] We need to segregate them at the moment at this stage.
00:04:19 [W] We require one set of tooling which will allow us to interact with the cluster based on all of these and user groups and currently this is provisioned by cluster CLI known as
00:04:29 [W] skip CTL which provides a way to interact and manage kubernative subjects.
00:04:34 [W] We can think about Gypsy TL as a way to close the gap between the end user terminal and a cluster is running locally in a public cloud or on a Datacenter and to connect with those clusters will require a config file which will have all the
00:04:50 [W] Metadata necessary such as the APA server in point and anything to gation data such as certificates or tokens.
00:04:57 [W] You show the config file can be found in the data Cube folder or it making specified as a flag for the keep config flag or alternatively it can be consumed as an environmental variable.
00:05:11 [W] When I refer to groups at Yale, we refer to six CLI which currently resides under the communities Community umbrella currently keeps you tell offers more than 40 operations. And these are going to be actions we can perform on top of the resources such as create.
00:05:26 [W] Delete run get and many more and these operations are associated with more than 70 Flags which will allow these tailored and customer experience quite limiting, but still it will provide that will be able to either provide more information
00:05:41 [W] Integrating the cluster will be able to specify more details when we try to get information from the cluster but more importantly we've give detail we have the support for declarative and imperative management techniques.
00:05:55 [W] When I refer to the imperative technique, that means that we're going to operate on the life object straight away.
00:06:00 [W] So this is going to be an engineer which will either create or delete the resource and this is going to be straight away visible within the cluster the good thing about this approach is the fact that it can have a very quick upskill for our developers.
00:06:15 [W] They'll be able to deploy the application if it's the correct especially it'll be able to deploy the application to the cluster immediately. However on the downside of this approach is the fact that it has no snyk.
00:06:25 [W] Screw the configuration.
00:06:27 [W] So if you would like to share this configuration, if other teams over the white it organization, it's going to be difficult for us.
00:06:34 [W] And that's why we have a declarative approach which allows the operations on files stored locally.
00:06:40 [W] So we have the full representation of our manifest in the ammo and we will be able to apply them to the classroom.
00:06:48 [W] The good thing about this approach is the fact that it allows the directory level operations. Usually when we deploy an application
00:06:55 [W] We're going to have a deployment and there's going to be associated with a service service account configuration map maybe going to have a secret and Ingress and that's already more than six components will require with the imperative approach will have to create all of these resources
00:07:10 [W] Finally, however, we see declarative approach.
00:07:12 [W] approach. We have direct to level operations, which will allow us to create all of these resources. We want to commend.
00:07:19 [W] However, on the downside of this approach is the fact that we have quite a high learning curve because it requires an in-depth understanding of the nested llamo configuration. It can present some challenges while we debug and troubleshoot our manifest.
00:07:35 [W] Now cluster CTL is a cluster gives it l is a great way to explore the cluster acids.
00:07:41 [W] However, it is generally and wrongly assume that everyone interacting with communities is going to be fully minikube ztl a clear path was discern from the community from this point to fervor in reach and extend the cluster DX to make it available
00:07:56 [W] shifting to nearest of all levels
00:07:59 [W] The search when we mention takes enhancement, we can refer to four main principles Simplicity optimization transparency and durability Simplicity means that any changes or any new tooling that we introduced the interact with the cluster.
00:08:15 [W] Needs to remove some of the complexity rather than making it more difficult for our Engineers to get information from the cluster optimization is all about finding patterns and trying to simplify them.
00:08:26 [W] For example, if an engineer is always need to look for it the CPU and memory for an application instead of grabbing the ammo of a pod and looking for the right files, but for the right configuration will be able to write for example a plug-in which will
00:08:42 [W] Same with one command.
00:08:44 [W] Just Pharisee is a principle which should be true at all times when we introduce new techniques to interact with the cluster. Our Engineers should always be aware where the application is deployed and how they can connect to it.
00:08:58 [W] There's going to be a major blocker if we don't have the transparency because we're going to become the bottleneck when the application team will require to troubleshoot for example, during the production incident and the last principle I would like to mention is durability
00:09:13 [W] Changes that we introduced they should just be the building blocks of the interactions in the Futures.
00:09:19 [W] It should be something which is easily extensible.
00:09:22 [W] But more importantly it's something which is going to stick with our developers.
00:09:26 [W] It's quite important to introduce this changes frequently, but with a good pacing to remove the developer fatigue as well.
00:09:35 [W] I want to refer to the digs enhancement with keeps the tail, we can identify two main areas extensions and rappers.
00:09:43 [W] The extensors are going to be represented by group to kill plugins while the robbers are going to be represented by webassembly wise.
00:09:51 [W] I'd like to keep David beat morning to both of these areas.
00:09:55 [W] Now as mentioned if you'd like to extend your Kube see Telco man's then you're going to write a plug-in which will be able to write this custom extensions for your end users to consume.
00:10:06 [W] The more important thing about plugins is the fact that they can be written in any language underneath they just a binary and as long as they have the right file name and are in the right location, they'll be identified by qtl and the end users will be able to utilize that
00:10:21 [W] But the key point about the plugins with extensions is the fact that we can really provide a custom DX which will focus on our Simplicity optimization principles.
00:10:33 [W] Let's look at how it keeps. It will plug in could be written here. I have an extremely simple shell script which is going to have an echo command.
00:10:41 [W] However, I would like to draw your attention to is the path and the filename of this particular plug-in the location of the file should be one of the binary folders defined in the path environment variable as such in this example, I have it under
00:10:56 [W] Chooser local Bean
00:10:58 [W] and the filename for a plug-in should be always prefaced by keep CTL followed by the actual command.
00:11:04 [W] So here we create a greetings blogging and the file name is obviously going to be gives you tell greetings.
00:11:12 [W] Once the file is in the right path with the right naming we don't need to do any install. It will be automatically identified by gives ETL and we can validate that by doing a list of our plugins and you can see the first result is going to be all greetings followed by enable quadrants.
00:11:27 [W] Just fold in our machine.
00:11:30 [W] And to test it out plug-in is breaking. It's just enough for us to do a cubesat killed greetings.
00:11:35 [W] And this will go to our shows great execute that and print our Echo command as simple as that.
00:11:44 [W] Now this stage we could extend or we could share some of these plugins with wider organization.
00:11:50 [W] However over time their plugins which were found useful across the community and it was required to have a centralized mechanism to collect index and distribute this plugins in currently this capability is provision by crew.
00:12:06 [W] You can think about crew is a service Discovery for plugins currently. It allows the install of more than 90 custom commands for cube CTL and a cool feature about crew as well is the fact that it has its own version manager so you can have
00:12:21 [W] It's your kind of separate way of managing your plugin for crew rather than to make it very similar to your project versioning.
00:12:30 [W] And if you look into the most widely used plugins at the moment, there are plenty of them. But as you can see certain manager has taken the lead quite quite abruptly.
00:12:41 [W] I would say it has more than seven seven hundred thousand downloads at the moment and certain manager is a plug-in which allows you to management of the TLs for a kubernative Gloucester Ingress nginx is another plug-in which allows the inspection of off your nginx controller.
00:12:57 [W] Within kubenetes crew which is our plug-in to install other plugins.
00:13:02 [W] So you have a slight conception here has been downloaded more than 150,000 times.
00:13:07 [W] times. So it's donation amount of of number till is another plug-in which allows the streaming of logs from a collection of PODS while score is another tool which allows the static analysis of our Yama manifests.
00:13:24 [W] Now if you'd like to distribute our greetings plug-in with crew will require to write a plug-in ci/cd or customer service definition.
00:13:33 [W] Now this plug-in is going to have two main areas of information and this is a trend output of our CID.
00:13:39 [W] The first section is going to be informative while the second one is going to be the guide on how to install the plug-in on different operating systems as such in the affirmative part. We're going to have the version the page to our Repository.
00:13:53 [W] Long Beach are description while in the platform side.
00:13:57 [W] We're going to have information of how to install our plug-in.
00:14:02 [W] So for example, we're going to point to the right binary.
00:14:04 [W] We're going to point a to as well to our shell script and we'll be able to see that more in more details during the demo which follows at the moment.
00:14:16 [W] Now currently, let's see.
00:14:18 [W] How can you get to distribute our recordings plug-in to do so, I'm just going to list all the plugins. I have currently available my machine I don't have the greetings plug-in and I can prove it validate that by doing a plus crew list which lists all the plugins which
00:14:33 [W] Screw the greetings blogging is not there anymore.
00:14:36 [W] Now. Let's look at our plugins here again as mentioned.
00:14:41 [W] We going to have two main areas.
00:14:42 [W] This is going to be the affirmative hard.
00:14:45 [W] So as mentioned we're going to have version home page make sure description and a long description which probably can be useful. If you have multiple commands for your plug-in and you can actually have this help message described over here and the second part is going to be
00:15:00 [W] Can we install a plug-in on particular operating systems here?
00:15:04 [W] We're going to focus on Darwin and Linux operating system. Mainly we're going to point it to our binary.
00:15:10 [W] So this is going to be a zip folder of all our files and we're going to have a sharp checksum to make sure that our integrity of the file is going to be kept at all times because underneath does an extract operation from
00:15:26 [W] Let's see if we can specify what we want to extracting that folder and we can specify group actually need to specify our exactly binary that's going to be executed for our cue to tell command now, let's install this
00:15:40 [W] Tickler plug-in with crew with that. I'm going to do a CTL crew installed and I'm going to point it to the Manifest.
00:15:51 [W] Let me have see just plug in the channel cool and to validate that I'm just going to do a crew leaves.
00:16:04 [W] We see our greetings plug-in with its version as well.
00:16:07 [W] And of course I can do a again least it'll be identified as well just over here and to further validate that our plug-in works you just going to do a cube CTL greetings.
00:16:21 [W] We will go to our shell script output our whole Cloud knative message.
00:16:33 [W] Now this pretty much concludes the demo for the crew blogging before I move forward. I would like to leave a few takeaways about it gives detailed plugins. One of the most important fact about Gibson Telco against is the fact that we can further extend our
00:16:48 [W] Like and provide this tailored experience fall into zurz enough for quite widespread practice is to use cuticle plugins in association with aliases so we can have sure to commands to interact with the cluster and everything
00:17:03 [W] Worthwhile to mention is the fact that we currently cannot override the existing you to tell commands.
00:17:08 [W] So it gives you tell get pods is always going to perform the same operation will not be able to change that.
00:17:13 [W] However, we still have a bunch of plugins which are just one install away with crew.
00:17:18 [W] Now when we refer to the wrappers these usually focus on a graphical representation of our cluster state.
00:17:29 [W] So the rappers are how can we visualize?
00:17:33 [W] Some of the resources by using the cube City Hall commands mismeasure. It's all about this operational view of the cluster state. So it's going to be easier for our end users to understand what's happening with our resources.
00:17:46 [W] You can think about gives developers as a point of presence for your clusters.
00:17:51 [W] And this is quite important because currently within a team not going to have just one kubernative cluster.
00:17:55 [W] We at least going to have three clusters purring bar her Origins are going to have a Sandbox staging and production and this minimum and this can be replicated by the amount of regions.
00:18:08 [W] We'd like to refer to distribute our cluster to so easily can have 10 to 15 clusters nowadays weaveworks.
00:18:15 [W] The terminal ui's or webinar terminal device actually will be able to quickly interchange between these clusters and interact with them.
00:18:26 [W] I never could be feature about developers is the fact that they are Developer first. Now when you have a why of your cluster State you have a finite amount of clicks that you can actually perform within your dashboard as such
00:18:41 [W] It can really help these developer first experience because our Engineers will be able to explore what's happening in the cluster infinite World of actions, but more importantly gives developers currently.
00:18:53 [W] Most of them actually are providing a basic coverage of the groups of telepresence.
00:18:59 [W] So mainly going to focus on the read-only commands such as gives you gives you tell get however, it provides some support for operations such planetscale did need import forward.
00:19:11 [W] And we're currently into the ecosystem.
00:19:13 [W] There are a plethora of tools like provisioning the UI capabilities for me chopped and he's one of the most prominent tools.
00:19:20 [W] It has been developed by VMware virtual by their SRE team.
00:19:24 [W] And in addition to the presentation of the cluster State for the developers.
00:19:28 [W] They have a sections for The kubernative Operators as well.
00:19:33 [W] So they'll be able to see the notes and any information associated with that.
00:19:38 [W] Tonight's is another Terminal E. Y actually which has a rubber around all the cube to tell commands and lens is another tool which is a kubernative zaidi and you can be installed on any operating system as a standalone application.
00:19:56 [W] Now at this stage we can extend and visualize the end user journey within the cluster.
00:20:02 [W] However, older patients we've been performing have been manually, even if you introduce plugins, you'd have to manually type them to interact with the cluster and if you would like to visualize it for a dashboard to still have to click through different manias to understand what's happening underneath we're talking about
00:20:18 [W] Location deployment we need to think about automation.
00:20:20 [W] How can we automate most of the operation for our applications to be life in the cluster?
00:20:25 [W] But with that the next organic step is to actually introduce templating because as mentioned we're going to have multiple clusters and will require to tailor the configuration for those clusters in currently.
00:20:39 [W] These capabilities are provisioned by configuration manager such as hell be customized.
00:20:44 [W] Now these two tools have completely different ways of provisioning the template capabilities.
00:20:50 [W] However, Helm at the moment uses a template driven approach which means we're going to have the young representation with the options to inject values to our templates controversial idea here, but Helm
00:21:05 [W] Slightly towards the imperative approach and this is because if you think about off the chart that actually includes other charts or it has like you have a Helm umbrella chart which actually utilizes our charts as well.
00:21:17 [W] You're not going to set every single value and because of that most of them are going to be set to their default which means that we're going to use the imperative approach and the good thing about Helm is the fact that we have a collection of art structures which allows things
00:21:32 [W] Still off many cognitive applications nowadays.
00:21:34 [W] We've just want to commend customized on the other side. You just a template free approach meaning that we're going to have the full representation of our manifest and this while going to have declarative approach and the way customized works if you'd like to further tailor
00:21:49 [W] Configuration that's going to be done through the Duke marriages now to tailor your application or your deployment for for help.
00:21:59 [W] You'll have to use multiple values files while I've customized you have going to have a base and multiple overlays.
00:22:06 [W] and once we have our templating layer introduced that means that we can automate the configuration of in forward and these are provisioned by some of the techniques such as click ups gitops and even she tops
00:22:20 [W] click Ops is a technique which is represented by a collection of cliques through a set of menus.
00:22:26 [W] the most important feature about the click epsagon ich is the faculty provides a very powerful DX our Engineers do not need to care what's happening on the infrastructure there. All of this is going to be obstructed for the UI.
00:22:39 [W] UI. However, it's very important to keep a balanced abstraction level because if we provide too much information for developers to configure or if you provide too little information in them, too.
00:22:50 [W] Figure that can actually distort their experience of interacting with the cluster and with a click Ops approach is quite important to think about operations such as configuration storage bags and roll forwards. For example, if something goes wrong and production
00:23:06 [W] I would like to use and you version or if you'd like to refer to an older version is this going to be represented by a myriad of clicks or it is going to be something you'll be able to restore from the state start somewhere.
00:23:20 [W] So this is an area to be for the power from this perch.
00:23:24 [W] With the gitops technique actually some of these issues are tackled. The gitops approach is represented by a set of it repositories which represent the desire state of our application.
00:23:39 [W] The key point about gitops technique is the fight against PR pastry allowed.
00:23:44 [W] That means that the Delta between our developer terminal and the cluster is just one car away and it's gitops Technique. We have a more powerful automatic reconciliation the gitops model works with approach which means that if it
00:23:59 [W] Interface any changes to them to get repositories it will be able to identify them and apply them to the cluster but more importantly we're going to have a version state of our cluster meaning that we always can revert
00:24:14 [W] Using key to a version of the cluster which was up and running and with no issues in production.
00:24:21 [W] And currently the gitops capabilities are provisioned by tools such as flux and Argo City flux is a to provision by weaveworks.
00:24:29 [W] I'm currently is a Sandbox cncf project.
00:24:32 [W] Well, Argo City currently moved to incubation stage.
00:24:38 [W] Enter end on a lighter note.
00:24:40 [W] I would like to introduce quite a controversial technique, which is Cheetos and she loves aims to control the kubernative state using Google spreadsheets.
00:24:50 [W] It's a very new technique. It hasn't been developed that much but at the moment if its mission is to replace them with spreadsheets.
00:24:58 [W] So if you're here or here heard of your engineers complain about llamo, you can allow them to manage your kubernative state with spreadsheets.
00:25:08 [W] And actually showcase this particular model.
00:25:11 [W] I would like to use the Shadows that unique to scale and application currently. So at the moment I have let me just move this lightly.
00:25:23 [W] I have already my cluster linked to a Google spreadsheets where I can see as mention here.
00:25:30 [W] All of my name spaces and currently in my terminal you'll be able to visualize all my pots in my Argo CG namespace and currently she tops are actually only allows the scale operations.
00:25:44 [W] However, it's something you truly care about. You can further extended to support our operations and techniques as well.
00:25:51 [W] if I'd like to increase my Argo City redis amount of replicas to free instead of one I'm just changing it to my desired state.
00:26:00 [W] Eight in my Google spreadsheet and this as you can see is already applied to my cluster and the same goes with the scale down operation. I can scale it to and this will be able to be identified
00:26:15 [W] cluster right posture to delete a record straight away
00:26:26 [W] Now this pretty much concludes the evolution all the way through the CLI to techniques such as gitops.
00:26:33 [W] We started by introducing knative way of interacting with the cluster by using Cube City.
00:26:38 [W] Oh, but more importantly we focused on how can we further it in reach and extend that with the capacity of plugins and the rubber is represented or translated for web in terminal device.
00:26:49 [W] But more importantly we see that we have multiple techniques nowadays, which really tries to automate most of these operations by introducing.
00:26:57 [W] Techniques such as clecos gitops and even Shadows.
00:27:02 [W] And all of these Evolution has been possible because kubernative has a declarative configuration schema that really advocates for extensibility and the optimization of the inducer journey within a cluster.
00:27:15 [W] If you have any questions in regards to this talk, please reach out.
00:27:19 [W] I'm going to be available on social media such as Twitter and Linkedin as well.
00:27:23 [W] You'll find a more detailed blog about this particular talk when I'm eating account as well.
00:27:29 [W] I'm writing a novel blogs on the new tooling that I'm exploring and you'll be able to find them there.
00:27:33 [W] Enjoy the rest of the conference.
00:27:35 [W] Thank you.
00:27:46 [W] Hello everyone.
00:27:48 [W] Thank you very much for tuning in to my station.
00:27:50 [W] I've got some very good questions, especially about this.
00:27:54 [W] She loves technique. I have tried to keep up with a questions and answer as many as I could for all the session and I'm going to highlight some of them now. If you have any other questions, please do reach out and I'll answer them as well some of the questions I didn't yet.
00:28:09 [W] Got a chance to to answer. Is there a hybrid which leverages gitops and she Dobbs?
00:28:16 [W] No, there is not.
00:28:17 [W] I think she loves it's more of a hackathon project that really aims to show that you can really tune in kubernative into any offer to link out there.
00:28:26 [W] So it's more of a fun project.
00:28:30 [W] However, if you feel like it's something that we need to invest time, why not manage our communities through Excel spreadsheets that might be an option.
00:28:39 [W] I have linked some of the links on this sheet Ops techniques of how can you actually connect it? So you'll be able to see that in the answers.
00:28:52 [W] The other question which was around crew.
00:28:56 [W] Actually, there's plenty of them coming.
00:29:02 [W] Yes, could you explain the basic difference between a good CTL plug-in and a rapper now the plugins themselves they aim to extend keep CTL. So you'll be able to write custom commands.
00:29:15 [W] So for example, you do keep CTL command, or I don't know give CTL.
00:29:21 [W] If you have especially on microservices, for example, you'll be able to create different life cycle events for that particular plug-in as well.
00:29:29 [W] It's an extension tool while the rubbers. It's pretty much a way to Encompass all the current commands and usually to visualize them.
00:29:38 [W] So I refer to the rappers as a way to categorize the visualizer. So webinar really wise usually the rappers. They don't have a functional change to what gives you tell offers.
00:29:51 [W] So that's why it's usually the read-only commands.
00:29:55 [W] So everything you would be for example keeps it.
00:29:56 [W] You'll get pods. It's a few only componentconfig.
00:29:59 [W] And and with a rapper or a portal you'll be able to see the result through a why so again keep the tail plugins.
00:30:08 [W] It's an extension of the robbers.
00:30:10 [W] It's pretty much it doesn't extend any functionalities is just provides visualization on top of that. So it's a rapper cross all the commands we have
00:30:20 [W] Are going are we going to see flux and Argo projects merge giving the they seem to be convert covering the same space.
00:30:27 [W] I think there was an intention for Argo City and flux tufin. We collaborate.
00:30:33 [W] I don't think that actually was fully fully successful in in the way.
00:30:39 [W] They could emerge fully they have different capabilities and they I think they prefer to to enhance those capabilities and see if they can grow based on bed. So I think the marriage would
00:30:49 [W] Lee turn it out into losing some of those special capabilities for the project.
00:30:55 [W] I meant they stay on separate separate paths, but I think they collaborating more on the future developed like future development.
00:31:03 [W] For example, you've seen cortex and fanos. They provide the same capabilities in different manners, of course, however, they the teams collaborate very closely on the new feature releases. So I think it's going to be a similar case with lights and Argo City.
00:31:21 [W] Let's see.
00:31:24 [W] Which is the example of the click Ops I think everything you would click to Perfection and up.
00:31:37 [W] and click for example a if there is a solution that
00:31:45 [W] the I think one of the ideal experience ideals when it comes to the developer experience as well as so pretty much think about services that instead of interacting with the cluster straightaway for the CLI.
00:31:58 [W] You would have in your eye and you just click through and of course, there are some benefits and some downsides data swell depends on which were quite kind of resources you have at the moment depends on what is actually important for your engineering team.
00:32:12 [W] Do you go for the simple way of deploying and less control or vice versa?
00:32:15 [W] On help the full control of the cluster, but at the same time you have too much information and you need to introduce an abstraction layer for your developers in the to be overwhelmed when it comes to setting up some of the parameters.
00:32:30 [W] Let's see if I can find any other questions.
00:32:37 [W] There are plenty of questions about the Google Sheets.
00:32:41 [W] So the tool itself is called MX L Cube City l. So if you just type that you should find the project.
00:32:51 [W] I've linked it in in some of the answers as well.
00:32:53 [W] I would be able to leave that in the dislike Channel if that's something of Interest must really intrigued that it's proud out so much interest and curiosity from the community. So well, maybe maybe it's going to be
00:33:06 [W] I think that's going to move forward. Why not?
00:33:13 [W] What you why would you consider to be the best option for kubernative?
00:33:16 [W] I think at this stage often has been quite good in provisioning one unified matter of accessing the cluster.
00:33:26 [W] The one thing I like about octant is the fact that it it's really developer first.
00:33:32 [W] So you don't need to understand kubernative again go to the dashboard and you'll be able to explore and you'll be able to kind of learn by clicking an egg like
00:33:42 [W] Searching the dashboard itself.
00:33:44 [W] Another thing which I really like about octant is the fact that they have a view and of an architecture of your application.
00:33:52 [W] So for example, when you're running a pot is not just a party going to have a replica set. You have going to have a deployment for your party going to have a service account Associated and this is pretty much the default for resources.
00:34:05 [W] However, if you have any configuration Maps, if you have any volumes, you'll be able to see that all interlinked in the same view.
00:34:11 [W] So I think that really kind of provides that visual background and booting but some developers might need one interacting and troubleshooting their application.
00:34:24 [W] And let's see if I can answer any more questions.
00:34:31 [W] Which application helps practice is more prevalent amongst the the free so if talked about the click Ops the gitops and of course the shadows as mentioned she loves it's more of a fine side project again.
00:34:46 [W] I introduce that to really highlight that you can manage your communities from every every I ever have a tool it's more to showcase the extensibility of kubernative probably.
00:35:05 [W] Or gitops I think both of them are going quite strongly. It really depends on again if Financial Resources, you have the the engineering team that you have. If you have for example an engineering team that can manage your clusters and they can manage
00:35:20 [W] Cycle of how you deploy an application and I think gitops has been quite a popular technique moving forward.
00:35:25 [W] If there is a team that they really need to deploy quickly and fast, they don't have an engineering team which is expensive.
00:35:32 [W] They usually go with and to click up stiff neck so they will try to abstract as much as possible and have just enough control for them to deploy their application.
00:35:42 [W] So I think there is a both of them go quite strongly. I don't know about she helps but maybe next week on
00:35:50 [W] there's going to be a difference in that project. Why not?
00:35:59 [W] I'm trying to see if
00:36:03 [W] there's any other questions I can answer.
00:36:05 [W] I'm trying to give up. There's plenty of them come in the last minute.
00:36:12 [W] What are you some some of your favorite gives you tell plug is actually this is a very good one.
00:36:15 [W] I think most of the engineers already have been familiar with Cuban s and keep City X. So this allows you to change the context of where you are operating your community arguments.
00:36:26 [W] kubenetes will change the default namespace and gives you 2x will change the cluster. So this is extremely useful. If you have to interact with multiple clusters across different environments. You have a production of staging a Sandbox. You might have one in different regions, so you
00:36:41 [W] Plenty of clusters to interact. So it gives you 2x is a very good tool to change the context of the cube tail has been very good as well instead of getting the logs from only one pod will be able to get the logs from a set of parts.
00:36:56 [W] So pretty much the deployment level.
00:36:58 [W] So if you're troubleshooting and you want to get kind of the latest logs from your all of your pot gives you tell tale is a very good tool for that.
00:37:05 [W] I think these are very very much used.
00:37:09 [W] I've been using them quite heavily when it
00:37:11 [W] comes to really troubleshooting in debugging some of the applications and just using them on a daily basis.
00:37:21 [W] Such a look, please look into those as well.
00:37:29 [W] right
