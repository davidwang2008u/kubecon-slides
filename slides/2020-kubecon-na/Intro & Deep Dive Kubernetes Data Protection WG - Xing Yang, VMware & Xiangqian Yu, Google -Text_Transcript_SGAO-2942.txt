Intro & Deep Dive: Kubernetes Data Protection WG: SGAO-2942 - events@cncf.io - Friday, November 20, 2020 5:57 PM - 31 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hello everyone today Chan Chan and I will give and presentation about the data professional working group in kubernative.
00:00:09 [W] Team and the co-chair of communities six storage. I also co-lead the data protection when he group with Zhang Jian.
00:00:18 [W] Hello, everyone. This is jun-chan.
00:00:20 [W] I am a software engineer from the cloud upon meant I work with Shin heavily providing data protection working group support.
00:00:36 [W] Here is today's agenda first.
00:00:39 [W] We will talk about the history behind this data protection group who are involved why we need data production in communities.
00:00:46 [W] We will talk about the chatter the data production definition what other existing building blocks in communities and what are still missing and what we are working on in order to fill those gaps and finally, we'll talk about
00:01:02 [W] In kubenetes, what is the upshot was introduced as an hour of each other in 2012 and it was promoted the to Beta in when they're 17 release and it is targeting ga-eun went out 20.
00:01:05 [W] This allows us to backup and restore a volume based on volume step shots.
00:01:10 [W] many things are still missing at Cube calm in San Diego at the end of last year we discussed about this and decided that we should form a working group.
00:01:21 [W] To focus on this area. The wing group was formally established in January this year and we have been holding bi-weekly meetings since then as shown here.
00:01:36 [W] Many companies have been supporting this working group both backup vendors and sorta vendors have been participating in the working group.
00:01:40 [W] I will talk about why we needed the protection in kubenetes.
00:01:45 [W] Applications have been around forever.
00:01:48 [W] However, the architecture of applications has changed drastically a gradually or time with the transition from traditional applications to cloudevents gatien's the architecture is
00:02:03 [W] To it's a predecessors. So we need a new way to do data production for cloudevents creations.
00:02:03 [W] When containerd resolution was taking off it was speculated that container applications would not need data protection because they are stateless, but that has changed.
00:02:18 [W] A lot of stay for applications are being run within kubernative stays.
00:02:24 [W] Kubernative stay for applications use position volumes to stay their data.
00:02:30 [W] A position welding has an independent life cycle from the Pod that is consuming it so that data can be preserved under underlying storage system. Even if the particles away, however, what if the underlying volume
00:02:46 [W] Austin gets corrupted for some reason what if the underlying story system is struggling by a disaster when that happens even data stored on the system. The wardens will be gone to prevent data loss from happening.
00:02:55 [W] To protect the data stored in the prison wardens used by the community safe for applications.
00:02:48 [W] Although how to provision persistent volumes is well known it is your challenge to protect your workloads in Corbin eighties.
00:02:56 [W] This is a problem that this data production one group wants to solve.
00:03:04 [W] This is our Charter. This working group is formed so that we can have a cross Sig collaboration to figure out what are the missing functionalities and work together to design features in order to provide
00:03:20 [W] This is the hour chowder.
00:03:19 [W] This working group is formed so that we can have a cross Sig collaboration to figure out what are the missing functionalities and work together to design features in order to provide support for their production in communities
00:03:42 [W] section kubernative sponsoring six for this Wing group parsec s + 6 storage
00:03:50 [W] next chain chain is going to talk about data protection definition.
00:03:57 [W] Thank you Shan, next slide, please. As she instead stated before more and more stateful workloads to move into kinetics environment.
00:04:08 [W] We see we observe the strong desire of protecting the state for applications in kubernative context.
00:04:17 [W] The main purpose of course for that protection is to ensure those state for applications or state will workloads can be restored to a previously preserved State at any given point of time, especially
00:04:32 [W] A corruption or Dr. Etc, etc.
00:04:36 [W] In kubernative context we mainly Target with many discuss or Target two types of entities while is the resource the API resources and the other will be data that users toes position volumes
00:04:51 [W] Of a the very complicated and we're layer the problem so far.
00:04:51 [W] They are a couple of approaches of doing that.
00:04:54 [W] I'll go through this later. Next I space chain part of our Charter is to Define.
00:05:05 [W] What are the kubernative knative constructs to enable backup and recovery for different levels.
00:05:13 [W] We are not at the position to provide end-to-end solution to protect protect every single application. But we do want to provide common modules that backup wonders or users can easily use
00:05:29 [W] Is persistent persistent volume level volume snapshot when backup and how to restore from rehydrated volume from those snapshot backups?
00:05:36 [W] An application Level how do you know which resources based on API resources belongs to a specific application?
00:05:45 [W] How do you consistently choirs and inquirer's an application so that an application consistent staff that can be taken and finally the customer level?
00:05:57 [W] exercise piece
00:06:00 [W] As of today, we observe this backup workflows in kubernative context a user's first of all starts a backup.
00:06:10 [W] So the actually goes for to stare to stay steps. The first step is to collect old kubernative resources the back way up to introduce some external repository backup repository
00:06:25 [W] Is the data backup?
00:06:20 [W] and then the data backup is that if they are two models right now, we observed y so called application narrative data that Dom weapons like a MySQL they already
00:06:35 [W] Native support of dumping the snapshot data into a file and then some extra extra.
00:06:36 [W] Components can pick up those dumps and the put it in the in the backup Repository.
00:06:41 [W] And the other way is that the record a controller coordinated and that either way the application do not have knative data dump mechanism.
00:06:53 [W] by the can quiz itself and it can increase itself the controller will call in try it first try to create the application and create some volume snapshots for all the
00:07:06 [W] Volumes that applications used and inquirer's the applications application can start serving again.
00:07:12 [W] And after that William can't William data or snapshot data can be exposed in Tucson.
00:07:18 [W] Tucson. So no backup on the reverse side the restore workflow next sighs, please.
00:07:27 [W] A user starts the restore import the back up into the cluster and then firstly we stole the kubernetes risk for resources, but PV PV C is needs to be handled, especially.
00:07:42 [W] Dependences in the knative way map to the previous Mission knative way as well application should can have knative data can restore from a knative that that a dump.
00:07:56 [W] In the nominative way that's rehydrates PVCs from what I'm snapshot of wooden back.
00:08:02 [W] So we have this workflows.
00:08:05 [W] Where are the mix is without building blocks to support this work flows is what we want to answer in this working group exercise, please him.
00:08:13 [W] So what are there at this moment exists in bed?
00:08:19 [W] In application from kappler kitchens perspective. We have workloads apis step four says deployment Etc an application ci/cd in those are high level constructs that groups a set of
00:08:34 [W] to form your application
00:08:24 [W] The other in the storage layer, we have one snapshots which is built on top of PVC can take some point in time snapshot of volume.
00:08:34 [W] So how does this building blocks fit into the picture next slide, please?
00:08:42 [W] Next I speak yet.
00:08:43 [W] Thanks the worker API and the C caps application cri-o D can fit into the kubernative resource backup process with that it provides convenient wage group kubernative resources in together
00:08:59 [W] Fit into the picture next slide, please.
00:08:56 [W] Next I speak yet.
00:08:57 [W] Thanks the worker API and the C caps application cri-o D can fit into the kubernetes resource backup process with that it provides convenient wage group kubernative resources in together
00:09:48 [W] Let's take a look at a in how exactly.
00:09:53 [W] Look like for the application cri-o be the application cri-o D is nothing but providing an API for managing applications in kubernative.
00:10:03 [W] It Aggregates individual kubernative components. For example in this example.
00:10:08 [W] It's an application cri-o for mongodb. It contains a service estate for said and maybe some secrets to underneath for the llamo file the keys that with this single cri-o.
00:10:29 [W] Now, let's take a look at how one snapshot fridge in the picture.
00:10:34 [W] so next slides Christian
00:10:37 [W] You know what?
00:10:38 [W] I'm in the back up workflow what I'm snapshot can be used in the controller coordinated workflow where and when Snapchat will be created out application is quiet next I space the restore
00:10:53 [W] With snapshot can be used to rehydrate PVC from them and restore the workload into the previous state.
00:11:03 [W] with snapshot has been moving to Beta since night one 19 next size fish and we plan to move the future to GA in 121 addition webhook has been added in version 1
00:11:18 [W] And we are right now working on enhance the observability around the controllers and adding more in 20 cities mostly stress tests.
00:11:20 [W] So looking forward to the GAO of this feature.
00:11:24 [W] So we're talking about existing. So what I mean is in there.
00:11:30 [W] Next size piece.
00:11:33 [W] we're missing a whole lot and this is not yet complete list yet when backup repository choirs and inquirer's hooks etcetera etcetera.
00:11:43 [W] If you take a full picture of this next size piece.
00:11:48 [W] All this green boxes are current existing the yellow box is working group working in progress and the orange boxes are not there yet.
00:11:58 [W] So Dave those components application backup can be used to group the resources and data coordinating the data backup as well a container notify if it's in multiple scenarios in this backup workflow.
00:12:13 [W] I squeeze in a restored workflow.
00:12:13 [W] It is similar, so I will not spend too much time and there's a relation to go through all this orange and yellow boxes in the next cup size.
00:12:24 [W] Thanks Shane.
00:12:24 [W] It's all yours.
00:12:26 [W] Extension.
00:12:27 [W] I'm going to explain in more details on why we think of this armies including blocks and what we are planning to do with them.
00:12:38 [W] The First missing building block we identify this one back up we need this because we need to extract data to your secondary storage.
00:12:48 [W] We've already got a voting snapshot API, but there's no explicit definition made in the design to have snapshots stored on a different backup device separate from the primary storage for some providers a snapshot is actually a
00:13:03 [W] Needless because we need to extract data to your secondary storage.
00:12:56 [W] We've already got a voting snapshot API, but there's no explicit definition made in the design to have snapshots stored on different backup device separate from the primary storage for some providers a snapshot
00:13:26 [W] Uploaded you and object stored in Cloud.
00:13:29 [W] However, most other certain vendors a snapshot is locally stored alongside the volume on the primary storage.
00:13:37 [W] Therefore it is impossible to design a portable data production policy to support all storageos Anders.
00:13:45 [W] without a volume backup API, the alternative is for back vendors to have two solutions for storage systems that upload snapshots to objects to automatically a snapshot is a backup for story systems that
00:14:00 [W] Shots use volume snapshot API to take the snapshot and then have a data more to upload snapshot to a backup device.
00:14:08 [W] We just started discussions about this in the working group.
00:14:12 [W] Let's take a look of this diagram voting backup is next to whirring snapshot here.
00:14:20 [W] We put it in Orange Box to indicate that it is a missing kubernative component. We have started discussions about it, but no snow concrete design yet.
00:14:29 [W] it
00:14:32 [W] The next one is CDT and the changed file list without CBT and chanti foulest backup vendors have to do full backups all the time.
00:14:42 [W] This is not space efficient takes longer to complete and Miss more bandwidth.
00:14:50 [W] Another use case is Snapshot based replication where you take snapshots periodically and replicate the to another side for Disaster Recovery purpose.
00:15:01 [W] So what are the Alternatives without sweetie we can either do full backups or call each sort a key. I individually to retrieve CBT which is highly inefficient.
00:15:13 [W] The tree is a location or repo'd to store data.
00:15:11 [W] This can be a object store in the cloud.
00:15:16 [W] And unprimed storage location or some AFS based Solutions.
00:15:22 [W] There are two types of data to be backed up that we need at the store restore time.
00:15:26 [W] The first one is kubernative cluster metadata.
00:15:29 [W] The second one is local snapshot data.
00:15:32 [W] We need to back them up and store them in a backup repository currently.
00:15:38 [W] There is a proposal for Object Store that cab repository that is the proposal for object bucket provisioning or
00:15:46 [W] See this proposes object storage kubernetes API is to support oxidation of Object Store operations for kubernative workloads.
00:15:56 [W] Therefore brain object storage as a first class citizen in kubernative just like file and block storage.
00:16:04 [W] It also introduces container object storage interface or cozy as a set of grpc interfaces for provisioning object stores.
00:16:15 [W] Where cozy is Instagram?
00:16:18 [W] Cozy is seeing a yellow box indicating that this is a work in progress kubernative component.
00:16:24 [W] This is an object store backup repository.
00:16:27 [W] It can be used to export back up and store the data.
00:16:33 [W] Now, let's take a look of the restore cozies user to input a backup data and restore time.
00:16:42 [W] The next one is the generic data public order. Currently, we can only create a PVC for another PVC or a volume snapshot but what if the backed up data is stored in a backup repository such
00:16:57 [W] On the generic be the populated feature allows us to provision a PVC from an external data source such as a backup repository in addition.
00:17:03 [W] It allows us to dynamically provisioned PVC having data populated from that backup repository and honor the wait for first consumer bonding bonding mode during restore to ensure that what is placed at the right node where the
00:17:18 [W] There wasn't any warning data source of a feature gate which was introduced in without 18 in 1.20. The plan is to do the design and prototyping for generic data populate.
00:17:24 [W] ER implementation.
00:17:27 [W] Now, let's take a look at the diagram.
00:17:29 [W] We can see that generic data Pub later is needed and restore time genetic data Pub later is in the yellow box indicating.
00:17:38 [W] It is a working progress kubernative component. It is used to rehydrate PVC for a backup repository during this duel.
00:17:49 [W] Next one is quite as an unquiet hooks.
00:17:54 [W] We need this hooks to choir supplication before taking a snapshot and on choirs are two words to ensure application consistency.
00:18:03 [W] We investigated how class and choirs Works in different types of workloads.
00:18:09 [W] We looked at a relational databases such as MySQL that provides a command to flush tables with read lock so we can use that do choirs
00:18:17 [W] Key, that is store.
00:18:17 [W] We also take a look at the example etcd that provides a comment to backup and restore but it does not have a explicit cause command.
00:18:29 [W] We also look at MSU cues such as a cup car.
00:18:35 [W] For example Kafka is designed for fault tolerance. We can do backup and restore in kubernative his best effort, but there are many issues partitioning
00:18:50 [W] Balancing Kafka well broker is offline and that might cause data loss.
00:18:57 [W] We also look at distributed databases such as mongodb that provides a command to flush all penny rights operations to disk and locks mongodb instance against rights so we can use that comment to
00:19:12 [W] Be mind that the process to you back up.
00:19:08 [W] No, Charlotte versus shouted mongodb databases or different we don't have time to go over all the findings here, but it will include them in the white paper that we are working on.
00:19:18 [W] We want to design a generic mechanism to run commands in containers, but we want to mention that application-specific semantics is out of scope.
00:19:29 [W] currently have a proposal called containerd Notifier cap is submitted.
00:19:35 [W] And it is being reviewed.
00:19:37 [W] Let's take a look at the diagram here contain the Notifier is many use data backup time to do choirs before taking snapshot and inquires afterwards.
00:19:49 [W] And this this is also a working progress connected component.
00:19:56 [W] The next one is consistent group snapshot.
00:20:00 [W] So we talked about the containerd notify proposal which tries to ensure application consistency.
00:20:06 [W] What if we can't quite as the equation or if the application requires is too expensive so you want to do it less frequently, but still want to be able to do a crash consistent snapshot more frequently
00:20:21 [W] Patients may require the snapshots from multiple volumes to be taken at the same point in time.
00:20:23 [W] So that's when consistent group snapshot comes into the picture.
00:20:27 [W] There is a cap on one group and group snapshot.
00:20:31 [W] It proposes to introduce a new one group ci/cd their groups multiple volumes together and the new groups epsagon C Rd that Sports taking a snapshot of all voting's in a group to ensure right order consistency.
00:20:44 [W] The cap is being reviewed.
00:20:49 [W] Let's take a look at the diagram here.
00:20:52 [W] We don't have containerd Notifier to do choirs here. But we have a consistent group snapshot that fully facilitates the creation of a snapshot of multiple volumes in the same group to ensure right order consistency.
00:21:10 [W] Next one is application snapshot and backup.
00:21:14 [W] We have several apis for individual volumes. But what about protecting a stay for application?
00:21:20 [W] There is a cap submitted that proposes a kubernative say Pi that defines the notion of State Publications and defines how to run operations on those save applications such as snapshot backup and restore
00:21:36 [W] Next one is application snapshot and backup.
00:21:27 [W] We have several apis for individual volumes. But what about protecting us a full application?
00:21:34 [W] There is a cap submitted that proposes a kubernative say Pi that defines the notion of State Publications and defines how to run operations on those save applications such as snapshot backup and restore
00:22:03 [W] Yo at a very early design stage and show you in this diagram for backup application back up condos the backup of a safe publication. It can leverage container Notifier to do
00:22:18 [W] And use cozy as a backup Repository.
00:22:25 [W] And similarly we can have application in store that handles the restorer of a safe obligation.
00:22:37 [W] So this are all the missing building blocks that we have identified and are working on we hope eventually we can turn all of this yellow and orange boxes into green ones and when that happens Sunday the
00:22:52 [W] Our mission is accomplished.
00:22:54 [W] Alright next I'm going to talk about how do you get involved?
00:23:01 [W] as discussed in previous slides this one group is working on identifying missing functionalities in supporting data protection in kubernative and trying to figure out how to fill those gaps
00:23:17 [W] Weekly meetings and Wednesdays at 9:00 a.m.
00:23:14 [W] Pacific time. If you are interested in joining the discussions, you are welcome to join our meetings. We also have a mailing list and the slack Channel as shown here.
00:23:26 [W] This is the end of the presentation.
00:23:29 [W] Thank you all for attending the session. If you have any questions, please don't hesitate to reach out to us.
00:23:36 [W] Thank you.
00:23:51 [W] All right.
00:23:51 [W] I think we get our very first question.
00:23:56 [W] Let me read the question out. There is a from Josh.
00:24:01 [W] Databases that have a right headlock should be snapshot torrent.
00:24:07 [W] So choirs in shouldn't be should not be required for a coherent snapshot.
00:24:13 [W] Have you considered having some way to indicate in the application that it does not need to be quiet or backing up.
00:24:25 [W] Thanks Josh.
00:24:25 [W] This is a great question. We certainly have considered that.
00:24:30 [W] Headlock should be snapshot tone and rain-soaked wires in shouldn't be should not be required for a coherent snapshot.
00:24:37 [W] Have you considered having some way to indicate in the application that it does not need to be quiet or back in up.
00:24:48 [W] Thanks Josh.
00:24:49 [W] This is a great question.
00:24:51 [W] We certainly have considered that.
00:24:55 [W] Any of the components we described in the slides from my understanding is that they are almost all optional.
00:25:07 [W] So if an application can it is self guarantee application consistency or an application doesn't care about application consistency acquires an
00:25:29 [W] Almost all optional. So if an application can it is self guarantee application consistency or an application doesn't care about application consistency
00:25:44 [W] Is absolutely optional and can be saved.
00:25:48 [W] I hope this answer your question.
00:25:54 [W] And this is the yeah, this is the only question we have right now.
00:26:01 [W] We'll give a couple minutes with aliens.
00:26:46 [W] I'm going to answer the same question chance here.
00:26:48 [W] It's press OK.
00:26:51 [W] It's containerd Notifier or CID.
00:26:54 [W] So we are actually introducing a pot in line definition.
00:27:01 [W] So it's and also introducing a is an entry AKA object actually, so it's not a CRT, but we are actually a proposing.
00:27:14 [W] entry object for that
00:27:18 [W] so there will be a object for the user to request a Content Notifier and then there's an inline definition to specify what kind of command can be wrong.
00:27:31 [W] Yeah, the question is from Alex.
00:27:33 [W] I just want to read out. The question is containerd Notifier Ser D on top of the washing was describing.
00:27:39 [W] That's actually the first direction of this whole cap.
00:27:45 [W] And we got some feedback from API reviewers saying that this can actually be extended to support use cases to send signal to containers and the scene and I are working on
00:28:00 [W] To read the first direction of this whole cap, and we got some feedback from API reviewers saying that this can actually be extended to support use
00:28:28 [W] Is a new core AP.
00:28:35 [W] If you are interested in more details can be found on the captioning directly and there's another question coming in.
00:28:42 [W] Let me read out this affront Josh again.
00:28:45 [W] You introduced a cap for data labeling and kubernative.
00:28:50 [W] Can you talk a bit about how that supports your overall effort?
00:29:01 [W] I am not sure.
00:29:02 [W] I understand this question.
00:29:06 [W] Yeah, I don't think we introduced the cap for data labeling from our working group.
00:29:13 [W] So which proposal is that?
00:29:16 [W] Sorry, I think an audience.
00:29:22 [W] Josh if you want to clarify a little bit, so I at least the Caps that we are talking about in our presentation does not do this data labeling.
00:29:36 [W] If I have two guests gasp Josh, I assumed you were talking about the applications yardi.
00:29:44 [W] Pose an application and that's not within this data within this working groups domain.
00:29:53 [W] It's the aplex ecaps owns that care owns that definition.
00:30:31 [W] All right.
00:30:32 [W] Looks like a we don't have more questions coming if you have further questions.
00:30:38 [W] There's a stack Channel share and I both will be on there and the feel free to ask questions over there. We are going to choose you.
00:30:51 [W] cordon off in one more minute
00:31:30 [W] I going once going twice going through it.
00:31:34 [W] All right.
00:31:35 [W] Thank you everyone for attending our session. Have a nice day.
00:31:39 [W] Thank you.
