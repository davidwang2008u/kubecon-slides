Service Discovery with CoreDNS Plugins in Golang: RPAG-5227 - events@cncf.io - Wednesday, November 18, 2020 3:51 PM - 37 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] I've known sunk for coming to this talk.
00:00:01 [W] My name is Ian Town.
00:00:03 [W] I'm a mentor of guarding his project. I'm from mobile. I'm and this is my colleague John from Google.
00:00:10 [W] Hi there.
00:00:59 [W] I've known sunk for coming to this talk.
00:01:01 [W] My name is Ian Town. I'm a mentor of Guardians project. I'm from mobile. I'm and this is my colleague John from Google.
00:01:10 [W] Hi there.
00:01:11 [W] I'm John Brown Eric. I'm also a maintainer of courtesans also deeply involved in communities. And as young student from Google in today's talk of we are going to discuss several things first.
00:01:23 [W] We're going to make a brief introduction about hoarding has in case an otherwise familiar with scalding as we also going to provide an update for the past year or so. And then we are going to discuss about communication sponsored by Dell foundation
00:03:00 [W] Google interface Fargo we are going to discuss several things first.
00:03:05 [W] We're going to make a brief introduction about coding errors in case an otherwise familiar with scalding as we also going to provide updated for the past year or so. And then we are going to discuss about communication sponsored by Dell foundation
00:03:20 [W] Sighs those programs that for the past year or so. We have made tremendous progress and we have lots of contribution from different from different schools school students and they country a lot of
00:03:35 [W] From different from different schools school students and they country allowed of to coding us.
00:03:42 [W] So we think Lisa was to mention to to recognize their contribution and give people some insight on what how's things going on in those two programs? And finally after that we are going to discuss about
00:03:57 [W] After that, we are going to discuss about Democrats are getting gold on which is so space so discovery, which is the focus of this session as well and at the end it's going to be cool Q&A session.
00:04:12 [W] What is Koreans if you're not familiar with it pretty and ask is what are the earliest cncf projects? And it's a DNS server written in go.
00:04:22 [W] So you might ask.
00:04:23 [W] Why do we need a new DNS server?
00:04:25 [W] Well what we found was that traditional DNS and personal really geared towards traditional infrastructure and in Cloud environment while native environments the requirements change very quickly.
00:04:40 [W] Have a lot of underlying infrastructure Services coming and going more quickly than you'd want to reload your buying server.
00:04:47 [W] And so we thought needed for a DNS server.
00:04:53 [W] It can handle those use cases where the use cases themselves are evolving quickly and also the underlying services and things that we want to look up are changing quickly.
00:05:07 [W] So this project was started by
00:05:10 [W] Meet Kevin who I believe was at Google at the time.
00:05:13 [W] He's now a elsewhere.
00:05:15 [W] He's still our project lead and arsenic benevolent dictator and he does a great job of cleaning our community. But over the last few years. What do you mrs. Brown?
00:05:30 [W] The different cloud provider API services. Will you can attach the Route 53 you can attach to a Genus can detach the cloudiness who called DNS and you can do all of those in the same process and have it actually serve up records related to all of those things
00:05:46 [W] A lot of other Innovation Innovative features involved like we've developed like being able to do DNS over grpc, which folks are using DNS a lot. There's a lot there's all kinds of
00:05:54 [W] Over grpc which folks are using the cold turkey and I say there's hope there's all kinds of beautiful trusting that experiments or not.
00:06:00 [W] I should say.
00:06:00 [W] Well what are some of those experiments in the last year?
00:06:04 [W] So it's been because of covid it's been about a year since we've done natural update to the community.
00:06:11 [W] And so it was back in July 2009.
00:06:16 [W] released 1.60 and more recently.
00:06:21 [W] on that 780 and coming presumably already released by the time you see this will be the one that one day there any case through that 1.6 cycle
00:06:36 [W] A bunch of more Integrations like to cloudevents Azure body mass. We already had Route 53, we added some additional actual functionality and and improvements in the cash to allow you to search they
00:06:52 [W] In 1.7.
00:06:51 [W] We hope to communities Federation audience who have a plug-in from the original Federation control Point into an area which is effectively dead and some remove that to reduce employee service area for problems,
00:07:06 [W] Tina 64, which if I will confirm helping with IPv6 before transition the big thing in one Stephen did those of you who are familiar with accordion as a I've been using Cardenas need to know
00:07:19 [W] We change the metric games. So in previous versions, the metric named didn't follow the conventions that the Prometheus project publishes.
00:07:29 [W] And so we revised the metric units to be consistent with those conventions which helps fit in with the rest of your metrics. Of course, if you've built dashboards of the openmetrics, this is a transition.
00:07:44 [W] And you're coming one that ate release probably the biggest most interesting thing is a little bit under the hood.
00:07:49 [W] We have a transfer plug-in them.
00:07:50 [W] So previously The Zone transfer configuration transferring zones out was configured on upper back and plug in baseless. And now we've built a plug-in that handles in all
00:08:06 [W] Configured on a per back and plug in basis and now we've built a plug-in that handles in all for those back in plugins to make an easier for authors of those plugins to support don't transport.
00:08:14 [W] So those are the kind of major things you've done. Of course, there's been hundreds of bug fixes and minor improvements around that that last year with those are the big things that are kind of user-facing and visible.
00:08:32 [W] Okay now I'll talk about the accordions Community update for the past year.
00:08:38 [W] We have lots of updated from a community.
00:08:42 [W] First of all number one contributor has been increased from from 150 to all the way to 238 contributor.
00:08:50 [W] That's a big socks to to all the all the developer that countering to coding as we also have additional maintenance now, we have 24 Min tennis in the community.
00:09:01 [W] We have such a public adopters, by the way the public about the only means if the the company like Enterprises they use coding as and they're willing to reveal their name.
00:09:12 [W] We add their name to the adopters list, but I'm pretty sure that a lot of companies a lot of Enterprise. They're using coding as silently by the way in case if your company or Enterprise your
00:09:27 [W] Use for the US and you would like to share your experience with the community.
00:09:30 [W] I would like you to to add a poll request to public doctors to increase this number again, and finally body has reached a milestone Alpha six days six hundred Stars.
00:09:45 [W] We see the dragon Milestone compared with a year ago, and we certainly want the most starts down the road. So you haven't done so please just click Start to accordion three go in.
00:09:56 [W] GitHub
00:10:01 [W] Many people would ask if I have a question, how do I get help from Claudia's Community?
00:10:08 [W] There are two sources of two places that's going to help you a lot as a kid have a handle a GitHub in GitHub.
00:10:17 [W] you should be able to find the most our maintainers and the most of the maintenance of our active and you can find help everyday is also sectional cncf select Randall. That's
00:10:30 [W] Accordion sectional that's complete the outcome to find a lot of cow Pats feel they are some additional places. You can find like website or like blogs like a Twitter. Those are all places. You can find if you need any help.
00:10:43 [W] every year then Foundation sponsors at least twice for community clean bridgecrew grams for different open source projects and according as has been fortunate enough to be selected to participate
00:10:50 [W] two years in 2019 one student finishes so called the Google Cloud the as plug-in which is a very important plug-in and it is part of the default plug-in encoding it's repo
00:11:02 [W] One student finishes so called Google cloudy and foggy, which is a very important plug-in and he's part of the default plugins encoding it's repo and then 2020 another still then finish
00:11:35 [W] 2020 another still then finish accordions help track down covid-19 is essentially the lousy allows the quality and so automatically repair itself if there's anything goes wrong which coding self.
00:11:49 [W] So those are the very excite contribution from the student and that's enough and as an end of the day the community approach bridgecrew Graham will sponsor the student once the still didn't finish your project the
00:12:04 [W] We'll pay uh, Steven to the students.
00:12:06 [W] So this is the most financially motivating and it's a very good way to help the open source project especially for quoting eyes.
00:12:18 [W] As many of you already know coding as also participate in Google summer of code, and the people are familiar with the Google summer of code as well for the past four years.
00:12:28 [W] According has been participating in Google summer of code and the many students participated and country country into Claudius project.
00:12:38 [W] are very interesting contribution seems like a DNS tab like a CEO which is Access Control Lisa plugins our part of
00:12:48 [W] Default plug-in on the finally. They see ya Tanaka that says he is still then from India.
00:12:56 [W] He contributing us projects local machine learning by TSS threat detection.
00:13:02 [W] And this project is now the part of the coordinates repo but it is a interesting external plug-in. That's that's actually do very very exciting things.
00:13:17 [W] Essentially the the project the student is doing for machine learning plus coding as is that many people when they talk about the United so Katie. Yeah DS It's just infrastructure seeing there's not a lot of interesting
00:13:32 [W] Is not allowed excitement, but for this student, he basically Builder plug-in that allows accordion has to forward the courage to outside server and the child says server is essentially using
00:13:43 [W] Combined with tensorflow to decide if a query is malicious or not.
00:13:33 [W] And if the queries Malaysia has the the outside machine learning server will return back to coding as say hey, this is the and securing it with a lock and then that's that complete the whole
00:13:48 [W] Is a very nice if you're looking to his website this consists of many component. It has a very good goal.
00:13:55 [W] very good plug-in that's written in go Le it has a nice UI greeting in Python flask and they've also has a tensorflow integration building a curse model.
00:14:09 [W] So those are the excitement that has been produced by this student. So I think it's worth to mention in-toto.
00:14:15 [W] In our discussion here because as many of people we are that actually there are a lot of things you can do with sting as if we are a little in a way T. So that's a single tool to show
00:14:30 [W] Sighs it's the we see that is stilled and even provide a nice UI on the left side on the right side.
00:14:33 [W] Let's come a little a new network model.
00:14:37 [W] They still didn't use to do the detection.
00:14:40 [W] It's very nice started to see people getting this field to combine the machine learning combine the DNS infrastructure and the combined securely in place and also they student they even have a very nice logo as you can see he named this
00:14:55 [W] has failed to combine the machine learning combine the DNS infrastructure and the combined securely in place and also they stood and they even have a very nice logo as you can see he named this project as I mean will break and he has a very nice website which
00:15:07 [W] meal break and hear the very nice website, which is a good thing if you have time to browse through
00:15:16 [W] Now we start about a discussion for self-discovery and the 70 car Discovery discussion is of main focus of this session when people talk about the dean has a lot of people read the question about
00:15:31 [W] Say okay in this day and age you'll have a stands out of the place. You can define a network and they were your world.
00:15:40 [W] So why is then I still need it or why do you still need in us or why do you need to use thing us for service Discovery?
00:15:48 [W] I think there are several factors.
00:15:50 [W] The first of all Ds is a nice introduction.
00:15:53 [W] It may not it actually allows you to give you a lot of flexibility. For example, if you want to move from one place to another
00:16:01 [W] Another let's say you have your infrastructure our Google cloud and then one day maybe you'll say okay.
00:16:08 [W] Yeah, because of some user requests. I want to move to a WX so what I can do, of course, it's going to be very hard to do the migration if you use nesting solutions to make sure that the IPS as the same
00:16:23 [W] Yes, as a lot of times.
00:16:18 [W] It's just a simple DNS record change and you can read directly user to another cloud or to another place and we want.
00:16:28 [W] The DNS is also a very very nice visual system.
00:16:33 [W] It may not be the most sophisticated distribution system in nature, but it is really skills to internet and it's killed really real another reason many people use DNS is that being as is very
00:16:49 [W] Infrastructure and you have DNS in in cloudevents us your ideas in your community classes. You'll have your also have Dina's with your existing it infrastructure.
00:16:54 [W] that's managed by it admins and the because Venus is so pervasive. You can easily wire everything up into one place and use Dina's as the central source of Truth for all the
00:17:09 [W] You can easily why I received up into one place and use Dina's as the central source of Truth for all the services and that's why the service Discovery has been a nice come
00:17:22 [W] That's why the service Discovery has been a nice calm.
00:17:26 [W] has been a nice area for Dina. So servicemeshcon.
00:17:33 [W] So before we jump into how we build our source based service Discovery plug-in, it helps to have a little bit of discussion about queries or DNS.
00:17:48 [W] Left hand side you see a quarter of core file is the basic configuration file for accordion s essentially it's a bunch of stanzas. Each stanza has a Zone
00:18:03 [W] Our lives. So what you're seeing there is for example organization.com if handled on Port 53 the first Anda stands up on Prem that organization.com is handled by second stanza and everything else is handled by the first answer.
00:18:18 [W] When a query comes in off of TCP or UDP Port 53 the tree on the right kind of describes how that query that flow that is going to go through. So we re coming in the top of the flow.
00:18:31 [W] It's going to be routed based upon the configuration of those zones at the stanzas routed to be handled by the plug-in chain, which is defined by a particular stance.
00:18:41 [W] So if we look up food and organization.com, it's going to go to that routing point and it's going to say OK food aren't relation.com. Let's make the longest possible nap in DNS labels.
00:18:56 [W] And of course your honor I'm doesn't match.
00:18:59 [W] Organizations that comment you taught matches organization.com is longer. So it's going to get routed into the organization that cam lookin chain.
00:19:07 [W] It's going to use its going to just hit the cache plug-in if it's sent out and otherwise, it will be forwarded on to 1 2 3. Speed of 101 which will actually have
00:19:22 [W] anything on Prem meaning the sort of anything falling under that on-prem democratization documents of food out of privatization.com crowded to that stands out Rich With It Forward it and everything else that
00:19:33 [W] Mission accomplished crowded to that stands out which within quote it and everything else that gets sent through through through to the other stanza.
00:19:35 [W] this is how you configure different zones to be handled in different ways in a sort of stock vanilla accordionist.
00:19:52 [W] So and the question is how do we change that behavior?
00:19:57 [W] Well, we change that behavior by creating our own plug so it's not going to change the Rowdy but it can add another layer of routing in this particular case.
00:20:05 [W] So the demo plug-in which is available on our core DNS you have organization in the demo repository is a plug-in that will return a different result based upon
00:20:20 [W] works with the intervals
00:20:24 [W] and
00:20:28 [W] in this particular case, we look at 172 0/8 and or localhost work and we turn 1 1 1 1.
00:20:40 [W] Otherwise they did it and that's the wrong decade.
00:20:45 [W] So any plug-in in 14 s is actually pretty simple it consists of three functions.
00:20:54 [W] have more but there's three that you need you need to.
00:20:58 [W] Have any net which is what all it does is actually register the setup function with cat. So
00:21:08 [W] What am I talking about Kandi?
00:21:09 [W] Well accordion us was originally was originally a fork of web server called caddy, but we no longer afford.
00:21:17 [W] We haven't been for many years. But we do use is we use caddies infrastructure for caddy has it's a golang web server and it's got a sort of set of Primitives for managing servers for handing graceful.
00:21:33 [W] cat so
00:21:31 [W] what am I talking about caddy?
00:21:33 [W] Well accordion us was originally it was originally a fork of web server called caddy, but we no longer afford.
00:21:41 [W] We haven't been for many years but we do use is we use caddies infrastructure for caddy has it's a golang web server and it's got a sort of set of Primitives for managing servers or handing
00:22:15 [W] Start for handling the configuration for handling this whole setup process of plugins. And and so we use that for some of our infrastructure on the this the internal server functionality and
00:22:30 [W] For some of our infrastructure on the this internal server functionality and as it happens one other thing that's that happened in 1.7. I talked about different versions earlier.
00:22:40 [W] believe it was 1.7.
00:22:45 [W] Well, maybe it was 1988. But about to happen is It Caddy is going on to a version that we don't want it to go with. So we've actually pulled the original Keda code internally.
00:22:55 [W] So that's kind of more under our control now, but nonetheless
00:23:03 [W] the first thing you need to do is you need to tell the the core file parsing functionality what to do when it encounters a particular directive that describes your demo describes your
00:23:18 [W] The it does it says here's this function Chicago set up and set of function actually parses that that that configuration. So like when you set up for word, you say forward dot to some
00:23:32 [W] Over name that is that that's what gets passed into the setup function. Is that Dock and then essentially all those parameters and password that gets called once for each time the f****** appears of the directive that you register with an it appears within the core file
00:23:44 [W] You need a serve DNS method. So the serve you in this method does exactly what like what it sounds like it basically handles a DNS request and processes it and basically either
00:23:57 [W] Bonds for decides. It doesn't want to process it passes the topology.
00:23:58 [W] So what do those look like?
00:23:59 [W] They're actually like maybe less than 20 lines of code unit function. Like I said, super simple registers the plug-in just as okay in our case our plugins called demo.
00:24:09 [W] So what we're going to do is register demo and the action there is server type genus is because there's also an HTTP server type because it's can't even imagine but that's just always DNS for us but action is
00:24:25 [W] even the function that should be called or a pointer to the function to be called when when you encounter when the caddy parsec routines encounter that directive demo so
00:24:37 [W] The setup function on the other hand is past these caddy controller.
00:24:42 [W] That's essentially a pointer into the configuration a tokenized version of the configuration file.
00:24:46 [W] So the C dot next consumes the word demo, which is the directive. So we just kind of typically consume that and throw it away and then we go through and start to look at all the different options are names that madman past those could be
00:25:01 [W] We after it or they can be passed within the within the curly braces in a core file.
00:25:02 [W] file. So in this case, we don't have any arguments. So we just
00:25:07 [W] essentially puke if we come across something that if you added arguments there, then we add this plug-in in the setup. We add this plug-in to the chain. So essentially we're saying
00:25:24 [W] here's the Handler.
00:25:26 [W] Here's the Handler to call when when query comes in and it's going down and trying to process it.
00:25:38 [W] Here's the one that the previous plug-in should call in the event that it doesn't want to handle this particular request.
00:25:49 [W] So finally that sort of you know, this is the meat of it.
00:25:51 [W] This is this is what gets called when by that that chain when when a request needs to be handled by this particular plug-in just as a few things one. It creates the sort of convenience struct
00:26:07 [W] State that the request object and holds the query name off of that.
00:26:08 [W] That's what name does since we are sort of brain-dead. We don't allow you to configure it.
00:26:15 [W] We just hard coded 8888 here.
00:26:17 [W] and then we just look at the state that IP that's the clients Source IP. And if it starts with one of these things we reply with something different at me long. So obviously this is not
00:26:31 [W] Not a very useful plugin because that's not only answer. We want typically but normally a plug-in would examine the type of the query. We potentially look it up or it might manipulate it in some way.
00:26:47 [W] Finally, we the final piece to making all this work is that we need an actual core file when we create we need to call the super simple.
00:26:57 [W] The plug-in doesn't get inserted into the chain until it sees that directive we talked about earlier the directive we put in was demo so we have to put that into the core file to see if work.
00:27:14 [W] Finally building it. So
00:27:16 [W] Runtime plugins are only loaded only belt down at build time.
00:27:10 [W] So we have to actually go in.
00:27:12 [W] There's a file called plug-in duck CFG and that file as an ordered list of plugins. And in fact, not only can they not be loaded because Ray it's go it's statically compiled, but they actually can't be reordered.
00:27:25 [W] That's actually my biggest complaint not so much that they that we need to recompile because I like statically compiled things, but but that we cannot reorder so
00:27:35 [W] that's why my my little side comment there.
00:27:38 [W] Maybe we'll fix that one day.
00:27:39 [W] We haven't done it yet.
00:27:40 [W] But nonetheless you need to go in and decide where do you want this to fall? So that means that for example, the forward plug-in comes very late in the plug-in that CFG file because typically we don't want to forward something until we hadn't given an opportunity for
00:27:55 [W] Notice block him or the file plug-in to handle the query first.
00:27:56 [W] So similarly things that like rewrite we write comes very early in the plug-in chain because we write takes the request modifies. It hands it down the chain for other things and then it's given an opportunity.
00:28:12 [W] To to to do something more with it.
00:28:08 [W] I'm not with the response on the way out.
00:28:10 [W] So you have to make a decision about where your plug-in should fit in this case.
00:28:15 [W] Well, we are doing a source based service Discovery.
00:28:18 [W] We're actually we're actually essentially a back-end we're deciding what to return based on the query and so given that we want this to sort of take priority over what might be in a file
00:28:33 [W] what to return based on the query and so given that we want this to sort of take priority over what might be in a file or might be on some DNS or out there we want to put this early in the
00:28:48 [W] On some DNS server out there.
00:28:50 [W] We want to put this early in the plug-in chain.
00:28:52 [W] So we would go into flooding CFG and we would drop it in similarly in there.
00:28:57 [W] And then finally we just build there's a nice Docker command you can use to build so you don't need to have cocoa installed locally and it creates the file for you and you can buy
00:29:12 [W] so we don't have a live demo for you today.
00:29:15 [W] But what we do have is a link to the source code. So you can just click on that or visit that and GitHub and take a look at what what what it is and and give it a try and
00:29:30 [W] Feel free to reach out to us and some of the channels that young mentioned earlier and slack or wherever it may be if you run into trouble.
00:29:36 [W] Thank you.
00:29:36 [W] Oops.
00:29:45 [W] Finally, once you've written that demo plug in and parked it, it's working great and you realize you've got all these crazy use cases that you want to do then please join us and become a contributor, you know, we there's
00:30:00 [W] like to help to help out the project like you imagine styra us or if you use for DNS, which if you use kubernative you probably use accordion this even if you don't know it feel free to add yourself to the adopters or jump
00:30:10 [W] Select channels. We you know, if you if you show good judgment write good code and you give us a good solid PR, you know, you'd be a contributor and if you do one
00:30:20 [W] Requires potentially ongoing maintenance then we'll want you to be a maintainer especially if you add a plug-in because you know, it many hands make light work when when there are changes that come in or problems
00:30:33 [W] We like to have the author of that be a maintainer of it in the vast majority of cases.
00:30:36 [W] So we'd love to have you have you take your skills and contribute their
00:30:43 [W] thank you very much and look forward to the QA.
00:30:57 [W] All right.
00:30:58 [W] Looks like we're on air.
00:31:01 [W] think everybody looks like we have a couple of questions here. Do we support Dynamic updates RFC? 2136.
00:31:10 [W] Oh, no, the short answer is no so cordial nests supports multiple different back ends.
00:31:18 [W] And so Dynamic update that comes in we wouldn't know what to do with it. You wouldn't know how to tell a back-end to create a new record or up.
00:31:27 [W] to record so we do have a discussion that's been going on for quite some time and is actually there was comments about it today and get Hub that we have a
00:31:40 [W] sketch of a design for how to actually implement the ability to do a dynamic API either a hammock updates via DNS or the arrest or via grpc or via whatever you want to do, but there
00:31:55 [W] With it, we wouldn't know how to tell a back-end to create a new record or update a record.
00:31:56 [W] So we do have a discussion that's been going on for quite some time and is actually that was comments about it today and GitHub that we have a sketch of a design for
00:32:49 [W] Strong enough impetus to jump in and actually do that.
00:32:54 [W] Yeah, I think I saw one reason we have been very hesitating to add those Dynamic update of what's that accordions it by itself.
00:33:03 [W] It's another persistent storage.
00:33:05 [W] So even though we have the we have things like we saved all too soon filed or six those two hosts files by itself.
00:33:13 [W] It designed as more like a stale.
00:33:15 [W] He's like a pass-through of your data to the back end and the back end data could be safely. Not just a file probably could be in like Google Cloud.
00:33:24 [W] Like AWS throughout history.
00:33:26 [W] We've Incorporated external D those servers.
00:33:31 [W] So because of that it's pretty hard to support Dynamic update because the background that there's so many ways of background so we don't get into the business of deciding how to update so many like a 10 or 20 different
00:33:46 [W] So that's a reason we haven't supported angry update yet.
00:33:53 [W] Okay. Next question is how does this demo plug in for service Discovery work with no local news.
00:33:58 [W] So this demo plug-in is not do anything useful.
00:34:01 [W] No local DNS is another way you can actually build and customize Cordy and ass and go back and get I think I did a presentation on this in Barcelona or
00:34:16 [W] You can customize coredns s but you can actually build used car dealers like a library. And actually that's what that's what the local DNS project does.
00:34:17 [W] And so yeah, it's not really related.
00:34:24 [W] The next question is would adding a source fqdn capable of ability for service Discovery purposes into this Source. I think these plug-in be a big effort, or maybe it's just a very bad idea.
00:34:38 [W] Young you want to take that one are like I'm happy to answer to let me let me take a take a look. It says adding a source efficacy and capability for so we discovery not sure about
00:34:53 [W] Cody n i mean, I don't like
00:34:52 [W] I mean, I hope it will pass or security.
00:34:56 [W] I mean unless you have like web server and the same to to carry those additional information like yourself could you know, otherwise, you know, the DNA's surveys when they send the request essentially it's going to be the the service record and
00:35:11 [W] Ishmael information like your source of code again, otherwise, you know the DNS service when they send the request essentially it's going to be the the service record and that's mostly on the destination right?
00:35:18 [W] It has nothing to do with with your source of kadena, right?
00:35:21 [W] Yeah. I mean, I guess you could theoretically look up your reverse lookup and figure out that but it would have a lot of holes.
00:35:31 [W] So I'm not sure how that would how that would really work.
00:35:35 [W] Typically, you know, we do some funny things in some of our features like in kubermatic as we have only call Auto path feature where we look at the source IP address of the client and poddisruptionbudgets.
00:36:04 [W] It's can be a little bit flaky and looks like we're just about out of time.
00:36:08 [W] I'll answer really quickly on the monitoring. We can support Prometheus metrics and I guess uniform on take the last question difference between Cardenas and console.
00:36:22 [W] yes, I mean Council by itself or you can consider as the bottles ref protocol information and DNS server front end as according as has a different Focus instead of
00:36:37 [W] It's pretty much just a focus on Deena's. It has more support more protocols supported for DS. But the the so-called key Value Store back end that's actually handle the by different.
00:36:51 [W] The so-called key Value Store back end that's actually handle the by different different back-end way down by its actual D. So you could say Council plus Consulting as more or less equal to a
00:37:04 [W] More or less equal to a sexual D+ Cody has although according as handles much more in being a space and the council probably is a combination of its 650 plus the Cindy's layer.
00:37:18 [W] I think that's the that's a difference.
00:37:27 [W] Okay.
00:37:28 [W] Well, I think that's it for our time.
00:37:30 [W] So thank you very much and we will be honest election.
