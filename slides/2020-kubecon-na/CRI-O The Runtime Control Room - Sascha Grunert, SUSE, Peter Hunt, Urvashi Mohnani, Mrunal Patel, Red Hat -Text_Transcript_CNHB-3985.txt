CRI-O: The Runtime Control Room: CNHB-3985 - events@cncf.io - Thursday, November 19, 2020 2:57 PM - 42 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Welcome everybody to cry.
00:00:01 [W] Oh the runtime control room.
00:00:03 [W] I'm Sasha one of the maintainers of cryo and today. I have the pleasure to be here with Ava she hello everyone.
00:00:55 [W] Welcome everybody to cry.
00:00:57 [W] Oh the runtime control room.
00:00:58 [W] I'm Sasha one of the maintainers of cryo and today. I have the pleasure to be here with Ava she hello everyone.
00:01:05 [W] My name is Rishi Minami.
00:01:06 [W] I'm a software engineer at Red Hat working in the container one time space and I'm a maintainer of cryo and I'm here today with Peter.
00:01:13 [W] Hey there, my name is Peter hunt.
00:01:16 [W] I'm a software engineer Red Hat primarily working on cryo on man and Kahneman.
00:01:21 [W] And I'm also here with Renault.
00:01:23 [W] Hi everyone.
00:01:25 [W] I'm Renee Patel.
00:01:25 [W] I'm also a software engineer at red hat and I'm a crier maintainer.
00:01:30 [W] Welcome everyone.
00:01:31 [W] So what is cryo cryo is a containerd runtime that implements the kubenetes containerd runtime interface using open container initiative images and run times.
00:01:41 [W] It means that cryo supports pulling oci compatible emerges.
00:01:45 [W] I'm running them with oci compatible runtime such as run C or C run the prodyna.
00:01:50 [W] Projects are makeup.
00:01:51 [W] Cryo such as containers emerge storage pod men and run cri-o NT really pushing the envelope of containerd technology and Linux as they keep integrating new features added to the cone.
00:02:03 [W] Cryo balance is stability for the course here. I features that Cuban at this needs while adding knobs to improve security as well as incubate new features.
00:02:12 [W] This talk is about how a cryo admin sitting in the control room. So to speak is able to configure crowd feature.
00:02:21 [W] To make a clusters more secure the box as well as provide knobs for you to try out new features such as user name spaces.
00:02:28 [W] We will cover all the different ways that cryo and the workloads running on cryo can be configured.
00:02:33 [W] So without any more delay, let's begin.
00:03:31 [W] Hey there, my name is Peter hon. I'm a software engineer Red Hat primarily working on cryo on man.
00:03:37 [W] Come on, and I'm also here with Renault.
00:03:40 [W] Hi everyone.
00:03:42 [W] I'm Renee Patel.
00:03:43 [W] I'm also a software engineer at red hat and I'm a crier maintainer.
00:03:47 [W] Welcome everyone.
00:03:48 [W] what is cryo cryo is a containerd runtime that implements the kubenetes containerd runtime interface using open container initiative images and run times. It means that Christ.
00:03:59 [W] Oh supports pulling oci compatible images and running them with oci compatible runtime such as run CRC run the projects that make up cryo such as containers emerge storage pod men and run cri-o NT nearly pushing
00:06:59 [W] Most people will look at ATC cry. I'll cry o dot confit which is the main configuration file and it's written in Tamil.
00:07:06 [W] So every configure a part of cryo can be set their everything we can adjust.
00:07:12 [W] Also we are the command line interface can be done in this configuration file.
00:07:16 [W] So, for example, we can specify the content storage driver in the storage root. We can also set which underlying oci runtime should be chosen.
00:07:24 [W] example, we can switch from run C2C run we can also add
00:07:29 [W] Adapt some security-related configurations, like setting its default seccomp profile and the default fmo profile.
00:07:36 [W] What a default conciliatory switch should apply to all workloads. And we also have the possibility to have some more debugging help us like setting the local level or the local level system right now.
00:07:48 [W] We are working on making those configurations dynamically reloadable and we are were introducing a material configuration approach which allows us to separate.
00:07:59 [W] Want the single configuration file into multiple ones the how does this work?
00:08:04 [W] So Cry of supports Dynamic configuration, which works that we just have to send sick hang up to the server and then the server will reload the options.
00:08:14 [W] So this works for features like the default at all more profile or the second profile and it also works for the local level and the local level system if we configure system D to automatically sync sensing hang
00:08:30 [W] For the drop in configurations and per default.
00:08:33 [W] We defined a new directory, which is an e TC cry.
00:08:37 [W] I'll cry o dot confetti and for example if we specify the Tamil table like cry out at runtime, then we can set the local level and all right it to debug.
00:08:45 [W] So those configuration files and are in alphabetical order processed.
00:08:52 [W] So it makes them easy to use if you prefix them. There's a number for example
00:08:56 [W] And they also work with the dynamic configuration reload feature and those drop in configurations.
00:09:04 [W] have a higher priority than the etc' cry. I'll cry o dot conf which gives administrators the possibility to deploy a default configuration and users can override those configurations by just having the outro pin configurations, and
00:09:19 [W] Molded to you. So what we can see here.
00:09:12 [W] I will now start cry all the configuration file in my local directory and I will unset the configuration directory because I on my local machine. I had already have etc' cry out cry ordered constantly available
00:09:27 [W] Have any effect on my demonstration.
00:09:21 [W] I'll adjust it put it to an empty string.
00:09:23 [W] So here we are gravel is loaded and seems to work so we can now run something like cry City LPS.
00:09:31 [W] and yeah, we get an NT response because nothing is running and cryo protocol does not look that will those soda info Lobos it he does not look at all that's not look that much at all and we can see we are probably more
00:09:46 [W] So we can now run something like Christ City LPS.
00:09:46 [W] And yeah, we get an NT response because nothing is running and cryo pretty full does not look that will those soda info verbosity does not look at all that's not look that much at all and we can see we are probably more
00:10:41 [W] Jeans or intro messages which are related to the cni-genie at work.
00:10:44 [W] So to change that we can go into our cryo configuration and go to the local level and set it to debug. Then we save it and my demo I will now restart
00:10:59 [W] That we are now in debugging mode and if we now run any official request, then we can see that everyone every request is locked.
00:11:07 [W] So and those luck files can be pretty huge in the end because the verbosity is now really really high and to have a better debugging possibility.
00:11:18 [W] We added something like a local level systems.
00:11:21 [W] So for example, we now can go into our cryo configuration and change.
00:11:29 [W] The log level.
00:11:30 [W] This is a regular expression looks for example, we can change it as case inserted insensitive regular expression and go for request.
00:11:41 [W] And now let's just we don't have to restart cryo at all.
00:11:47 [W] We can just reload cryo.
00:11:51 [W] We are sending Jake hang up.
00:11:54 [W] Like this cryo also gives us the indicator that we loaded the configurations or it reloads the configuration.
00:12:02 [W] It updates the configuration file and we can also see okay.
00:12:06 [W] The log filter is now set to request and if we now run cry CTL, then we can see that we only really look the requests and
00:12:20 [W] This way administrators can for example really good filter on those look messages.
00:12:27 [W] And now let's just we don't have to restart cryo at all.
00:12:32 [W] We can just reload cryo.
00:12:36 [W] We are sending it hang up.
00:12:40 [W] Like this cryo also gives us the indicator that we loaded the configuration. So it reloads the configuration.
00:12:47 [W] It updates the configuration file and we can also see okay, the log filter is now set to request and if we now run cry CTL, then we can see that we only really look the requests
00:14:22 [W] And configuration files. We can also start cry or by changing the configuration file directory to my local directory and then cry or come study and if we do that then we can
00:14:37 [W] And if we do that, then we can see that in this directory for example is a log file lock modification file which resets the lock filter.
00:14:47 [W] So in the configuration file, we change the log level filter to local leader requests and in this over with all right file, we just unset it again.
00:14:58 [W] if we now run cry CTL, then we can see that we get all the data not only the request you also get the responses. For example, here we have the list.
00:15:06 [W] Image response with list all the images available on my local machine.
00:15:12 [W] And that's it for my little demo and now I would like to hand over back to oversee.
00:15:23 [W] So cryo uses the container storage library to manage copy and right file systems for containers and the containers image library for pulling images from containerd Registries.
00:15:35 [W] These libraries are also shared across our other containerd tools like Bond and build-up and Scorpio.
00:15:41 [W] So having a shared back and means that we can also share configuration files.
00:15:45 [W] So to give an example.
00:15:46 [W] Let's say I want to block image both from specific registry.
00:15:51 [W] So instead of having to configure this for each container tool that I use I can just put it in a shared file that all the containerd rules can act that.
00:15:59 [W] This trees block Registries their list of unqualified special Registries as well as marzette up.
00:16:05 [W] The second file is the policy that Json file this file holds polish requirements for container image specifically around where you're pulling the image from so you can have quality requirements for various transports, including trusted
00:16:20 [W] It's the third file is the storage that confine. This is used for configuring option for you container storage so stuff as stuff like your driver your run go to graphql it Etc.
00:16:13 [W] And now we're now we'll talk about container of the networking configuration.
00:16:16 [W] cry use a cncf configuring it working for kubernative sports c n is widely adopted as a networking solution in Cuba notice so cni-genie figuration mainly consists of two settings one.
00:16:31 [W] One is the part to the directory in which the configuration is stored. And the second is where the plug-in binaries are stored so you can see in the example on the slide.
00:16:40 [W] We have a net work done in a plug-in ders option for both of these settings in addition.
00:16:46 [W] We also support setting the default network if you intend to do so and then cry also supports bootstrapping met working to demon sets so you can have a demon set that copies over the configuration and the binaries to these directories and cryo will pick.
00:17:01 [W] The configuration so any parts at startup after that configuration will pick up the ci/cd ings in addition to all of these options that you know in the crowd cam Pro also has the ability to
00:17:17 [W] A runtime classes and handlers. So in kubernative, you know different workloads have differing needs of performance and security and their users need a way to toggle between different runtimes so
00:17:27 [W] So communities have this has this feature runtime classes, which is slated to be GA and 1.20 which asked the CRA implementation to use a different runtime or you just can also make it use runtime differently.
00:17:29 [W] Admins then have the ability to create runtime classes and optionally add Mission controllers or policies to get them for different uses.
00:17:40 [W] This gives a lot of verbosity for the amount of ways that admins can configure the way that their users can use differing run times for different workloads.
00:17:52 [W] So in the bottom left here you can see that this is a basic runtime class.
00:17:59 [W] Example and the runtime class name is correspond with one of the runtimes in the runtime table.
00:18:07 [W] So perhaps the runtime class name would be runs the high performance and then apply wood and then so and we'll go into a little bit more detail on the right. We have an example of a couple of different ways that you can
00:18:22 [W] They have different runtimes and will go into a bit more detail.
00:18:22 [W] We have the generic run see we have a run see that configures high performance for you balancing.
00:18:30 [W] We have run see that allows user NF annotation and then we have Kata which provides a bit more security as the colonel separated container in addition to all of the
00:18:45 [W] I love the way that you and your crowd. There's also the pot annotation, which is it pretty generic feature generally known and kubernative, but I'm just real quick.
00:18:42 [W] It's a generic key value map in the Pod metadata and it allows for passing through of unstructured data very well with the sack what this allows us to do is cry o has some specific annotation
00:18:57 [W] Then patient and since eyes annotation and these annotations allow admins to our users to request differing configurations of the runtime and then cryo and use those annotations.
00:19:12 [W] to to configure the runtime as long as that user is allowed to do that and we'll go into a user in a code annotation example a little bit but first in summary admins have the ability to
00:19:25 [W] Meditation example a little bit but first in summary admins have the ability to configure cryo and a varying number of ways as storage and there's networking all of these varying options in addition to that.
00:19:37 [W] They have the ability to add runtime classes to restrict burying behavior that through that cryo configure the runtime to do and in addition to that they have the ability to make different controllers day runtime
00:19:52 [W] Varying behavior that the run that cryo configure the runtime to do and in addition to that they have the ability to make different controllers day runtime classes or annotations before they reach cryo, which is the ability
00:20:12 [W] Is the car they reach Cry of which is the ability for admins to have a lot of power in configuring their kubernative notes followed their varying use cases and workloads.
00:20:24 [W] So now we're going to have the perfect example of that and have order she talked about ecology.
00:20:32 [W] Thanks for this so we can use the runtime Quest apology as well. As for down at ations to disable CPU load balancing for certain containers that are using high-performance runtimes the way this is done is that a pre-start hook is
00:20:47 [W] Topology as well as for down at Asia and to disable CPU load balancing for certain containers that are using high-performance runtimes the way this is done is that a pre-start hook is run to disable load balancing of the CPU specified
00:21:06 [W] Disabled or balancing of the CPU specified and the quad spec and then a priest up Hook is run to enable load balancing on though CPUs. Once the part is about to be stopped.
00:21:17 [W] So this is helpful and workloads where the expanse of context switching cannot be tolerated.
00:21:23 [W] So the user the Admiral the user gets the privilege to disable SQL go silencing Insurgency periods. So I have a quick demo on how this is done.
00:21:33 [W] done. Okay. So in this demo here, I
00:21:36 [W] have an open shift cluster.
00:21:38 [W] So the first thing that I did with my cluster was I created a machine config object that drops in config file at cryo.com study called 99 1 x dot config.com so in this
00:21:53 [W] I am configuring my runtime class my high-performance runtime plus so that was just the basics T4 content so we can go and download now to see what the file actually looks like under the
00:22:08 [W] And we can see here that I have created a runtime called high performance here.
00:22:06 [W] This is important because we will be creating a runtime class using.
00:22:10 [W] OC and cryo needs to know that there is a high-performance runtime that exist. So it knows to runs its pre-stretch increased our purpose.
00:22:18 [W] So since we are already on the Node, we can check the value of the flags for the various CPUs that I have on this node.
00:22:26 [W] This is important to keep in mind what the value here is.
00:22:30 [W] Is so 473 and 4655 because once we disable load balancing on the CPU, the value will drop by one. The other thing that I did was I created a few
00:22:45 [W] To update the CPU manager policy to static.
00:22:47 [W] So this allows me to request whole CPUs on certain notes exclusively.
00:22:54 [W] So if you can see the cube that I've can't file here when we scroll down right here, you can see my cursor, but it was set to static.
00:23:05 [W] So now the next thing is I created a runtime Class A high-performance runtime plus the handle name is high performance and I called the type of test.
00:23:16 [W] This is just a quick description of what the runtime class looks like.
00:23:20 [W] So now we are ready to create our pod where we would like to disable CPU load balancing.
00:23:27 [W] So here for the pot. I have the that the CPU load balancing cryo annotation to true.
00:23:35 [W] I have said the runtime class name to the hyperfest runtime plus that the created and I have requested two CPUs under my resources.
00:23:42 [W] So the spot is up and running now, let's figure out which note is running on so we can go on the Node to verify that CPU load balancing was actually disabled on the
00:23:57 [W] The container got so first thing we have to find is the cgroup slice for the container so we can figure out the CPUs that it is using. So I'm just getting my container ID and then finding the
00:24:05 [W] And we got this like and we can see here that the CPU set our CPUs 1 and 3.
00:24:03 [W] Those are the CPUs. I got so we can check the value of the flag for these two CPUs now.
00:24:13 [W] And here we can see that the values dropped down by one it is for seventy two and four six five four now for both CP 1 and CP U 3 we can just take a look at
00:24:28 [W] Example just to see what the double check the values that that one is still enabled and we don't accidentally disable that so as you can see that the values are greater than the disabled one. So we we
00:24:40 [W] Balancing of the two CPUs that the Pod got so now once the part is done running. We don't leave the CPU load balancing disabled.
00:24:45 [W] We re enable it with the free stuff cook as I mentioned before so let's quickly.
00:24:50 [W] delete the Pod here and we'll go back on the Node and check the same flag value again.
00:24:59 [W] So, yep, and then we're going to catch that value for CPU 1 and 3. And then as you can see it went back up pesos load balancing on these two CPUs are enabled again, and that's all I have for my demo.
00:25:14 [W] All right.
00:25:15 [W] Let's talk a bit about security-related configurations.
00:25:18 [W] The usually the container on time interface defines the main Behavior how I container runtime which implements the kubernative API should behave but this behavior is probably not always the most secure one.
00:25:30 [W] So for example, if we specify a second profile and put it in put it into an empty string then this will be considered as I'm confined and this applies to basically all workloads and they cluster who do not use
00:25:44 [W] The runtime default seccomp profile or a local host profile.
00:25:47 [W] So therefore we decided to add a new configuration options, which is called seccomp use default when empties and this should help us to increase the security defaults and running on container and times so turning this option on will
00:26:03 [W] You there enabled again? And that's all I have for my devil.
00:26:04 [W] All right. Let's talk a bit about security-related configurations. The usually the container runtime interface defines the main Behavior how I container on time which implements the kubernetes API should behave but this behavior is probably not always the most secure one.
00:28:05 [W] Default seccomp o5 it ships with cryo to all workloads who do not really specify something like unconfined or Local Host profile and I prepare the demo for you to show it to you.
00:28:18 [W] The first of all, let's have a look at this new configuration option.
00:28:23 [W] So it's part of cry ordered conf and we can just have a look into the description of the option and cut the fold it it's set to false. So if we now
00:28:34 [W] run cryo and for our demonstration purposes, we will unset the configuration directory.
00:28:41 [W] And then create a kubernative workloads.
00:28:46 [W] And then we can see that seccomp is not enabled on this workloads.
00:28:52 [W] So we can just verify it by using proxy server status and seccomp points to zero so it's not an age deal at all. So if we now create a drop in configurations, which enables the features for us, then this would look
00:29:07 [W] that we just have cryocon study and we just override the seccomp use default when empty to true if we now run cry or with that configuration directory and create a new kubernative workloads, then
00:29:23 [W] Now and the same way that seccomp is enabled for that workloads land. This is a great enhancement to default security and is a good example of strong security defaults from my perspective.
00:29:26 [W] That's it for my demo like Sasha and so next we're going to talk a little bit about user name spaces in kubernative in cry out. So real quick.
00:29:36 [W] I'm just going to do a quick overview of your need spaces for people who aren't aware you can think as of users in groups as people and the available range by d's, all of them.
00:29:47 [W] the host is like a house. They use a namespace is equal living not in the full house, but in the little doll house with in the house as in a subset of the range of ID.
00:29:58 [W] Without going too far into it.
00:29:59 [W] The there are quite a few security advantages to use the name spaces while inside the container the process can think it's privileged and be given privileges from the perspective of the host like a process in the
00:30:15 [W] Within the house is in a subset of the range of ideas without going too far into it.
00:30:19 [W] The there are quite a few security advantages to using namespaces while inside the container the process can think it's privileged and be given privileges from the perspective of the host like a process in
00:30:51 [W] Because it thinks that it's uid 0 or root, but on the outside is actually an unprivileged process and it if a container was able to break out then the then it wouldn't actually be able
00:31:07 [W] On the house, so it's much more secure to be able to run any positive any kind of privilege in time using it. So user name spaces and kubernative has been a really long time issue and in Regional enhancement
00:31:22 [W] Kubernative has been a really long time issue and in Regional enhancement requests in 2016 was brought up about it and it's been attempted to be implemented bearing times throughout the last four years and
00:31:35 [W] And yes still again. We have a another kept in 2020 that describes how we may be able to implement user name spaces again.
00:31:44 [W] So that's the sad news.
00:31:48 [W] The happy news is that much like his limit which was an option that cryo introduced way at the beginning of cry out to prevent for qualms from dossing a system and that wasn't supported in kubernative until 119, I
00:32:03 [W] 118 somewhere on then cri-o has added support for user name spaces before Upstream Cube has solidified on the implementation and this allows admins to play around with your the namespaces and use it
00:32:19 [W] Update Cube has solidified on the implementation and this allows admins to play around with your the namespaces and use it. But we make sure to implement it in a way that you care. So by
00:32:38 [W] Should implement it in a way that you care.
00:32:41 [W] So by what we did is we configure allowed.
00:32:47 [W] So there's a user name space annotation proud iot béarnaise.
00:32:54 [W] cryo user and S Mode and only pods that run in certain runtime classes are allowed to interpret that annotation to actually be able to create a username space for the poddisruptionbudgets.
00:33:07 [W] God and that allows admins to stop anyone from creating using namespace if they don't specify runtime Handler with the user name space or only allowed some people use user name spaces through
00:33:23 [W] And then give anyone access to user name spaces that they have the a lot of vacations and all of the runtime classes.
00:33:28 [W] So I'm going to do a quick demo on that.
00:33:32 [W] Alright, so the demo so we're going to start off by just creating a vanilla kubernative cluster run in cryo and it
00:33:43 [W] and while this boot straps are going to show a little bit more about what we're going to be working with.
00:33:47 [W] So where to start off with our this is our runtime class for the user and - so notice we have the name front a user Annette and our allowed annotations is a grenade cloudbees MF mode.
00:34:01 [W] So that means that this user name space is allowed to interpret the iot.
00:34:07 [W] Brittany's cryo user enough mode to configure user name space for newly created.
00:34:12 [W] A little bit then we're going to look at our three credits objects are going to create so first we're going to create a runtime class and that's going to use the hand of their runs a user and ask if any calls from user enough class and any pod that wants to be able to have the user
00:34:27 [W] He's at class.
00:34:21 [W] We're going to then create a pod.
00:34:24 [W] Is there enough pot as going to have the auto late annotation for using this mode Auto just means ask the cryo to create a 65k
00:34:39 [W] Just user name space nothing super fancy, but it's a patient for the majority of use cases and allows coyote like a delegation. There are finer grained controls, but we're not going to go over that in this demo and this
00:34:43 [W] A day and run a conservative rhetoric container and it's going to use the runtime class user Nats class or lecture the allowed to do that.
00:34:48 [W] Then we're going to create also a not user and as pod this one is going to attempt to get The annotation Auto but it's actually not going to work because cryo because it isn't configured with their correct runtime class name, so crowd will refuse to interpret
00:35:03 [W] Annotation, so it'll just be given the default user name space.
00:35:04 [W] This allows the Advent have finer grained control.
00:35:08 [W] It's going to see for two days and that will allow us to differentiate the two in PS3.
00:35:14 [W] So now we're going to wait for this cluster to come up.
00:35:17 [W] All right, and so now we're going to create our three products.
00:35:25 [W] And we're will check that they're running they are so now we're going to look at the the way to check that a user name stations running is check the uid map of the of the pit. So we're going to find the pit of each of them.
00:35:41 [W] One day is our user an Espada in two days is are not used round of PODS or personal look at our user nsps.
00:35:46 [W] And we're going to have the uid map of that pod now note here we have so the way that this file is structured is it has the this is the beginning of the uid range and that's
00:36:01 [W] You're at a ranch.
00:35:55 [W] All right, the beginning of uid range with respect to the containers using namespace. And this is the beginning of the uid range from the respect of the post is namespace.
00:36:04 [W] So the container things that is running in uid 0 but actually it's running in your ID 20,000 and that allows and then there are 65k allocated IDs, which should be enough for our to hid
00:36:19 [W] This means that any poddisruptionbudgets.
00:36:44 [W] Space and here just to demonstrate that it's gated on the runtime class. We're going to show the not user in US poddisruptionbudgets E from the perspective of the user name space.
00:36:54 [W] It's running as root or it's a uid map begins its root and from the host because its root and this is just all of the available your ideas.
00:37:02 [W] So basically what's happening is this poddisruptionbudgets host using namespace. So if it is specified to run as a if the paid one in the container is running as root that is
00:37:14 [W] Route on the house and a pair of any privileges that has is our the preposition from the perspective of the house and notice how the even though we attempted to give the invitation to the Pod don't work. It wasn't given The annotation.
00:37:29 [W] Wasn't the end patient with an interpreted so he's a name says it wasn't created and that meant and admin stop, you know, some user from grading using his face when they weren't supposed to which demonstrates fine-grained
00:37:41 [W] And that is it for the demo.
00:37:40 [W] Thank you for that.
00:37:41 [W] Awesome demo feature.
00:37:42 [W] So a cryo currently is an incubating project and the cncf the most recent version of cryo is 119 and we continue to walk in lockstep with the kubernative version cryo is stable and it is the container runtime that is
00:37:57 [W] Susie caps and openshift 4x clusters and production.
00:38:00 [W] So what's in the future of cryo as mentioned before cry already has support for user name spaces as well as cgroup V2, and we are working on pushing these features and options kubernative as well.
00:38:11 [W] So the Clusters can take advantage of it.
00:38:13 [W] We are also moving some of cryo components over to rust to improve performance and we see cryo graduating in the near future.
00:38:24 [W] If you want to find out more about cryo here are some resources for you.
00:38:28 [W] We are available on slack and IRC and we have this awesome that MD dock on our repo which has links to pass talks as well as any articles and resources around cryo, and we also have a pretty cool coloring book that
00:38:43 [W] Your tools and how they work together.
00:38:41 [W] I think now we can open the floor to question. Thank you.
00:38:54 [W] Hello, everyone.
00:38:56 [W] Hope you enjoyed that talk. We can take some questions. Now. The first question was are the slides available.
00:39:03 [W] So we attach the slides to the scattered disc dead during the talks. You can find the slides over there.
00:39:09 [W] Okay, get you can answer the questions that have not been answered. So the first one is any thoughts on how to deal with you ID or volume Mount when using particular idea either do want to take this
00:39:25 [W] recordings in the world
00:39:28 [W] Oh, I can hear you know, okay. Yeah, so that's one of the unanswered questions in the world of communities and
00:39:45 [W] and the behavior is integrated into kubernative itself because it cubed is responsible for handling the volumes and the ownership of those volumes, but
00:40:00 [W] Like right now, you can specify run as group and run as user and those groups and users will be from the host. So if you need a specific route, if you need a specific UI D you
00:40:09 [W] Right and the remainder of the new ideas in the Pod will be in the user name space so that still allows you, you know some of it but you you know, you have to be a uid and the host get that we're now do you know anything more about
00:40:12 [W] Some of it but you you know, you have to be a uid and the host get that we're now do you know anything more about the status of that?
00:40:16 [W] So the kept that we mentioned earlier, right?
00:40:21 [W] It has a staged approach on how will introduce usernames window kubernative and volume handling will be done later on like the first stages will be you use the same username space for all the points so we don't have to
00:40:37 [W] So we don't how to do volume volume tuning initially and then we describe the next episode were there if anyone wants to get into more details.
00:40:53 [W] So there's another question that oh, yeah, that was partially answered but a karass does it require passion to keep it and the answer is no the current implementation in cryo strictly
00:41:08 [W] Cry out and then configured config files and an annotation pass to the pod.
00:41:16 [W] So one up in my position and I would like to mention one optimization and volumes is like in overlay FS.
00:41:23 [W] There is an option to just change the metadata.
00:41:26 [W] So from the from the test that we did you can kind of do a fedora root of f is shown using that feature and two to three seconds.
00:41:36 [W] So which in the grand scheme of things isn't very bad compared to pulling an image, but if your requirement is to start like a cloud function then it
00:41:46 [W] Vancouver Island we are looking for the colonel colonel bof is folks to solve that issue.
00:41:54 [W] So there's various discussions happening in the kernel space for years that are interesting to follow.
00:42:04 [W] Okay, looks like we're out of time. But if you have any more questions, you can find us in the maintainers channel the coupon black or the cryo channel on the kubernative black will be around.
