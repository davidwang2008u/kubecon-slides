Beyond File and Block Storage in Kubernetes: ACQG-3750 - events@cncf.io - Wednesday, November 18, 2020 5:47 PM - 28 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Good afternoon, everybody.
00:00:01 [W] My name is Siddhartha money and I'm a software engineer at Mayo. I'm here today to talk about one of the most exciting features coming to kubernative object storage support in the last ten years the amount of data in the world has grown faster than ever before
00:00:16 [W] You to the new age of data collecting applications that we all use and have come to love take for instance. Google Maps. Google Maps has mapped 98% of our planet Google Maps continues to grow this data by
00:00:31 [W] Mission and maintaining an updated list of businesses and food activity at their locations.
00:00:07 [W] Another huge data collector is social media.
00:00:10 [W] We spend a third of our day on the internet using social media.
00:00:14 [W] We tweet half a million times every minute and we view half a billion Instagram stories every day.
00:00:23 [W] And it doesn't stop there content creation networks and streaming services like Netflix Hulu and YouTube take up another eight of our time on the internet every day.
00:00:34 [W] The amount of data today is truly staggering and it continues to grow at this accelerated pace.
00:00:41 [W] So, how did we manage to scale to such Heights? If you have noticed the trend here almost all of the data described above are either photos videos or some kind of point in time.
00:00:53 [W] And like location information these kinds of data are also called as unstructured data, unstructured data constitutes the majority of data today and also the majority of growth one of the reasons we were able to scale
00:01:08 [W] Is because of some inherent properties of unstructured data before going into the properties of unstructured data.
00:01:13 [W] Let's take a moment to also look at a parallel Trend that accompanied this data growth Trend.
00:01:20 [W] Let's talk about the evolution of hardware and software in these 10 years in the 10 years the highest and Commercial Network switches went from 40 gigabits per second 200 gigabytes per second note that I'm talking about commercially available switches.
00:01:35 [W] In 200 gigabytes per second note that I'm talking about commercially available switches.
00:01:29 [W] Not just the maximum possible at that time networking speeds have gone up two and a half times in just 10 years just like improvements in networking storage has also shown impressive growth both in terms of size of
00:01:45 [W] Waves and also in terms of throughput Drive sizes have gone up from six hundred gigabytes being the maximum size in 2010 216 terabyte drives available for use today.
00:01:56 [W] And then this drive-through put today's drives can sequential Eerie data 5 gigabytes per second.
00:02:03 [W] That's 40 gigabits per second the best data I could find about the drive speeds in 2010.
00:02:10 [W] We're about 300 megabytes per second of read through put this was a
00:02:14 [W] again from ssds back then comparing networking and storage today, even though storage systems to have shown much larger growth networking throughput speeds are still higher over the network.
00:02:28 [W] We can transmit data at hundred gigabits per second to the local drives. We can transmit data at a maximum of 40 gigabits per second. Obviously networking is faster than storage.
00:02:40 [W] One thing that's clear from this trend is that high scale applications should put their data over the network rather than store them locally on the drives.
00:02:49 [W] This does come at a small cost which is latency. Now, let's go back and talk about properties of unstructured data and let's see if we can tolerate this latency.
00:03:02 [W] Object at first this might seem like inefficient usage of storage space.
00:03:07 [W] However, there are far-reaching advantages to this approach to start with the lack of edits makes the data much more durable.
00:03:15 [W] It is much harder to cut up data if we don't make changes to the middle of it.
00:03:20 [W] So the first property of unstructured data is immutability as you can see immutability leads to higher durability now applications that store data over the network.
00:03:32 [W] Work also gained another property they become stateless.
00:03:37 [W] The great thing about stateless applications is that it's easier to manage.
00:03:41 [W] It's easier to deal with when it does fail easier for people and process around it to scale along with the application and all that needs to be done for applications to become stateless is to use this form stories that we described which is
00:03:57 [W] It's no surprise that object storage is the fastest growing Trend in storage and has been for the last ten years. Now given all this object storage should be a part of kubernative and supported natively out of the box today
00:04:13 [W] Does not support object storage out of the box.
00:04:07 [W] It only supports file in Block storage.
00:04:10 [W] It supports filing block storage using a standard called CSI and CSI stands for container storage interface CSI became generally available kubernative in the version 1.13 since then currently we are on version.
00:04:26 [W] D of kubernative and it's been two years now.
00:04:27 [W] What I'm currently working on is adding object storage support in kubernative.
00:04:31 [W] We are bringing in a new API called the bucket API in object storage. The unit of abstraction is the bucket a bucket is a collection of objects held behind a single endpoint.
00:04:45 [W] We're modeling. This bucket. API is very similar to CSI.
00:04:49 [W] The bucket API is going to allow any vendor to integrate their object storage service with kubernetes and any application workload that wishes to utilize a bucket can simply just request that
00:05:04 [W] Through standard kubernative objects and be able to use it.
00:05:06 [W] The bucket API supports four different calls. The first one is create bucket the create bucket call expects the back end of the object storage provider to provision a new bucket for any workloads
00:05:22 [W] Once the bucket is created the workload the needs access to the bucket Grant access creates a set of new credentials and provides it for the workload to access the bucket. Once the application is done using
00:05:37 [W] Once the application is done using a particular bucket, then the applications access to that bucket should be removed.
00:05:41 [W] So the third call is revoke access.
00:05:45 [W] The final one is once that bucket is no longer in use and will not be used by any application the future it when it needs to be deleted.
00:05:54 [W] That part is also automated by this bucket API, and that's the delete bucket call.
00:06:00 [W] Any vendor that satisfies these four calls can become bucket API comparable the bucket API also introduces six new objects into kubernative.
00:06:12 [W] These objects are custom resources namely buckets bucket access bucket request bucket access request bucket class and bucket access class the symmetric pairs of objects
00:06:27 [W] Patrick pairs of objects between buckets and the axis for those buckets represents the two different types of bucket related operations, we undertake which is creating updating and deleting buckets or
00:06:42 [W] Related operations.
00:06:42 [W] We undertake which is creating updating and deleting buckets or creating updating and deleting access to these buckets.
00:06:50 [W] Our proposal to add bucket API support into kubernative was accepted on the 20th of October 2020.
00:06:58 [W] So it's still very new.
00:07:00 [W] However, our team is very dedicated and we're moving super fast.
00:07:06 [W] We're planning to reach Alpha status by version 1.21 of kubernative that is about four to six months from now by the end of 2020 one.
00:07:16 [W] hope to achieve General availability.
00:07:20 [W] I welcome everyone from my audience here to participate in the design and development of the bucket API.
00:07:26 [W] You can join us on our weekly calls on Thursdays at 10:00 a.m.
00:07:30 [W] Pacific Standard Time the zoom link for these calls can be found in the slack Channel sick - storage solution cozy for container object storage interface in the kubernative slack. All our code contributions are made into
00:07:45 [W] Other code contributions are made into the GitHub organization kubernative - 6 and all our repositories have the prefix containerd - object - storage space interface.
00:07:58 [W] You can reach out to me or any of the bucket API work group members to ask questions about how to contribute or anything else related to our efforts.
00:08:08 [W] With this, I thank you for attending my talk, and I look forward to seeing you all on the Thursday meeting.
00:08:14 [W] Cheers.
00:08:54 [W] Hello, everyone.
00:09:09 [W] Hello, everyone.
00:09:17 [W] Hello, everyone.
00:09:32 [W] Hello, everyone.
00:09:41 [W] Okay, so I'm going to read the questions that have been asked and I'm going to answer them live here.
00:09:48 [W] So the first question is is the speed of the drive is mentioned in gigabits per second or gigabytes per second.
00:09:57 [W] The answer to that is the speed of the drives are mentioned in gigabytes per second five gigabytes per second is the maximum read throughput we found in-toto.
00:10:11 [W] One of the most expensive Amazon instances with local disk axis and network speeds.
00:10:19 [W] However mentioned in gigabits per second, which is how is generally this is a standard of representing them in the industry.
00:10:28 [W] The second question is how is Rook different from a CSI?
00:10:34 [W] So Rook is a system or an operator.
00:10:39 [W] I would say for setting up file block and even object storage inside kubernative.
00:10:45 [W] It also gives you some kubernative resources for setting up or are utilizing the storage that you just set up ci/cd.
00:10:58 [W] However is different from Rook Roots while Rook is a system for setting up storageos.
00:11:04 [W] Such storage systems like rook and others can integrate with kubernetes.
00:11:09 [W] So what we're doing with with cozy or the bucket API is creating a new standard for object storage CSI currently supports file and block or we're doing is for object storage.
00:11:25 [W] So I'm going to move on to the next question.
00:11:28 [W] The question is so the bucket is going to be mounted.
00:11:33 [W] Have you measured the throughput so I have to be I want to clarify something about how it's going to be mounted when I said mounted.
00:11:45 [W] I do not mean that it will be mounted as a file system inside of the part and then the pot will not consume the bucket as if it was.
00:11:54 [W] The local file system rather when I said Mountain we've been using it as a proxy term to explain that we will be putting the credentials and access and points for the bucket into a
00:12:10 [W] Um, that's what we meant by mounted could have used a different term.
00:12:14 [W] However in the community we've been using this and kind of carried over.
00:12:18 [W] Sorry about that.
00:12:21 [W] The next question is when will this be generally available?
00:12:25 [W] It's a good question.
00:12:27 [W] We are we moving really fast at this point.
00:12:31 [W] We've just been accepted our enhance our kubernative enhancement proposal was just accepted as of last month.
00:12:40 [W] And we expect to be going to Alpha by early.
00:12:47 [W] I would say first quarter of 2021 and everything goes well, we could likely become generally available by the end of your 2021.
00:13:01 [W] Carl says hi there.
00:13:03 [W] Hi.
00:13:04 [W] Next question is from Caleb.
00:13:09 [W] Does this mean I can bring my own man?
00:13:12 [W] I have instances and mounted as folders in my part again.
00:13:16 [W] I want to clarify when I said mount what I mean is they would be the file the credentials and access and points would be written as a file into the Pod and a workloads canonical.
00:13:30 [W] For instance if we were provisioning a bucket on S3, the standard location for S3. Credentials file is under the home directory under sub directory under the home directory called dot AWS.
00:13:35 [W] That there's a credentials file. So we would be creating that credentials file inside that part so that a workload can access that file and using that can access the bucket moving on to the next
00:13:42 [W] So that a workload can access that file and using that can access the bucket.
00:13:47 [W] Moving on to the next question.
00:13:50 [W] Can you talk a bit more about why object storage is the best way to manage State and kubernative?
00:13:55 [W] So one of the operational difficulties that traditionally all ID has faced has been from dealing with failures
00:14:11 [W] Storage is the best way to manage State and kubernative.
00:14:13 [W] So one of the operational difficulties that traditionally all ID has faced has been from dealing with failures
00:14:56 [W] Does not lost now we came up with multiple strategies for it.
00:15:01 [W] One of them is replication.
00:15:03 [W] And then the the challenge is replication is amplification of data and also the possibility of split brain problem where one replica is not as updated as the next
00:15:18 [W] Negation is amplification of data and also the possibility of split brain problem where one replica is not as updated as the next we came up with other strategies to deal with
00:15:49 [W] The strategies to deal with keeping data updated and safe despite failures and any form of operations where we expect a
00:16:05 [W] One of the units of failure or a hard drive as one of the units of failures the likelihood or the operational challenge of having that data and a different location is
00:16:19 [W] difficult to tackle in and putting data over the network completely sideswipes the problem you what happens is how the data is stored and how it is kept updated
00:16:31 [W] Completely a black box or opaque to the application and you know sophisticated systems have been developed to to deal with this without
00:16:46 [W] Complexity for the application itself. So S3 itself is a beast in terms of how it is run.
00:16:51 [W] However, an application does not have to have the same level of complexity to get the same level of durability that S3 gives
00:17:03 [W] So object storage of storageos the network, especially where the data is not I would say the data is not a mutable gives you the best possibility to
00:17:21 [W] Look, especially where the data is not I would say the data is not a mutable gives you the best possibility to
00:17:41 [W] Data, the next question is Stephen is from Steven.
00:17:49 [W] The question is isn't local storage still faster than Network for ssds local storage today.
00:17:56 [W] Even if this is these for a single Drive hits, you know Peaks out at five gigabytes per second.
00:18:06 [W] Generally if you have multiple ssds you end up.
00:18:11 [W] having the pcie lanes as the performance bottleneck and on the network again, you can you can saturate it up to a hundred gigabytes per second, but generally in
00:18:26 [W] See even with multiple ssds the performance hit comes from a random I/O because when we try to access small bits of information from different parts of ssds, even the the
00:18:42 [W] To assess this even the performance hit is higher than simply just pushing it over a network then expecting it all to be taken care of on the other side.
00:18:41 [W] Next question is are the Cozy specification ci/cd is nearing stable or large changes to be expected at this point.
00:18:52 [W] We haven't hit Alpha status yet as it is today changes are expected.
00:18:58 [W] However, you can closely follow what we're working on.
00:19:03 [W] And you can join us and help us evolve this API and solidify it the information for joining.
00:19:15 [W] Our weekly meetings is available on the GitHub repository for kubenetes / community and under six storage information about our meetings are present
00:19:30 [W] In the slide deck for this presentation that information is present.
00:19:35 [W] Next question is from Jeremy cone.
00:19:37 [W] Why isn't bucket just integrated into the CSI standard instead of a new standard.
00:19:43 [W] That's a good question.
00:19:44 [W] We honestly originally we're considering this the access pattern and the set of API supported by CSI is very different
00:19:59 [W] Or to support by object storage data axis over CSI generally follows the posix model where you can do creates updates edit updates and it's the same thing and deletes
00:20:06 [W] Storage and update is basically a delete and overwrite or create again.
00:20:05 [W] The other thing is the way CSI drives. Our file systems are provisioned are very different from how object storage is provisioned in case of CSI drives
00:20:21 [W] Simms a core part of how it chooses what kind of volume to provide for a request is based on the size of the volume so it chunks
00:20:34 [W] So it chunks out some portion of a drive a block device and then gives it to a container that wants it but in case of object storage sizes generally completely opaque as far as the application is concerned
00:20:48 [W] Sizes generally completely opaque as far as the application is concerned sizes completely unknown.
00:20:52 [W] Everything is over the network.
00:20:55 [W] There is no chunking of block devices and being provided to The Container. So it made sense to come up with the new standard and not try and retrofit the bucket
00:21:11 [W] Accessing and using storage with the existing CSI standard. So that's why we are coming up with a new standard. I believe there's another page.
00:21:26 [W] Okay. The next question is is the object storage API following standard doc DVS three of your guidelines.
00:21:35 [W] The object storage API is for provisioning object storage.
00:21:39 [W] However, it is not for data access.
00:21:42 [W] access. So we do follow we are coming up with a technically sound and standard format for provisioning object storage how we will not
00:21:55 [W] The data path, so we do not have any S3 API bits in The implementation of cozy.
00:22:07 [W] I hope that answers your question going to the next question.
00:22:11 [W] The bucket API will be a 3 compatible in function showed in the lecture. So the bucket API is meant to be a standard for any.
00:22:25 [W] Bucket object storage provider to integrate with kubernetes. So all the providers that are S3 comparable that have extra comparable objects stores that integrate using cozy will be S3 comparable.
00:22:38 [W] Is that RS3 comparable that have extra comparable objects stores, then integrate using cozy will be S3 comparable.
00:22:45 [W] Moving on to the next question why expose the object storage environment and credentials as file instead of say environment variables.
00:22:52 [W] That's a very good question initially in our design. We started with environment variables.
00:22:58 [W] However, if they're the question came up, how do we use environment variables when there are multiple buckets expected to be put into a part now the it leads to
00:23:13 [W] Russian a very quickly if we have to have more than one bucket and apart.
00:23:17 [W] The other reason for it is the the file that we put in has it is actually a set of files.
00:23:26 [W] One of the files is for the credentials and other one for certificates and another one for general information about the endpoint region Etc.
00:23:39 [W] So putting all of these
00:23:42 [W] He's all of this information like like certificate keys and also credentials in an environment variable was not feasible.
00:23:51 [W] So we decided to go with the files. Next question will mean I owe modify the what Benchmark so we can run that as a distributor Benchmark and kubenetes and test cozy that's a good question.
00:24:05 [W] when I owe warp directly talks to any S3 compatible store. So yes.
00:24:12 [W] You will definitely be able to run it in kubernative stew test cozy.
00:24:16 [W] So what Benchmark is a data path Benchmark cozy is a standard for integrating kubernative an object storage.
00:24:25 [W] So while they're orthogonal to each other what will easily be able to run on kubernative and be able to test cozy next question will cozy support
00:24:40 [W] More advanced bucket features such as object lifecycle management.
00:24:40 [W] Yes, such bucket features object lifecycle management and encryption support and worm buckets and just about every other feature that are in S3.
00:24:55 [W] In G Google storage buckets and Azure as well and we will be supporting all of them as a part of the Cozy API.
00:24:49 [W] Next question.
00:24:51 [W] Will it be possible to use a file inside a bucket as volumes example IE replacing config map. So there are some projects out there that allow you to do that
00:25:06 [W] Up only issue with using files or buckets as volumes is we lose some of the guarantees that we gain that we originally gained by using object storage.
00:25:18 [W] When you use a file we are using the posix API which supports creates updates and updates is the problem here in object storage updates are not allowed.
00:25:24 [W] So any updates that are made to your local volume becomes essentially an entire rewrite in the back end and also copying files are moving files in a local file system is is simply
00:25:39 [W] She an entire rewrite in the back end and also copying files are moving files in a local file system is is simply an atomic One Step operation in object storage moving files is a service
00:25:53 [W] One Step operation an object storage moving files is a service I copy so it is it is essentially an anti-pattern to use object storage as a file system
00:26:11 [W] Be possible not enabled through cozy, but there are there are some vendors out there that that give you s 3F s os3 file system.
00:26:20 [W] Next question is are they considerations around backup/restore requirements all yes. Absolutely though.
00:26:27 [W] We have put them on the back burner for now.
00:26:29 [W] now. They're at the tail end of the road map as we have it today backup and restore definitely something we're considering S3.
00:26:40 [W] Or object storage, even though it gives very high performance it can it can help you write a televised Sports terabits per second as we've shown in some benchmarks as the S3 has shown as well.
00:26:53 [W] It is generally used as as a volunteer of data. So hot air of data is data that you quickly access that is available locally and and want year of data is for data. That's
00:27:08 [W] This and generally backup or or or data.
00:27:10 [W] That's not as frequently accessed.
00:27:11 [W] So backup and restore our very important use cases for object storage and we will be looking into it once our API the core part of the API
00:27:26 [W] establish stability
00:27:19 [W] I can see that's the end of the list of questions.
00:27:27 [W] Okay.
00:27:33 [W] Does anyone else have any questions?
00:27:42 [W] Okay, I will be available on the kubernative or the cloud native Foundation slack Channel as shown on the webcast messages now and and we can continue our discussion there.
00:27:58 [W] Questions.
00:27:54 [W] Thank you for joining this session, and hopefully I'll see you all at the community meeting next Thursday. Thank you.
