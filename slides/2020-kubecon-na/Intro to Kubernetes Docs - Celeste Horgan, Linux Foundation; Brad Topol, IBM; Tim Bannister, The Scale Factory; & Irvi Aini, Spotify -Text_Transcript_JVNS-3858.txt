Intro to Kubernetes Docs: JVNS-3858 - events@cncf.io - Thursday, November 19, 2020 5:42 PM - 39 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hello, I'm Tim banister. And this session is Introduction to kubenetes docks.
00:00:04 [W] I'm joined by Celeste Horgan here VI knee and Brad Topol.
00:00:10 [W] To add or update documentation for kubernative features a little bit about how docks happened in the re-release cycle how to localize your content and where to get help when you need it at the end.
00:00:23 [W] We're going to be around and we're going to try and spend plenty of time answering any questions that you have.
00:00:29 [W] So as I mentioned, this is the kubenetes documentation special interest group.
00:00:34 [W] We maintain the kubenetes website at k8s dot IO now the main thing at that documentation provides is that website provides is documentation, and the documentation is categorized into several broad areas.
00:00:49 [W] I want to talk about is Concepts high-level overview of topics.
00:00:40 [W] There's also tasks and tutorials.
00:00:43 [W] So these provide detailed step-by-step instructions explaining how to accomplish a specific outcome.
00:00:49 [W] There's a reference section along with a glossary of terms used in kubenetes.
00:00:56 [W] You'll also find details about the kubenetes API and the binaries that make up kubenetes. You know, how they work their overall purpose.
00:01:05 [W] Their command line options and that kind of detail.
00:01:11 [W] I mention this website is localized into already 13 different languages English is the Upstream localization, but there are 12 others if he's going to talk about that more later.
00:01:23 [W] And localizing content is just one way of contributing.
00:01:26 [W] I want to mention why the documentation is for communities is a really important way. I think of contributing to kubernative because documentation is, you know, as much as code delivers
00:01:41 [W] Station drives adoption of those features by making them accessible to people who are not already involved.
00:01:39 [W] And so if you're interested in contributing to the documentation your work there helps make communities accessible to a wider audience and indeed might help bring on more contributors in the future.
00:01:54 [W] In terms of the technology the kubenetes website is a static site generator using markdown from code that's on GitHub like a lot of kubermatic projects.
00:02:06 [W] It's on GitHub in the kubenetes organization. The repositories called website.
00:02:11 [W] Markdown is similar to plain text. But you add extra highlighting for example with these asterisks or underscores.
00:02:20 [W] Basic markdown also offers lists hyperlinks Code system Snippets and a few other things.
00:02:28 [W] I'll talk more about how we extend a plane mark down to add additional features in a bit before then.
00:02:36 [W] I want to talk about some different ways to contribute.
00:02:38 [W] So let's going to talk about that in detail. If you're wondering where to start Sig dogs curates a list of good first issues. We've identified these as a good choice for making your first
00:02:50 [W] Ocean and when I say first contribution that could be that you're new to communities at all.
00:02:57 [W] Out of the organization.
00:02:48 [W] You've not contributed to the documentation website.
00:02:51 [W] So in either of those cases, these good first issues are for you we've we've got this list and if you want to get started, you're very welcome to pick up one of these labeled issues.
00:03:01 [W] Look for the good first issue label find that and make that your first contribution so that we're trying to give you an easy as root as possible to getting started.
00:03:14 [W] Now if this is your very first contribution to kubernative there is some sort of paperwork that's online but paperwork to get through before we can review your PR and move it forward to getting merged. We need you to sign a contributor license agreement.
00:03:30 [W] There's two ways to get this signed depending on whether you're signing as an individual or whether that actually you're associated with an organization that has signed as a corporation in either case.
00:03:43 [W] You can open a pull request. But then what you'll find is that some automation checks whether you have signed the CLA now that check is by your email address.
00:03:53 [W] So it's important to make sure that the email address that you're using in your git commits matches up with the one that's used to
00:03:59 [W] Check your CLA status.
00:04:01 [W] As an individual or whether that actually you're associated with an organization that has signed as a corporation in either case.
00:03:59 [W] you can open a pull request. But then what you'll find is that some automation checks whether you have signed the CLA now that check is by your email address.
00:04:09 [W] So it's important to make sure that the email address that you're using in your git commits matches up with the one that's used to check your CLA status. Now you see that details
00:04:20 [W] Link that you can click on the right highlighted there that takes you to the page on the Linux Foundation website that you can use to sign in check your CLA status and also to sign up.
00:04:35 [W] I'm going to talk no more now about Mark tan and some of the Technologies we use to get the website built.
00:04:42 [W] So on top of markdown we use go templates and the particular format of go templates. We use is Hugo templating Hugo is an extension of go Lang's built-in templating that renders static sites for you.
00:05:03 [W] I'm going to talk no more now about Mark tan and some of the Technologies we use to get the website built.
00:05:09 [W] So on top of markdown we use go templates and the particular format of go templates. We use is Hugo templating Hugo is an extension of go Lang's built-in templating that renders static sites for you.
00:05:25 [W] Of markdown source code and a set of rules and works at how to build the pages the theme that we use for that is called doc see which we've customized moderately heavily to look like the kubernetes website that
00:05:41 [W] And to make all of that work, we've got some automation around pork roast on GitHub. I'll talk about that.
00:05:49 [W] Got a tool called prowl, which is used not just in the website repo but across kubenetes.
00:05:54 [W] Some of you will be really used to it for others.
00:05:56 [W] This might be your first encounter with this this robot.
00:06:00 [W] Prowl merges PR's when they're marked as looks good to me.
00:06:03 [W] I'll talk more about what that means.
00:06:05 [W] later.
00:06:05 [W] They're approved and they're not held for some action to happen.
00:06:12 [W] Actually after you submit a PR the necklace title, which hosts the website does a complete build of the whole site based on your changes.
00:06:21 [W] If you've got a PR you'll see that a comment turns up on that PR see the arrow linking to a preview. You can click on that link and what you'll see is basically it looks like the same website the URL is a bit
00:06:36 [W] And so this is a version of the website that you can click on to check if your code is, okay, and it's also what reviewers will look at if they want to make sure that your changes are valid.
00:06:46 [W] Now if you want to get some extra credit, what you can do is you can go and find the page that you change in your PR and that defy doesn't do this for you. So it's nice if people do this.
00:06:58 [W] Find that particular page dig out the link and add a comment to your pull request saying this is the exact page are changed and maybe like this is the original page. And if you do that, you're making life easy for reviewers and approvers by letting people directly compare your
00:07:14 [W] Anyway, I'm going to talk about the the process of getting the website built as I say, it uses Nats defy.
00:07:13 [W] So starting for the point when you've actually proposed a change, maybe you're going to fix a spelling mistake on my website and unlike some other code changes like a one-word fix can be a valid contribution.
00:07:25 [W] You've opened a pull request.
00:07:27 [W] So GitHub tells netlist file that you've done that net the five builds and publish that preview version. I mentioned the same time the proud tool make sure that you sign that contribute to license agreement and starts tracking review and approval status.
00:07:43 [W] Proud as a few other things, for example, it'll work out what language is you're contributing to another suitable label.
00:07:51 [W] So we're reviewer will have a look at your PR.
00:07:55 [W] If it's technically sound in other words, you've you've put in some changes they make sense. The markdown is valid markdown.
00:08:03 [W] There's no egregious violation to the style guide more on that in a bit and it matches the pr description. Then the reviewer adds an LG TM label.
00:08:12 [W] The approver has a different job to prove his job is not to to verify your changes. Technically.
00:08:18 [W] It's to look at that PR description and just agree that that change is an appropriate one to make for the website.
00:08:24 [W] For one person can do both of those roles.
00:08:21 [W] Now at this point proud will see that the pr is LG TM and approved until GitHub to merge it GitHub merges your poor request and that defy sees that the master branch is updated builds and deploys the website
00:08:37 [W] Tenuous deployment process. So once that main branch is updated.
00:08:31 [W] Your changes alive.
00:08:32 [W] So to be clear.
00:08:34 [W] This isn't anything that has to wait for the next kubenetes release your changes live as soon as they merged.
00:08:41 [W] There is a separate Branch process. It's relevant. If you are contributing features that aren't don't need documentation documenting it quite yet.
00:08:51 [W] If you're making changes for a future kubernetes release find the development Branch instead and put your changes on that Branch or propose a merging to that Branch using a PR.
00:09:02 [W] Don't worry, if you're not sure reviewers will help you find the right target branch and sort that out.
00:09:08 [W] Okay. I'm going to hand over to Celeste now who's going to talk about how to get started and about writing good documentation.
00:09:15 [W] Thanks Tim. So as Tim mentioned the high level overview is that you create a fork you make some changes in the new open a pull request.
00:09:24 [W] We're going to back up a little bit and talk about how to make the changes that make it into that pull request.
00:09:31 [W] So typically as to mention we work on local Forks of the documentation repo.
00:09:38 [W] With you can create branches directly against Maine unless it's for a release or a translation.
00:09:44 [W] Thanks to him.
00:09:42 [W] So as Tim mentioned the high level overview is that you create a fork you make some changes in the new open a pull request.
00:09:51 [W] We're going to back up a little bit and talk about how to make the changes that make it into that pull request.
00:09:58 [W] So typically as to mention we work on local Forks of the documentation repo.
00:10:04 [W] Nobody can create branches directly against Maine unless it's for a release or a translation.
00:10:12 [W] So you're going to pull down your local Fork onto your computer and then you're going to run two commands make it containerd - image and make containerd - serve. So we deploy Hugo locally into a container because here in kubermatic is land.
00:10:26 [W] We love containers but it also gives us a consistent environment to build against which means that what you see locally is going to reflect what's going to build in that automatic preview that Tim mentioned earlier. So once that builds you can access the website on your componentconfig.
00:10:41 [W] Either at Local Host 1313 next slide, please.
00:10:45 [W] One thing to keep in mind is if this is your first contribution, we do load in the doxy theme as a sub-module so you will need to pull in the doxy theme and it's dependencies using the get sub-module
00:11:00 [W] In mentioned earlier. So once that bills you can access the website on your computer at Local Host 1313. Next slide, please one thing to keep in mind is if this is your first contribution we do load in the doxy theme as
00:11:18 [W] Very first time you run it you'll run into errors otherwise, so this is really important Next Step.
00:11:24 [W] So when it comes to control like doing a contribution as a whole we think that everybody is welcome to contribute to documentation.
00:11:36 [W] There isn't the Baseline level of technical skill needed other than being able to Wrangle Hugo and get and contributions from all different levels of technical isil are super super well,
00:11:48 [W] Come as well as contributions from people speaking other languages. So the majority of our contributions happened in English, but as we're going to talk about later, there's about 13 different localizations of the kubernative stocks and they all need contributions
00:12:04 [W] Really valuable.
00:12:06 [W] There's really detailed documentation on how to contribute to documentation on the web site.
00:12:11 [W] So check out the section title contribute on your spare time next slide, please.
00:12:15 [W] So as to mentioned we do have a documentation style guide and what the Style Guidelines out is things like capitalization rules and grammar rules and words that we try to avoid and words that we try to use instead
00:12:31 [W] Buns out is things like capitalization rules and grammar rules and words that we try to avoid and words that we try to use instead and in general.
00:12:33 [W] We do a check for any egregious errors against the style guide.
00:12:40 [W] So take a look when you have a chance. The other thing that style guide is great for next slide is word things like Hugo short codes that we use across the site to do.
00:12:53 [W] Ooh special things like note and warning blocks and other things to enrich the documentation experience.
00:12:58 [W] We welcome contributions to our style guide as well.
00:13:02 [W] So if you think that there is a rule that our documentation should be following in terms of language and grammar.
00:13:07 [W] Please feel free to open up an issue in regards to that so that we can start the discussion next slide, please.
00:13:15 [W] So in terms of getting going with your first contribution, the first thing to keep in mind is that we are here to help and the best thing that you possibly can do is to ask for help for the most part.
00:13:28 [W] We're very available via slack in Sig docks and Sig docks localization.
00:13:32 [W] We also have a mailing list kubernative Sig docks, and if you join that you get an automatic invitation to the weekly Sig meetings on Zoom. They occur.
00:13:43 [W] I live in Vancouver. So in my time zone They
00:13:44 [W] Occur in at 10:30 on Tuesdays most weeks and I believe it's about five or six UTC another great way to get started if you can't make it to to the Sig meetings and zoom and the slack isn't going to work out for you.
00:14:00 [W] At first issues and GitHub we are generally very good about tagging those next slide. Please most contributors to the kubernative project are not technical writers by trade.
00:14:10 [W] However, I am and as are few other people on Sig docs, and so I wanted to take a moment to talk about just how do I good documentation for people who aren't writers by trade?
00:14:21 [W] trade. The first thing to keep in mind is that all writing contributions are valuable to say docs. You'll see below an example of a webassembly
00:14:29 [W] One word change to documentation in other cigs that might be viewed as a bit of a spammy change but Frost that super valid because that actually corrects the grammar of that sentence and makes the documentation easy to understand but letting the
00:14:44 [W] Away, so edits and type of Corrections are incredibly welcome as a rule.
00:14:37 [W] We kind of like it if you're going to if you're going to submit it at it maybe edit the whole page and not just one area new content is super super welcome. And we feel that developers are the people to write that content by and large, but also
00:14:52 [W] by trade or just very comfortable with things language be really really welcome editing and reviewing PRS because a lot of the contributions we get from developers are not by people who have English as a first language and they do actually that help with grammar to bring up the quality
00:14:59 [W] Next slide please.
00:14:59 [W] If you're taking on a big new documentation task, just some general tips for writing. Well first off break down what you're writing into the smallest sections possible.
00:15:09 [W] It's really really hard to say. I'm going to documents take full sets. That's a really really big thing to talk about but it's easier to think of it in terms of I need to introduce staple sets as a concept or something that's explained at a high level
00:15:24 [W] Explain to people what tasks they can do with staples sets like adding or removing them and those are step by step instructions or tasks.
00:15:33 [W] And then I'm going to provide a table of reference of any Flags or options that you can set on stateful sets that are useful to know as a piece of reference for people who are working with the maximally and those are curl reference tasks.
00:15:47 [W] So I think breaking it down and then understanding the different categories of writing is a really good strategy.
00:15:52 [W] Why I personally find writing in bullet points first and then translating those into full sentences very helpful.
00:16:00 [W] And as the lead tech writer at the cncf exact correlation often says always be deleting try to be as brief as possible and to write and then delete a whole bunch Downs next slide, please a few last
00:16:15 [W] The full sentences very helpful. And as the lead tech writer at the cncf Zach Coral Ison often says always be deleting try to be as brief as possible and to write and then delete a whole bunch Downs next slide, please
00:16:37 [W] Right in the present tense.
00:16:38 [W] So I am or the stateful set does rather than I will do or the stateful set will do or in the past tense.
00:16:48 [W] I won't or I was doing the Staples that was in general keep sentences short use plain language when possible avoid complicated words.
00:16:59 [W] There's a great app called Hemingway app, it's free. It's online and it automatically scans anything that you put into it for complicated words.
00:17:07 [W] Sentences that are too long and I highly recommend using it and finally ask for help and Sig docs because there are technical writers hanging out in there next slide, please.
00:17:16 [W] So once you've made your wonderful well written it first request. What you're going to do is you're going to commit it and then open a pull request as Tim stated against kubernative website. And this is where the pr Wrangler comes in. So the pr regular is a
00:17:31 [W] Doc's because there are technical writers hanging out in there next slide, please.
00:17:36 [W] So once you've made your wonderful well written it first request. What you're going to do is you're going to commit it and then open a pull request as Tim stated against kubernative website. And this is where the pr Wrangler comes in.
00:17:49 [W] So the pr regular is a approver in Sig doc. So somebody who's fairly high up the contribution ladder and on a weekly rotation one person in that list is assigned to look at
00:18:01 [W] the PRS that we can approve them for Content.
00:18:05 [W] So these are people who are going to provide you detailed feedback and suggestions.
00:18:08 [W] They're going to put that approve label on your PR so that it can get merged. And if you're writing something fairly technical, these are the people who will flag down the appropriate Sig to make sure that the information is technically accurate so the
00:18:24 [W] Saying to make sure that the information is technically accurate.
00:18:27 [W] So the rotation for that is on the wiki and now I'm going to hand this over to ear be who's going to talk about localization the blog and next steps for contributing.
00:18:46 [W] Thank you so much.
00:18:47 [W] So here.
00:18:50 [W] In Stick talks, we have different kind of subgroups and one of them is localizations.
00:18:57 [W] So what's the difference between translation and localization?
00:19:02 [W] Well in Translation we translate the whole page from one language to others in localizations.
00:19:09 [W] We try to make sure that the content of this page is appropriate when we translate it into the other language.
00:19:21 [W] So it's more like adapt the message into the local audience of the language. We will translate it into and in these subgroups we try.
00:19:31 [W] Try to tackle some kind of common problems for each of the localization Steam.
00:19:37 [W] For example, if let's say what localization have Team have problems with how to sync the different branch between the master of streams and their own branch
00:19:53 [W] They missed having the same problems.
00:19:54 [W] We will try to kind of discuss whether we have kind of solutions for this kind of problems or other teams have already already have the solution for this problem next, please.
00:20:11 [W] And here we have 12 localization teams. As of today more teams are of course will come next please.
00:20:23 [W] And there is a common procedures on how if you are want to add a new local stations.
00:20:30 [W] So the first important thing is make sure of the code of your ISO language and then you can take a look into this we are here there is an example of how France
00:20:46 [W] And your local stations?
00:20:32 [W] So the first important thing is make sure of the code of your ISO language and then you can take a look into this we are here there is an example of how France
00:20:57 [W] Is Asians and then there's also a content on how you can localize your content from the Upstream.
00:21:05 [W] Of course English and then you can try to look at least it into your own language next please and there is a golden rules on how you can submit your
00:21:20 [W] Visions it is make sure that when you start with your PR it is for one language.
00:21:26 [W] And of course there is exceptions for this kind of We Are For example when we create our realist branch that French for specific release and we try to think with
00:21:41 [W] Example when we create our realist French, that's French for specific release and we try to sync with the master Branch. There is changes from different organizations
00:21:56 [W] Start Branch various changes from different organizations included in that PR and but but it's it's also applicable because that's the process that we have on
00:22:11 [W] Are trying to create a real French. The other example is when we switch the whole site into dot C. And another example here is the security noticed for certain features next slide, please.
00:22:28 [W] And there's also another sub projects here, which is Vlogs. So there is several guidelines for this sub-projects when you are trying to submit your blog post.
00:22:40 [W] The first one is the article should be applicable for all users.
00:22:43 [W] So it shouldn't be a specific on Fender.
00:22:47 [W] However, if you are not sure because there is a delicate balance. You can try to reach out the block team to check whether your article is still appropriate for Block.
00:22:57 [W] Mozart not and article are not published on specific dates since it will be reviewed by volunteer and it might take time to review the content and if it's more like straight in the terms of
00:23:12 [W] Might consider talking to the cncf marketing and it should be our original post and aim to be future proof since the kubernative has a high velocity development and try to plan
00:23:26 [W] You can check the blog on the link that profiled here.
00:23:20 [W] And of course anyone can write a blog post and submit it for a review.
00:23:28 [W] Next please.
00:23:30 [W] So here you can try to contribute by filling on issues like suggesting a features are reporting a box you can of course add log error whenever you submit a bug report you
00:23:45 [W] Like suggesting a features are reporting a box you can of course add log error whenever you submit a bug reports. You can also help with webassembly reviewing for request
00:24:01 [W] With what is Ines reviewing for request localizing existing Pages writing a new contents?
00:24:08 [W] Of course, you can also help by improving existing contents adding tags or diagrams sick dogs in General Uses kid and GitHub Hugo and identify to make it all work.
00:24:21 [W] You can edit pages and open pre-class styra clear with in GitHub website. And if you are suggesting changes, you can preview them locally Force.
00:24:31 [W] Next please.
00:24:33 [W] So you can looking around if you like.
00:24:36 [W] It's okay to feel overwhelmed at first and you can try to ask some help you can find by starting Smalls to help you get an idea of who is working on. What what tasks are underway and
00:24:51 [W] King along if you like it's okay to feel overwhelmed at first and you can try to ask some help you can find by starting Smalls to help you get an idea of who is working on what
00:25:19 [W] Bap next please.
00:25:22 [W] So, how can we get in touch?
00:25:25 [W] You can fight and sign up for slag and the slag dot khayat eyes that I'll drop by in our Channel insta-tox, and there's also different kinds of channels for our subgroups, which is the Sig -
00:25:40 [W] Seychelles stick - tox - long come and say hello.
00:25:45 [W] Feel free to ask questions next please.
00:25:49 [W] You can try to take a look into our GitHub and see good first issues here.
00:25:56 [W] Try to join our Google Groups the kubernative Sig docks and vijoy meaning that you can get invitation to our weekly meeting. You can drop a and say hello here.
00:26:09 [W] It seems like for details. No, I will handle this offer to Celeste.
00:26:17 [W] Yeah, so we want to just to thank everybody who attended this talk and we hope you learned a lot about documentation believe it or not.
00:26:26 [W] This is a very high level overview of what the Stig does and there's a lot more that we could go into so all of us will be available after the session for a QA and we hope you'll join us there.
00:26:38 [W] We also hope to see you at our weekly meetings and in the Sig docks channel on kubernative slack, so thank you very much and have a great.
00:26:46 [W] eight day everybody
00:26:58 [W] hello that so
00:27:03 [W] looking at questions that have come in.
00:27:04 [W] Last yeah, so we want to just to thank everybody who attended this talk and we hope you learned a lot about documentation believe it or not.
00:27:13 [W] This is a very high level overview of what the Stig does and there's a lot more that we could go into so all of us will be available after the session for a QA and we hope you'll join us there.
00:27:26 [W] We also hope to see you at our weekly meetings and in the Sig docks channel on kubernative slack, so thank you very much.
00:27:32 [W] And have a great day everybody.
00:27:45 [W] Hello then so.
00:27:50 [W] Looking at questions that have come in and we had a question come in Via slack from while hre question was how would I know if I work on a good first issue that someone else is not working on it?
00:28:03 [W] I'm going to answer that.
00:28:08 [W] and essentially what we do in Sig dogs, is that we
00:28:13 [W] We don't particularly say that someone is working on an issue.
00:28:17 [W] It's it's probably a little bit impolite to to open a PR when there's a PR already open, but something that we don't really do is have someone claimed a an an issue and then say
00:29:22 [W] While each Shari crash was how would I know if I work on a good first issue that someone else is not working on it? I'm going to answer that.
00:29:33 [W] and essentially what we do in Sig docs, is that we
00:29:39 [W] We don't particularly say that someone is working on an issue.
00:29:43 [W] It's it's probably a little bit impolite to to open a PR when there's a PR already open, but something that we don't really do is have someone claimed a an an issue and then say
00:29:58 [W] Because it's very particularly popular.
00:30:00 [W] So this particular popular repository and what that means is.
00:30:08 [W] We could sometimes find a really valuable feature block because someone has said oh I'll pick that up and then they don't so if you're wondering about picking up an issue, whether it's a first issue or some other issue you can see if someone has opened a PR that's
00:30:24 [W] And if they have you can contribute more effectively by reviewing their PR then probably by opening your own if there's no pull request open.
00:30:34 [W] Then someone's claim that you can communicate with them, but it's also okay to open that pull request and move things forward.
00:30:40 [W] That is a valuable way to contribute.
00:30:51 [W] Celeste I can see what your hello Celeste.
00:30:59 [W] It's just a bit of a delay and I put a call in to see if we have any more questions. But in the meantime.
00:31:10 [W] let's say I'm a new contributor and I've got
00:31:14 [W] A really really big thing that I want to do documentation.
00:31:18 [W] Like I think I need to restructure an entire section.
00:31:21 [W] I'm very ambitious.
00:31:22 [W] What's the best way of going about that?
00:31:33 [W] Anna has just said that it is a hunter. He Celeste so I'm going to try and repeat your question actually it yeah you were you said again.
00:31:42 [W] I'll let you say it again. Sorry for last.
00:31:44 [W] Yeah.
00:31:45 [W] Sorry.
00:31:45 [W] Sorry guys. We're
00:31:46 [W] Should I head for Tim?
00:31:46 [W] Was if I'm a new contributor and I'm trying to do something toward a large.
00:31:51 [W] What's the best way to go about that without stepping on people's toes?
00:31:56 [W] Okay.
00:31:58 [W] So if your new contributor I can say some of this from experience and you are trying to take on a large thing.
00:32:07 [W] I'm going to talk about a mistake actually and I think a mistake that some people have made is to start with the poor request.
00:32:12 [W] I would say start with the issue.
00:32:16 [W] Open an issue and describe what you intend to do.
00:32:20 [W] And if you've done issue tracking before and in other areas of work or whatever, you might naturally think. Okay. Actually, this is going to be an umbrella issue.
00:32:29 [W] We call them umbrellas or tracking issues and then I'm going to open smaller issues.
00:32:35 [W] If you're planning to make something that you think is not just a big change but a change that could trigger disagreement then come to a weekly meeting of Sig darks.
00:32:45 [W] Join the slack channel that you can find a scratch on our website and use either the weekly meeting or the slack channel to generate a bit of discussion and and see what people think is the way forwards but logging an issue is great because you can then jump
00:33:00 [W] Open a pull request.
00:32:56 [W] But with that pull request people can go back to the issue that you opened and they can say I have an opinion and my opinion is not your opinion and I discussion can't you?
00:33:06 [W] So it's really good. If you are thinking of doing something like that open an issue open a smaller tasks issue that has the first one as its parent and then tackle that task with a pull request and that will get people talking
00:33:22 [W] Some okay to come along to a Sig docks weekly meeting on Zoom or discussing slack and introduce yourself and say hello.
00:33:20 [W] That's how I want to get started.
00:33:22 [W] What do people think?
00:33:26 [W] That was an awesome answer to him.
00:33:28 [W] Thank you very much.
00:33:31 [W] I will keep asking questions.
00:33:33 [W] So I'm going to ask this what I'll let you guys decide who wants to answer what if I'm not a very confident writer.
00:33:44 [W] Are there other ways that I contribute to Docs?
00:33:48 [W] What else can I do?
00:33:59 [W] Brad did you want to answer that one?
00:34:00 [W] Yeah, I saw you smile.
00:34:09 [W] Can you hear me now?
00:34:11 [W] Guess up.
00:34:12 [W] Yeah, so one great way to get started is to go look at the style guide.
00:34:18 [W] We have a style guide that can help you to understand how we like things written.
00:34:24 [W] So this will help you with your writing.
00:34:29 [W] And will also help you when you if you want to review other people's writing and if anyone wants to add to that.
00:34:37 [W] Which is if you are not comfortable doing a lot of writing.
00:34:37 [W] This is a very big website that needs maintenance and if you're if you've got really good web chops, you would be really helpful to the sing.
00:34:48 [W] The other thing that we have that needs a lot of maintenance is we've got a ton of example code and a ton of example llamo
00:34:59 [W] and these are super valuable to our users because people love to copy and paste code.
00:35:06 [W] And keeping that up today is really really important.
00:35:08 [W] So even a one-line change that keeps a yamo - yamo up-to-date is a super super valuable contribution.
00:35:19 [W] contribution, sorry
00:35:26 [W] So I'm going to add a piece about go ahead do your V. Okay, it's always really I want to add another option we have
00:35:56 [W] Hands are rendering that item or whatever it is.
00:35:58 [W] It's also available contribution.
00:36:02 [W] So basically I want to add another options about this. So if let's say we have some kind of issues on how we can improve to go because last time you also trying to improve the
00:36:45 [W] for my psyche
00:36:50 [W] and also it out if you'd like to contribute to docs you can reach out to any of us and we'd be happy to mentor and help give you and point you in the right direction.
00:36:58 [W] It's a very friendly crowd.
00:37:00 [W] So please, you know feel comfortable to reach out and know that these wonderful people are going to help assist you.
00:37:12 [W] There's a there's a way you can contribute to dogs. If you feel that your your more technically minded and you're not particularly either comfortable writing in English.
00:37:22 [W] It's just not the think the think sort of way that you're comfortable contributing.
00:37:27 [W] You can review people's portrait quests and you can focus on the technical content of those few writer of you you can say I looked at the technical accuracy of this change and it's good. I'm not going to comment necessarily on the writing style.
00:37:42 [W] That's not how my review is structured. But I'm commenting on you know the change there are some very technical changes that go into kubernative documentation every release and it's unlikely that you know, a particular technical Reviewer is going to be
00:37:57 [W] Review people's poor request and you can focus on the technical content of those.
00:38:01 [W] If you write a review you can say I looked at the technical accuracy of this change and it's good.
00:38:06 [W] I'm not going to comment necessarily on the writing style.
00:38:10 [W] That's that's not how my review is structured. But I'm commenting on you know, the change there are some very technical changes that go into kubernative documentation every release and it's unlikely that you know, a particular technical Reviewer is going to be
00:38:46 [W] With every single area that documentation and cover. So people providing technical reviews is really helpful.
00:38:54 [W] So that's definitely a way that people can contribute.
00:38:57 [W] One of the simplest ways to contribute is to look at the documentation and file an issue. If you find something that's wrong with it happens a lot that there is stuff comes out of date and there are bugs tell us about them and then
00:39:12 [W] I can turn those into good first issues if we can but we'll always value that kind of contribution as well.
00:39:19 [W] Now if the reason that you're not comfortable writing in English is because you actually speak a different language.
00:39:27 [W] The other way that you can contribute is by localizing just like if you mentioned in the talk
00:39:36 [W] We're going to carry on in the slack chattering more questions.
00:39:40 [W] I'm going to answer take one more from Walid is translating blogs part of contributing.
00:39:46 [W] Absolutely it is but yes, thank you very much. Let's wrap up there.
00:39:56 [W] Thanks everyone. Thank you.
