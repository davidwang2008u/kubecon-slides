Giving and Getting Technical Help in Open Source Without Being Scared!: YGJU-1412 - events@cncf.io - Wednesday, November 18, 2020 3:52 PM - 24 minutes

Participant: wordly [W] English (US)

Transcription for wordly [W]

00:00:00 [W] Hi everyone.
00:00:01 [W] Welcome to coupon 2020 virtually this year.
00:00:04 [W] I hope everyone is staying safe and doing finding this tough times.
00:00:08 [W] Introduction about myself.
00:00:11 [W] So yeah, my name is Sonia singla.
00:00:13 [W] I'm one of the members on the kubenetes 1.20 least not staying I was a passed-out treachery intern at Mozilla recently this summer I completed by cncf internship with honours project apart from this. I love being part of different
00:00:29 [W] Is so yeah, my talk is on giving and getting technical help without being scared.
00:00:26 [W] Asking questions can be hard.
00:00:29 [W] I first discovered. That asking can be really hard when I was 17 years old in the first year of my college and at the same time.
00:00:37 [W] was beginning with open source. So we used to had a class as well as the lab for straight three hours on the subject called oscillations and Optics.
00:00:46 [W] So in the class whenever the teacher used to ask any question voice would blurt out without even thinking while the girls they would raise their hands.
00:00:56 [W] get shouted over and then they don't say a word but they actually want to say while I was sort of in the third category just absorbing things around me kind of an introvert person in the same lab
00:01:11 [W] Into groups of three the teacher used to say Club in groups of 3 as assigned open your lab manuals and here's all the required material for performing practical.
00:01:20 [W] So yeah go for it.
00:01:21 [W] But what I observed at a time is there was no curiosity among us, but the voice they used to rushed and perform the practicals very quickly while the girls they used to wait for the voice to finish
00:01:36 [W] You can copy the readings which came out while performing the practicals at the same way. I had this thought in mind in what type of culture I am living even why I'm studying these subjects. It was emotionally weak for me.
00:01:43 [W] Helping can be hard as I mentioned at the beginning of this talk.
00:01:47 [W] I was also beginning with open source at the same time.
00:01:50 [W] So whenever I got stuck with something or need help with something. I I asked someone send number DM most of the time nearly 95% of the time I didn't hear back from that person.
00:02:05 [W] But I got stuck with something or need help with something.
00:02:03 [W] I I asked someone send number DM most of the time nearly 95% of the time I didn't hear back from that person.
00:02:13 [W] I didn't receive any reply back.
00:02:15 [W] So I developed this thing in mind just because they are good at something doesn't mean they should be arrogant right?
00:02:23 [W] Maybe they aren't and also trust me mentors in the open source are among the kindness.
00:02:29 [W] Two people in the world I ever known maybe the person was busy.
00:02:33 [W] I was not asking question in the right method or there could be like billions of reasons why I didn't get any reply back.
00:02:41 [W] So when I started restructuring my questions doing proper homework before asking most of the things were changed for me.
00:02:49 [W] It was like another side of the coin.
00:02:53 [W] Helping is culture.
00:02:55 [W] What I observed common between open source mentors and teachers is that the teachers and the mentors are rushed to help girls more quickly than they help voice.
00:03:07 [W] They let the boy struggle a bit with the work they are doing and implicitly sending a signal that the boys are more capable.
00:03:16 [W] Ultimately. They will figure it out somehow.
00:03:21 [W] At the same time I felt that the system is privileged and biased it's totally understandable that the main tours wants to help the under represented people in Tech to help them grow become better engineers.
00:03:37 [W] I mean making money I earned in the promotion's so that there is a balance reduced gender gap more diversity and inclusion in our tech industry, but at its core this plays into the idea that the under represented people.
00:03:52 [W] Already skilled enough smart enough or ready for more responsibility or leadership?
00:03:56 [W] Opportunity and visibility not advise what members of underrepresented groups in Tech often Edie's opportunity and visibility not advise. They have to work extremely hard and the
00:04:12 [W] At the work they are doing so that they can combat the systematic privilege and unconsciousness Spire snails at play in our work environment.
00:04:18 [W] They're consistently under promoted and under compensated for the work. They are doing even though they are excellent at their work.
00:04:29 [W] So these are some of the nice Lines by Christie Tillman advice is just one thing comment or give but there are residual benefits from visible proximity and tangential relationships to be gained.
00:04:41 [W] So I would request everyone to give it a thought and think about it.
00:04:48 [W] Kill me knative Bridge with Thanos recently this summer when I did my community bridge in town trip with Thanos project of cncf, but they can populace they both were my primary mentors and most of the time I spend working with
00:05:03 [W] Primary mentors and most of the time I spend working with them.
00:05:03 [W] We used to have a weekly call.
00:05:06 [W] I saw how they both.
00:05:08 [W] Let me struggle with the code.
00:05:09 [W] I was writing how they helped me to grow to Google myself and more importantly become self independent.
00:05:17 [W] So yeah helping his a culture a culture of helping others and more importantly creating the culture for our community culture of people in Tech and
00:05:28 [W] For me this internship absolutely turned down the culture and I saw how big helping can be.
00:05:35 [W] It really makes a huge difference in how the whole organization Community or maybe class of a bunch of student feels and helps them in transitioning the culture of organization plays a very important role.
00:05:50 [W] It also focuses in terms of learning helping and if you have this kind of culture in your organization company, or maybe in your college, it means that you're doing absolutely great.
00:06:03 [W] You can hire amazing people more diversity among the organization. You can take Junior Fox and Drew them into amazing senior folks. So today we are going to talk about tools.
00:06:17 [W] Getting technical help giving technical help and I'm going to share some of the specific tools for making these two things easier because you know, they these can be really challenging.
00:06:30 [W] So without further Ado let's talk about asking and first let's talk about the mindset of asking and then about some of the specific tools that you can use to make it more useful as a developer.
00:06:45 [W] Again, challenging to stay up to speed with the latest trends in technology.
00:06:40 [W] I read a new challenges new languages Frameworks and devices capture our attention.
00:06:48 [W] However art well for Community is made of people not the tools.
00:06:54 [W] And it's very fascinating to explore the social political aspects software Engineers.
00:07:01 [W] They are never done learning as our field is wide apart and it always keeps on changing.
00:07:06 [W] We are always beginner at some things and expert at others along the way from beginner to expert we ask a lot of questions, but it can be intimidating to ask for help.
00:07:18 [W] So first of all, the key role is to remember that even if you are talking to a person
00:07:23 [W] Son who's a junior or senior?
00:07:26 [W] They don't necessarily need to know everything and the same is applicable on you being a senior doesn't mean they know each and everything.
00:07:35 [W] it simply means, you know, some of the stuff they know some of the stuff and you both know some of the same stuff if your code is not running giving you some errors or might be your application is not building
00:07:50 [W] Senior they don't necessarily need to know everything and the same is applicable on you being a senior doesn't mean they know each and everything.
00:07:51 [W] It simply means, you know, some of the stuff they know some of the stuff and you both know some of the same stuff if your code is not running giving you some errors or might be your application is not building
00:08:21 [W] Sign of progress it means that you're about to learn something new and be sassy and brave enough to step up its scary and intimidating sometimes but anyway, you have to push yourself through it.
00:08:35 [W] So here are some of the tools that you can use.
00:08:40 [W] For asking.
00:08:41 [W] So the first one is to choose the right place to ask. I just want to put this up here and I believe this is a base level importance because if you're working in a toxic culture, no matter how good you become it asking
00:08:56 [W] tools that you can use
00:08:59 [W] For asking.
00:09:01 [W] So the first one is to choose the right place to ask. I just want to put this up here and I believe this is a base level importance because if you are working in a toxic culture no matter how good you become at asking
00:09:44 [W] After How brave and excellent you are you're definitely gonna end up in a bad time. The people who are the founders leaders are going to set the culture.
00:09:54 [W] So listen to them or if you're interviewing them ask them lots of questions, whatever you have so that you know, you are going to end up in good hands good place.
00:10:07 [W] also online forms slack channels IRC are a much better place to us the rest depends upon the organization as every organization follow different Norms different communication channels once you find a
00:10:23 [W] Don't just barging have a look around to see how a particular Community Works before you demand for help. This should be the basic netiq.
00:10:33 [W] In some forms the same question gets asked over and over again.
00:10:38 [W] So do your homework properly before asking a simple Google research might give you your answer. It will also avoid antagonizing the regulars a lot of my Google research is directed to me sites like stackoverflow.
00:10:53 [W] Might give you your answer. It would also avoid antagonizing the regulars a lot of my Google research is directed to me sites like stackoverflow stack exchange, which are both excellent sources of programming help.
00:11:05 [W] And now I want to share a few don'ts don't expect to be spoon-feed. It don't get annoyed. If you don't get an answer in the first few hours people ask you for more details.
00:11:18 [W] Someone tells you that you are doing it wrong and you can almost count on it and it has been occurred to me like many other times.
00:11:26 [W] So the second key rule is practice a 15-minute rule take 15 minutes to solve the
00:11:34 [W] Let me know any way you can however if you don't have an answer after 15 minutes, you must ask someone because if you keep asking eating bugs without even trying to figure it out.
00:11:45 [W] You're never going to learn how to solve problems on your own for yourself.
00:11:50 [W] We are going to ask for help.
00:11:53 [W] You are at least armed with the full context of the problem at hand.
00:11:56 [W] The third thing is explain what you're trying to do big picture goal because if you're secretive,
00:12:04 [W] About what you are doing people might assume that it's your work assignment or maybe you're working on some commercial or it could be anything.
00:12:16 [W] There is also don't say I try to run XYZ. It didn't work.
00:12:21 [W] Video going to ask for help.
00:12:23 [W] You are at least armed with the full context of the problem at hand.
00:12:27 [W] The third thing is explain what you're trying to do big picture goal because if your secretive about what you are doing people might assume that it's your work assignment, or maybe you're working on some
00:13:19 [W] Very lucky. Someone might say I can't help you unless you give me more details.
00:13:25 [W] There are a lot of very clever and helpful people in the community. But if you don't give them enough information to be able to help you they simply can't and it will frustrate them out and hands you might get some root replies
00:13:41 [W] But if you don't give them enough information to be able to help you they simply can't and it will frustrate them out and hands you might get some root replies.
00:13:51 [W] Also, whenever you are explaining things suggesting things don't say I think delete I think say whatever you want to say without using the word I think.
00:14:06 [W] the fourth thing is
00:14:09 [W] say what you have already tried.
00:14:11 [W] It will be really helpful for both of you.
00:14:15 [W] The fifth thing is say, thanks and give it back always come back and say thank you and let people know if their advice was helpful or not. This isn't the much of payback for giving out free help.
00:14:29 [W] But if you can let people know they solution helped you. This is their reward.
00:14:34 [W] It's also an investment in Goodwill. They will likely to be there for you next time if you were one of those who said thank you for your time and
00:14:45 [W] thanks for your help.
00:14:47 [W] So to sum up here are the five tools choose the right place to ask practice a 15-minute rule explain what you're trying to do big picture goal.
00:14:59 [W] See what you have already tried say thanks and feedback.
00:15:05 [W] So that was all about asking now. Let's talk about helping before I start on helping.
00:15:13 [W] Likely to be there for you next time if you were one of those who said thank you for your time and thanks for your help.
00:15:22 [W] So to sum up here are the five tools choose the right place to ask practice a 15-minute rule explain what you're trying to do big picture goal.
00:15:34 [W] See what you have already tried say thanks and feedback.
00:15:41 [W] So that was all about asking now, let's talk about helping before I start on helping. This is really a hard thing to do and we are never taught how to give critical feedback effectively.
00:15:55 [W] We are never taught how to be good leaders.
00:15:57 [W] We are never taught how to be mentors. We are not taught how to be experts.
00:16:03 [W] We are just figuring out the things as we go along. So there are a lot of pitfalls here that are very
00:16:10 [W] Easy to fall into it's also true that you have stuff to. Do. You have a full-time job have kids and if someone comes in and interrupts you and asks you a question.
00:16:23 [W] It's going to take away our time on whatever you're working on and that's really challenging.
00:16:30 [W] I totally want to acknowledge that up front but teams that are really successful know.
00:16:37 [W] This is the job that helping your team be successful.
00:16:39 [W] Isabel is helping everyone work to their full capacity is the walk to do this is the roll. So even though it can be really frustrating in the moment to put down your own thing and help someone else try
00:16:55 [W] Is the walk to do this is the roll. So even though it can be really frustrating in the moment to put down your own thing and help someone else try to take a step back and look at the big picture
00:17:10 [W] Can really help everyone needs experienced motivated and highly skilled people to work with but people just don't get p*** with this in open source somatic variety of contributor.
00:17:25 [W] It will be a badass x kublr x / who wants to help and might give you some amazing ideas. But sometimes you will work with people who are who have just started their Journey with programming.
00:17:37 [W] Sometimes you will work with people who are who have just started their Journey with programming.
00:17:41 [W] The another thing that's challenging is remembering all the things being an expert can actually make it very difficult to remember what it's like to not understand.
00:17:52 [W] What a variable is a variable is a very challenging concept to people who have never programmed before and you can forget that very easily when you spend all the day in an IDE.
00:18:04 [W] Ee or on the command line or you know, whatever knowing something super. Well, it makes it really hard to remember what it was like before and that can make it very hard to help them out and also very
00:18:20 [W] On the command line or you know, whatever knowing something super. Well, it makes it really hard to remember what it was like before and at can make it very hard to help them out and also very frustrating.
00:18:42 [W] You have all probably help people who are new to technology.
00:18:46 [W] So now I'm going to share some of the specific tools that you can use to help someone.
00:18:53 [W] The first one is encouraged asking questions.
00:18:58 [W] So whenever people asked CU cushion be welcoming be gentle be compassionate and curious support people emotionally when people ask you questions like hey,
00:19:11 [W] This is a great question be excited about the problem about the work, you know problem related stress can make people seem rude are stupid even when they are not also there could be other
00:19:27 [W] leave when people ask you questions, like hey, this is a great question be excited about the problem about the work, you know problem related stress can make people seem rude are stupid even when
00:19:58 [W] The first one is the you are not getting enough questions at that time reward question asking you are getting lots of question teach them how to ship if the people are in the first few months
00:20:14 [W] And it's not really like you want to proceed maybe shape their behavior.
00:20:18 [W] For example teach them how to debug effectively.
00:20:23 [W] We have to look for help how to write better code let them struggle a bit because that's how we learn and grow also before you ask Google. It may be searched on the mailing list.
00:20:38 [W] Lauren grow also before you ask Google. It may be searched on the mailing list read the error messages try debugging or experimenting
00:20:53 [W] Ending the second thing is create healthy environment by a healthy environment.
00:21:00 [W] I mean, you should treat the people asking questions like they are your competitors are friends.
00:21:07 [W] You should never underestimate them. And for example if they are asking what is x y z you should never say you don't know even asks, why is it this makes the environment really toxic and discouraging?
00:21:24 [W] The third thing is explain the process and result.
00:21:28 [W] So after getting the question from people, you should explain the complete process to them by process.
00:21:34 [W] I mean how the things are running behind the scenes.
00:21:37 [W] you should provide them enough data context or documentation links so that they can understand better.
00:21:44 [W] There might be things of Concepts which you understand, but they don't tell them how you approach the solution for a certain complex.
00:21:53 [W] Problem.
00:21:54 [W] How are you making those complex decisions?
00:21:56 [W] Tell them the reason why you know why you made this thing or feature like this way in this step make sure that if you are not spoon feeding them but providing enough resources from which
00:22:12 [W] After you give them basic ideas this goes into a really long way, but it will really make a very huge difference. Another point is help them to grow.
00:22:21 [W] Don't just grab their keyboards always ask first. I have seen this in many communities and organizations and this is really harmful grabbing.
00:22:31 [W] Someone's keyboard and solving problem for them when they users or contributors are getting more ideas about your project. You need to make sure that the wheel is running continuously by William in the process of turning
00:22:46 [W] Notice because you will not always be there project will keep growing and it will need new maintainers to maintain them.
00:22:47 [W] There should be a healthy environment so that they can turn into maintainers of the project after certain amount of time and also help the other users.
00:22:59 [W] Last but not the least use inclusive language by inclusive language.
00:23:05 [W] I mean don't use the words like easy obviously just after blue TW or guys because if something is obvious to you doesn't necessarily mean obvious to another person
00:23:20 [W] It's not obvious. It clearly states you are insulting someone so try to not use these type of words in GitHub pull request forms or discussions. There are many times when your tone is missed interrupted by
00:23:28 [W] sudden, so maybe add some emojis to that use some encouraging words and try to explain things constructively as well as politely
00:23:35 [W] so to sum up encourage asking questions create healthy environment explain the process and reason help them to grow use inclusive language.
00:23:49 [W] Successful and healthy community building a successful and healthy Community takes a long time.
00:23:55 [W] But after a certain point of time, the result will be so sweet contributors will become maintainers and this chain will keep increasing over the time.
00:24:05 [W] But the main point here is to keep in mind that don't push your support too much.
00:24:11 [W] You should have a balanced for the same because if you push them too hard or too far it can discourage them.
00:24:19 [W] I'm backfired the same time and if you keep supporting and helping them at every point, they will not learn how to solve problems on their own keep a balance for the same because that's how we grow into successful and healthy community.
00:24:34 [W] So yeah, that's all about this talk.
00:24:34 [W] Thank you so much everyone and I have mentioned my handles.
00:24:38 [W] Feel free to ping me if you need any kind of help or support or have any questions regarding this stock again.
00:24:46 [W] Thank you so much everyone.
